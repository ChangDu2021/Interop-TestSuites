//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S05_SyncICSHierarchyDeleteCheck_TestSuite : PtfTestClassBase {
        
        public S05_SyncICSHierarchyDeleteCheck_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp230 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp230 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S5\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S6");
                this.Manager.Comment("reaching state \'S7\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S8");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S8");
                this.Manager.Comment("reaching state \'S9\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S10");
                this.Manager.Comment("reaching state \'S11\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S12");
                this.Manager.Comment("reaching state \'S13\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "synchronizationHandleIndex of SynchronizationOpenCollector, state S14");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SynchronizationOpenCollector, state S14");
                this.Manager.Comment("reaching state \'S15\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChange(1,4,3,{\"PidTagFolderTyp" +
                        "e\"},0,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChange(1, 4, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                "Rep"}, new object[] {
                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                "Element"}, new object[] {
                                                Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R816");
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChange/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp12, "folderIdIndex of SynchronizationImportHierarchyChange, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationImportHierarchyChange, state S16");
                this.Manager.Comment("reaching state \'S17\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                        "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAttachLongFilename",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp14, "downloadcontextHandleIndex of SynchronizationConfigure, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SynchronizationConfigure, state S18");
                this.Manager.Comment("reaching state \'S19\'");
                bool temp16;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp16);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp16);
                this.Manager.Comment("reaching state \'S20\'");
                int temp229 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker15)));
                if ((temp229 == 0)) {
                    this.Manager.Comment("reaching state \'S21\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagIdsetGiven,True,0)\'");
                    temp17 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S23\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp17, "return of SynchronizationUploadState, state S23");
                    this.Manager.Comment("reaching state \'S25\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagCnsetSeen,False,0)\'");
                    temp18 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S27\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of SynchronizationUploadState, state S27");
                    this.Manager.Comment("reaching state \'S29\'");
                    int temp19;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp20;
                    bool temp21;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                    temp22 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp19, out temp20, out temp21);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S31\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "True),FolderCount=1,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiv" +
                            "en={3},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild=F" +
                            "alse,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstrac" +
                            "tContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null," +
                            "AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPi" +
                            "dTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadState" +
                            "ChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTim" +
                            "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                            "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                            "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                            "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                            "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                            "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                            "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                            "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                            "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                            "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                            "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                            ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                            "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                            "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                            "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                            "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                            "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                            "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                            "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                            "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                            "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                            ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                            "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                            "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                            "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                            "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                            "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                            " False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp19, "transferBufferIndex of FastTransferSourceGetBuffer, state S31");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            true}),
                                                1,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp20, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S31");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp21, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S31");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of FastTransferSourceGetBuffer, state S31");
                    this.Manager.Comment("reaching state \'S33\'");
                    int temp23;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                    this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,Initial,out _)\'");
                    temp24 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp23);
                    this.Manager.Comment("reaching state \'S35\'");
                    this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp23, "rowCount of GetHierarchyTable, state S35");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of GetHierarchyTable, state S35");
                    this.Manager.Comment("reaching state \'S37\'");
                    int temp25;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                    temp26 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp25);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S39\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp25, "synchronizationHandleIndex of SynchronizationOpenCollector, state S39");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of SynchronizationOpenCollector, state S39");
                    this.Manager.Comment("reaching state \'S41\'");
                    bool temp27;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp27);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp27);
                    this.Manager.Comment("reaching state \'S43\'");
                    int temp122 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker8)));
                    if ((temp122 == 0)) {
                        this.Manager.Comment("reaching state \'S45\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,4,[3],3)\'");
                        temp28 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 4, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 3);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S49\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of SynchronizationImportDeletes, state S49");
                        this.Manager.Comment("reaching state \'S53\'");
                        int temp29;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp30 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp29);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S57\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp29, "downloadcontextHandleIndex of SynchronizationConfigure, state S57");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of SynchronizationConfigure, state S57");
                        this.Manager.Comment("reaching state \'S61\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                        temp31 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S65\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp31, "return of SynchronizationUploadState, state S65");
                        this.Manager.Comment("reaching state \'S69\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                        temp32 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S73\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of SynchronizationUploadState, state S73");
                        this.Manager.Comment("reaching state \'S77\'");
                        bool temp33;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp33);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp33);
                        this.Manager.Comment("reaching state \'S81\'");
                        int temp74 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker5)));
                        if ((temp74 == 0)) {
                            this.Manager.Comment("reaching state \'S85\'");
                            int temp34;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp35;
                            bool temp36;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp37 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp34, out temp35, out temp36);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S93\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={}," +
                                    "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstra" +
                                    "ctContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null" +
                                    ",AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiv" +
                                    "en=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTi" +
                                    "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                    "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                    "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                    "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                    "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                    "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                    "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                    "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                    "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                    "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                    "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                    "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                    "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                    "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                    "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                    "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                    "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                    "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                    "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                    "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                    "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                    "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                    "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                    "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                    "t False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp34, "transferBufferIndex of FastTransferSourceGetBuffer, state S93");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp35, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S93");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp36, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S93");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of FastTransferSourceGetBuffer, state S93");
                            this.Manager.Comment("reaching state \'S101\'");
                            bool temp38;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp38);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp38);
                            this.Manager.Comment("reaching state \'S109\'");
                            int temp53 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker3)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker4)));
                            if ((temp53 == 0)) {
                                this.Manager.Comment("reaching state \'S117\'");
                                int temp39;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp40 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp39);
                                this.Manager.Comment("reaching state \'S133\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp39, "rowCount of GetHierarchyTable, state S133");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of GetHierarchyTable, state S133");
                                this.Manager.Comment("reaching state \'S149\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp41 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S165\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of SetLocalReplicaMidsetDeleted, state S165");
                                this.Manager.Comment("reaching state \'S181\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp42 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S197\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of Release, state S197");
                                this.Manager.Comment("reaching state \'S213\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp43 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S229\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of Release, state S229");
                                this.Manager.Comment("reaching state \'S245\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp44 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S261\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of Release, state S261");
                                this.Manager.Comment("reaching state \'S277\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp45 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S293\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of Release, state S293");
                                this.Manager.Comment("reaching state \'S309\'");
                                goto label0;
                            }
                            if ((temp53 == 1)) {
                                this.Manager.Comment("reaching state \'S118\'");
                                int temp46;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp47 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp46);
                                this.Manager.Comment("reaching state \'S134\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp46, "rowCount of GetHierarchyTable, state S134");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of GetHierarchyTable, state S134");
                                this.Manager.Comment("reaching state \'S150\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp48 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S166\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of SetLocalReplicaMidsetDeleted, state S166");
                                this.Manager.Comment("reaching state \'S182\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp49 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S198\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of Release, state S198");
                                this.Manager.Comment("reaching state \'S214\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp50 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S230\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of Release, state S230");
                                this.Manager.Comment("reaching state \'S246\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp51 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S262\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of Release, state S262");
                                this.Manager.Comment("reaching state \'S278\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp52 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S294\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of Release, state S294");
                                this.Manager.Comment("reaching state \'S310\'");
                                goto label0;
                            }
                            throw new InvalidOperationException("never reached");
                        label0:
;
                            goto label2;
                        }
                        if ((temp74 == 1)) {
                            this.Manager.Comment("reaching state \'S86\'");
                            int temp54;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp55;
                            bool temp56;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp57 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp54, out temp55, out temp56);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S94\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3}" +
                                    ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                    "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                    "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                    "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp54, "transferBufferIndex of FastTransferSourceGetBuffer, state S94");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp55, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S94");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp56, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S94");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of FastTransferSourceGetBuffer, state S94");
                            this.Manager.Comment("reaching state \'S102\'");
                            bool temp58;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp58);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp58);
                            this.Manager.Comment("reaching state \'S110\'");
                            int temp73 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker6)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker7)));
                            if ((temp73 == 0)) {
                                this.Manager.Comment("reaching state \'S119\'");
                                int temp59;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp60 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp59);
                                this.Manager.Comment("reaching state \'S135\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp59, "rowCount of GetHierarchyTable, state S135");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp60, "return of GetHierarchyTable, state S135");
                                this.Manager.Comment("reaching state \'S151\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp61 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S167\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of SetLocalReplicaMidsetDeleted, state S167");
                                this.Manager.Comment("reaching state \'S183\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp62 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S199\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of Release, state S199");
                                this.Manager.Comment("reaching state \'S215\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp63 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S231\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of Release, state S231");
                                this.Manager.Comment("reaching state \'S247\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp64 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S263\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of Release, state S263");
                                this.Manager.Comment("reaching state \'S279\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp65 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S295\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Release, state S295");
                                this.Manager.Comment("reaching state \'S311\'");
                                goto label1;
                            }
                            if ((temp73 == 1)) {
                                this.Manager.Comment("reaching state \'S120\'");
                                int temp66;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp67 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp66);
                                this.Manager.Comment("reaching state \'S136\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp66, "rowCount of GetHierarchyTable, state S136");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of GetHierarchyTable, state S136");
                                this.Manager.Comment("reaching state \'S152\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp68 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S168\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of SetLocalReplicaMidsetDeleted, state S168");
                                this.Manager.Comment("reaching state \'S184\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp69 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S200\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of Release, state S200");
                                this.Manager.Comment("reaching state \'S216\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp70 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S232\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of Release, state S232");
                                this.Manager.Comment("reaching state \'S248\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp71 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S264\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of Release, state S264");
                                this.Manager.Comment("reaching state \'S280\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp72 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S296\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of Release, state S296");
                                this.Manager.Comment("reaching state \'S312\'");
                                goto label1;
                            }
                            throw new InvalidOperationException("never reached");
                        label1:
;
                            goto label2;
                        }
                        throw new InvalidOperationException("never reached");
                    label2:
;
                        goto label6;
                    }
                    if ((temp122 == 1)) {
                        this.Manager.Comment("reaching state \'S46\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,4,[3],3)\'");
                        temp75 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 4, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 3);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S50\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of SynchronizationImportDeletes, state S50");
                        this.Manager.Comment("reaching state \'S54\'");
                        int temp76;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp77 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp76);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S58\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp76, "downloadcontextHandleIndex of SynchronizationConfigure, state S58");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of SynchronizationConfigure, state S58");
                        this.Manager.Comment("reaching state \'S62\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                        temp78 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Comment("reaching state \'S66\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp78, "return of SynchronizationUploadState, state S66");
                        this.Manager.Comment("reaching state \'S70\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                        temp79 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S74\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of SynchronizationUploadState, state S74");
                        this.Manager.Comment("reaching state \'S78\'");
                        bool temp80;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp80);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp80);
                        this.Manager.Comment("reaching state \'S82\'");
                        int temp121 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker9)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker12)));
                        if ((temp121 == 0)) {
                            this.Manager.Comment("reaching state \'S87\'");
                            int temp81;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp82;
                            bool temp83;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp84 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp81, out temp82, out temp83);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S95\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={}," +
                                    "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstra" +
                                    "ctContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null" +
                                    ",AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiv" +
                                    "en=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTi" +
                                    "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                    "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                    "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                    "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                    "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                    "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                    "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                    "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                    "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                    "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                    "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                    "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                    "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                    "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                    "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                    "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                    "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                    "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                    "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                    "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                    "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                    "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                    "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                    "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                    "t False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp81, "transferBufferIndex of FastTransferSourceGetBuffer, state S95");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp82, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S95");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp83, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S95");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of FastTransferSourceGetBuffer, state S95");
                            this.Manager.Comment("reaching state \'S103\'");
                            bool temp85;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp85);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp85);
                            this.Manager.Comment("reaching state \'S111\'");
                            int temp100 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker10)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker11)));
                            if ((temp100 == 0)) {
                                this.Manager.Comment("reaching state \'S121\'");
                                int temp86;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp87 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp86);
                                this.Manager.Comment("reaching state \'S137\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp86, "rowCount of GetHierarchyTable, state S137");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of GetHierarchyTable, state S137");
                                this.Manager.Comment("reaching state \'S153\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp88 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S169\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of SetLocalReplicaMidsetDeleted, state S169");
                                this.Manager.Comment("reaching state \'S185\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp89 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S201\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of Release, state S201");
                                this.Manager.Comment("reaching state \'S217\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp90 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S233\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of Release, state S233");
                                this.Manager.Comment("reaching state \'S249\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp91 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S265\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of Release, state S265");
                                this.Manager.Comment("reaching state \'S281\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp92;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp92 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S297\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp92, "return of Release, state S297");
                                this.Manager.Comment("reaching state \'S313\'");
                                goto label3;
                            }
                            if ((temp100 == 1)) {
                                this.Manager.Comment("reaching state \'S122\'");
                                int temp93;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp94 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp93);
                                this.Manager.Comment("reaching state \'S138\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp93, "rowCount of GetHierarchyTable, state S138");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of GetHierarchyTable, state S138");
                                this.Manager.Comment("reaching state \'S154\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp95;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp95 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S170\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp95, "return of SetLocalReplicaMidsetDeleted, state S170");
                                this.Manager.Comment("reaching state \'S186\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp96 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S202\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of Release, state S202");
                                this.Manager.Comment("reaching state \'S218\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp97 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S234\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of Release, state S234");
                                this.Manager.Comment("reaching state \'S250\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp98;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp98 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S266\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp98, "return of Release, state S266");
                                this.Manager.Comment("reaching state \'S282\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp99 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S298\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of Release, state S298");
                                this.Manager.Comment("reaching state \'S314\'");
                                goto label3;
                            }
                            throw new InvalidOperationException("never reached");
                        label3:
;
                            goto label5;
                        }
                        if ((temp121 == 1)) {
                            this.Manager.Comment("reaching state \'S88\'");
                            int temp101;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp102;
                            bool temp103;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp104 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp101, out temp102, out temp103);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S96\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3}" +
                                    ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                    "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                    "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                    "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp101, "transferBufferIndex of FastTransferSourceGetBuffer, state S96");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp102, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S96");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp103, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S96");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of FastTransferSourceGetBuffer, state S96");
                            this.Manager.Comment("reaching state \'S104\'");
                            bool temp105;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp105);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp105);
                            this.Manager.Comment("reaching state \'S112\'");
                            int temp120 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker13)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker14)));
                            if ((temp120 == 0)) {
                                this.Manager.Comment("reaching state \'S123\'");
                                int temp106;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp107 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp106);
                                this.Manager.Comment("reaching state \'S139\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp106, "rowCount of GetHierarchyTable, state S139");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp107, "return of GetHierarchyTable, state S139");
                                this.Manager.Comment("reaching state \'S155\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp108 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S171\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of SetLocalReplicaMidsetDeleted, state S171");
                                this.Manager.Comment("reaching state \'S187\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp109 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S203\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp109, "return of Release, state S203");
                                this.Manager.Comment("reaching state \'S219\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp110 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S235\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp110, "return of Release, state S235");
                                this.Manager.Comment("reaching state \'S251\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp111 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S267\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of Release, state S267");
                                this.Manager.Comment("reaching state \'S283\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp112 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S299\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of Release, state S299");
                                this.Manager.Comment("reaching state \'S315\'");
                                goto label4;
                            }
                            if ((temp120 == 1)) {
                                this.Manager.Comment("reaching state \'S124\'");
                                int temp113;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp114 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp113);
                                this.Manager.Comment("reaching state \'S140\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp113, "rowCount of GetHierarchyTable, state S140");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp114, "return of GetHierarchyTable, state S140");
                                this.Manager.Comment("reaching state \'S156\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp115 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S172\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of SetLocalReplicaMidsetDeleted, state S172");
                                this.Manager.Comment("reaching state \'S188\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp116 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S204\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of Release, state S204");
                                this.Manager.Comment("reaching state \'S220\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp117 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S236\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of Release, state S236");
                                this.Manager.Comment("reaching state \'S252\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp118;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp118 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S268\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp118, "return of Release, state S268");
                                this.Manager.Comment("reaching state \'S284\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp119;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp119 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S300\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp119, "return of Release, state S300");
                                this.Manager.Comment("reaching state \'S316\'");
                                goto label4;
                            }
                            throw new InvalidOperationException("never reached");
                        label4:
;
                            goto label5;
                        }
                        throw new InvalidOperationException("never reached");
                    label5:
;
                        goto label6;
                    }
                    throw new InvalidOperationException("never reached");
                label6:
;
                    goto label14;
                }
                if ((temp229 == 1)) {
                    this.Manager.Comment("reaching state \'S22\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagIdsetGiven,True,0)\'");
                    temp123 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S24\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of SynchronizationUploadState, state S24");
                    this.Manager.Comment("reaching state \'S26\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp124;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagCnsetSeen,False,0)\'");
                    temp124 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S28\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp124, "return of SynchronizationUploadState, state S28");
                    this.Manager.Comment("reaching state \'S30\'");
                    int temp125;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp126;
                    bool temp127;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                    temp128 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp125, out temp126, out temp127);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S32\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                            "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                            "True),FolderCount=1,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiv" +
                            "en={3},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild=F" +
                            "alse,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstrac" +
                            "tContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null," +
                            "AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPi" +
                            "dTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadState" +
                            "ChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTim" +
                            "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                            "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                            "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                            "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                            "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                            "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                            "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                            "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                            "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                            "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                            "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                            ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                            "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                            "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                            "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                            "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                            "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                            "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                            "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                            "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                            "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                            "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                            "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                            "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                            "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                            "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                            ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                            "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                            "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                            "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                            "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                            "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                            " False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp125, "transferBufferIndex of FastTransferSourceGetBuffer, state S32");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            true,
                                                            true,
                                                            false,
                                                            true}),
                                                1,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp126, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S32");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp127, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S32");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of FastTransferSourceGetBuffer, state S32");
                    this.Manager.Comment("reaching state \'S34\'");
                    int temp129;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                    this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,Initial,out _)\'");
                    temp130 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags)(0)), out temp129);
                    this.Manager.Comment("reaching state \'S36\'");
                    this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp129, "rowCount of GetHierarchyTable, state S36");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of GetHierarchyTable, state S36");
                    this.Manager.Comment("reaching state \'S38\'");
                    int temp131;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                    temp132 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp131);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S40\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp131, "synchronizationHandleIndex of SynchronizationOpenCollector, state S40");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of SynchronizationOpenCollector, state S40");
                    this.Manager.Comment("reaching state \'S42\'");
                    bool temp133;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2593,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2593, out temp133);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp133);
                    this.Manager.Comment("reaching state \'S44\'");
                    int temp228 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker16)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker23)));
                    if ((temp228 == 0)) {
                        this.Manager.Comment("reaching state \'S47\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp134;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,4,[3],3)\'");
                        temp134 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 4, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 3);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S51\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp134, "return of SynchronizationImportDeletes, state S51");
                        this.Manager.Comment("reaching state \'S55\'");
                        int temp135;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp136;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp136 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp135);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S59\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp135, "downloadcontextHandleIndex of SynchronizationConfigure, state S59");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp136, "return of SynchronizationConfigure, state S59");
                        this.Manager.Comment("reaching state \'S63\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp137;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                        temp137 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S67\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp137, "return of SynchronizationUploadState, state S67");
                        this.Manager.Comment("reaching state \'S71\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp138;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                        temp138 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S75\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp138, "return of SynchronizationUploadState, state S75");
                        this.Manager.Comment("reaching state \'S79\'");
                        bool temp139;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp139);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp139);
                        this.Manager.Comment("reaching state \'S83\'");
                        int temp180 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker17)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker20)));
                        if ((temp180 == 0)) {
                            this.Manager.Comment("reaching state \'S89\'");
                            int temp140;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp141;
                            bool temp142;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp143 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp140, out temp141, out temp142);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S97\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={}," +
                                    "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstra" +
                                    "ctContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null" +
                                    ",AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiv" +
                                    "en=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTi" +
                                    "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                    "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                    "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                    "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                    "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                    "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                    "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                    "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                    "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                    "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                    "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                    "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                    "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                    "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                    "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                    "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                    "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                    "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                    "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                    "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                    "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                    "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                    "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                    "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                    "t False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp140, "transferBufferIndex of FastTransferSourceGetBuffer, state S97");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp141, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S97");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp142, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S97");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of FastTransferSourceGetBuffer, state S97");
                            this.Manager.Comment("reaching state \'S105\'");
                            bool temp144;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp144);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp144);
                            this.Manager.Comment("reaching state \'S113\'");
                            int temp159 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker18)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker19)));
                            if ((temp159 == 0)) {
                                this.Manager.Comment("reaching state \'S125\'");
                                int temp145;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp146 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp145);
                                this.Manager.Comment("reaching state \'S141\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp145, "rowCount of GetHierarchyTable, state S141");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of GetHierarchyTable, state S141");
                                this.Manager.Comment("reaching state \'S157\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp147;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp147 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S173\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp147, "return of SetLocalReplicaMidsetDeleted, state S173");
                                this.Manager.Comment("reaching state \'S189\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp148;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp148 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S205\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp148, "return of Release, state S205");
                                this.Manager.Comment("reaching state \'S221\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp149 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S237\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp149, "return of Release, state S237");
                                this.Manager.Comment("reaching state \'S253\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp150;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp150 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S269\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp150, "return of Release, state S269");
                                this.Manager.Comment("reaching state \'S285\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp151 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S301\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of Release, state S301");
                                this.Manager.Comment("reaching state \'S317\'");
                                goto label7;
                            }
                            if ((temp159 == 1)) {
                                this.Manager.Comment("reaching state \'S126\'");
                                int temp152;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp153;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp153 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp152);
                                this.Manager.Comment("reaching state \'S142\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp152, "rowCount of GetHierarchyTable, state S142");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp153, "return of GetHierarchyTable, state S142");
                                this.Manager.Comment("reaching state \'S158\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp154;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp154 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S174\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp154, "return of SetLocalReplicaMidsetDeleted, state S174");
                                this.Manager.Comment("reaching state \'S190\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp155 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S206\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of Release, state S206");
                                this.Manager.Comment("reaching state \'S222\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp156;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp156 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S238\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp156, "return of Release, state S238");
                                this.Manager.Comment("reaching state \'S254\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp157 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S270\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of Release, state S270");
                                this.Manager.Comment("reaching state \'S286\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp158;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp158 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S302\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp158, "return of Release, state S302");
                                this.Manager.Comment("reaching state \'S318\'");
                                goto label7;
                            }
                            throw new InvalidOperationException("never reached");
                        label7:
;
                            goto label9;
                        }
                        if ((temp180 == 1)) {
                            this.Manager.Comment("reaching state \'S90\'");
                            int temp160;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp161;
                            bool temp162;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp163 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp160, out temp161, out temp162);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S98\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3}" +
                                    ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                    "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                    "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                    "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp160, "transferBufferIndex of FastTransferSourceGetBuffer, state S98");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp161, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S98");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp162, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S98");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of FastTransferSourceGetBuffer, state S98");
                            this.Manager.Comment("reaching state \'S106\'");
                            bool temp164;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp164);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp164);
                            this.Manager.Comment("reaching state \'S114\'");
                            int temp179 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker21)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker22)));
                            if ((temp179 == 0)) {
                                this.Manager.Comment("reaching state \'S127\'");
                                int temp165;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp166;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp166 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp165);
                                this.Manager.Comment("reaching state \'S143\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp165, "rowCount of GetHierarchyTable, state S143");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp166, "return of GetHierarchyTable, state S143");
                                this.Manager.Comment("reaching state \'S159\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp167 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S175\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of SetLocalReplicaMidsetDeleted, state S175");
                                this.Manager.Comment("reaching state \'S191\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp168 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S207\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of Release, state S207");
                                this.Manager.Comment("reaching state \'S223\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp169 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S239\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of Release, state S239");
                                this.Manager.Comment("reaching state \'S255\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp170 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S271\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of Release, state S271");
                                this.Manager.Comment("reaching state \'S287\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp171 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S303\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of Release, state S303");
                                this.Manager.Comment("reaching state \'S319\'");
                                goto label8;
                            }
                            if ((temp179 == 1)) {
                                this.Manager.Comment("reaching state \'S128\'");
                                int temp172;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp173;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp173 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp172);
                                this.Manager.Comment("reaching state \'S144\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp172, "rowCount of GetHierarchyTable, state S144");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp173, "return of GetHierarchyTable, state S144");
                                this.Manager.Comment("reaching state \'S160\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp174;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp174 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S176\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp174, "return of SetLocalReplicaMidsetDeleted, state S176");
                                this.Manager.Comment("reaching state \'S192\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp175 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S208\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of Release, state S208");
                                this.Manager.Comment("reaching state \'S224\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp176;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp176 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S240\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp176, "return of Release, state S240");
                                this.Manager.Comment("reaching state \'S256\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp177 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S272\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of Release, state S272");
                                this.Manager.Comment("reaching state \'S288\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp178 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S304\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of Release, state S304");
                                this.Manager.Comment("reaching state \'S320\'");
                                goto label8;
                            }
                            throw new InvalidOperationException("never reached");
                        label8:
;
                            goto label9;
                        }
                        throw new InvalidOperationException("never reached");
                    label9:
;
                        goto label13;
                    }
                    if ((temp228 == 1)) {
                        this.Manager.Comment("reaching state \'S48\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp181;
                        this.Manager.Comment("executing step \'call SynchronizationImportDeletes(1,4,[3],3)\'");
                        temp181 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportDeletes(1, 4, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    3,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), 3);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R884");
                        this.Manager.Comment("reaching state \'S52\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportDeletes/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp181, "return of SynchronizationImportDeletes, state S52");
                        this.Manager.Comment("reaching state \'S56\'");
                        int temp182;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp183;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp183 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp182);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S60\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp182, "downloadcontextHandleIndex of SynchronizationConfigure, state S60");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp183, "return of SynchronizationConfigure, state S60");
                        this.Manager.Comment("reaching state \'S64\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,1)\'");
                        temp184 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S68\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp184, "return of SynchronizationUploadState, state S68");
                        this.Manager.Comment("reaching state \'S72\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp185;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,1)\'");
                        temp185 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                        this.Manager.Comment("reaching state \'S76\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp185, "return of SynchronizationUploadState, state S76");
                        this.Manager.Comment("reaching state \'S80\'");
                        bool temp186;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(2652,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2652, out temp186);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp186);
                        this.Manager.Comment("reaching state \'S84\'");
                        int temp227 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker24)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker27)));
                        if ((temp227 == 0)) {
                            this.Manager.Comment("reaching state \'S91\'");
                            int temp187;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp188;
                            bool temp189;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp190 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp187, out temp188, out temp189);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S99\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={}," +
                                    "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstra" +
                                    "ctContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null" +
                                    ",AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsP" +
                                    "idTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStat" +
                                    "eChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGiv" +
                                    "en=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChange" +
                                    "Number=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTi" +
                                    "me=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolde" +
                                    "rContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXF" +
                                    "olderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubF" +
                                    "olderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFo" +
                                    "lderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPi" +
                                    "dTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCo" +
                                    "ntent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildr" +
                                    "en(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=" +
                                    "False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,S" +
                                    "tringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Ab" +
                                    "stractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fals" +
                                    "e,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotO" +
                                    "ut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fal" +
                                    "se,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelP" +
                                    "rop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                    "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Ab" +
                                    "stractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,I" +
                                    "sNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fa" +
                                    "lse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                    "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                    "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                    "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                    "e,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOu" +
                                    "t=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermi" +
                                    "ssionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPr" +
                                    "ecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPr" +
                                    "opertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperties" +
                                    "InOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),ou" +
                                    "t False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp187, "transferBufferIndex of FastTransferSourceGetBuffer, state S99");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp188, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S99");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp189, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S99");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of FastTransferSourceGetBuffer, state S99");
                            this.Manager.Comment("reaching state \'S107\'");
                            bool temp191;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp191);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp191);
                            this.Manager.Comment("reaching state \'S115\'");
                            int temp206 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker25)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker26)));
                            if ((temp206 == 0)) {
                                this.Manager.Comment("reaching state \'S129\'");
                                int temp192;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp193 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp192);
                                this.Manager.Comment("reaching state \'S145\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp192, "rowCount of GetHierarchyTable, state S145");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of GetHierarchyTable, state S145");
                                this.Manager.Comment("reaching state \'S161\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp194;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp194 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S177\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp194, "return of SetLocalReplicaMidsetDeleted, state S177");
                                this.Manager.Comment("reaching state \'S193\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp195;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp195 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S209\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp195, "return of Release, state S209");
                                this.Manager.Comment("reaching state \'S225\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp196;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp196 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S241\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp196, "return of Release, state S241");
                                this.Manager.Comment("reaching state \'S257\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp197;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp197 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S273\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp197, "return of Release, state S273");
                                this.Manager.Comment("reaching state \'S289\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp198;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp198 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S305\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp198, "return of Release, state S305");
                                this.Manager.Comment("reaching state \'S321\'");
                                goto label10;
                            }
                            if ((temp206 == 1)) {
                                this.Manager.Comment("reaching state \'S130\'");
                                int temp199;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp200 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp199);
                                this.Manager.Comment("reaching state \'S146\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp199, "rowCount of GetHierarchyTable, state S146");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of GetHierarchyTable, state S146");
                                this.Manager.Comment("reaching state \'S162\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp201 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S178\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of SetLocalReplicaMidsetDeleted, state S178");
                                this.Manager.Comment("reaching state \'S194\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp202;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp202 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S210\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp202, "return of Release, state S210");
                                this.Manager.Comment("reaching state \'S226\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp203 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S242\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of Release, state S242");
                                this.Manager.Comment("reaching state \'S258\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp204;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp204 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S274\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp204, "return of Release, state S274");
                                this.Manager.Comment("reaching state \'S290\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp205 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S306\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of Release, state S306");
                                this.Manager.Comment("reaching state \'S322\'");
                                goto label10;
                            }
                            throw new InvalidOperationException("never reached");
                        label10:
;
                            goto label12;
                        }
                        if ((temp227 == 1)) {
                            this.Manager.Comment("reaching state \'S92\'");
                            int temp207;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp208;
                            bool temp209;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp210;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                            temp210 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp207, out temp208, out temp209);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                            this.Manager.Checkpoint("MS-OXCFXICS_R716001");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1333");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2046");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1337002");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2045");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2652");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2167");
                            this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S100\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                    "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSet" +
                                    "Given={},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                    "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=True,IdSetDeleted={3}" +
                                    ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                    "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                    "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                    "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                    "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                    "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                    "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                    "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                    "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                    "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                    "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                    "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                    "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                    "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                    "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                    "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                    "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                    "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                    "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                    "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                    "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                    "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                    "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                    "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                    "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                    "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                    "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                    "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                    "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                    "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                    "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                    "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                    "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                    "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                    "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                    "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                    "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                    "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                    "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                    "ut False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp207, "transferBufferIndex of FastTransferSourceGetBuffer, state S100");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    2,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                    false,
                                                                    false,
                                                                    true}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    true,
                                                                    this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                                "Rep"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp208, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S100");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp209, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S100");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp210, "return of FastTransferSourceGetBuffer, state S100");
                            this.Manager.Comment("reaching state \'S108\'");
                            bool temp211;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(90205002,out _)\'");
                            this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(90205002, out temp211);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp211);
                            this.Manager.Comment("reaching state \'S116\'");
                            int temp226 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker28)), new ExpectedReturn(S05_SyncICSHierarchyDeleteCheck_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker29)));
                            if ((temp226 == 0)) {
                                this.Manager.Comment("reaching state \'S131\'");
                                int temp212;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp213 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp212);
                                this.Manager.Comment("reaching state \'S147\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out -1]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp212, "rowCount of GetHierarchyTable, state S147");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of GetHierarchyTable, state S147");
                                this.Manager.Comment("reaching state \'S163\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp214;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp214 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S179\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp214, "return of SetLocalReplicaMidsetDeleted, state S179");
                                this.Manager.Comment("reaching state \'S195\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp215;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S211\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp215, "return of Release, state S211");
                                this.Manager.Comment("reaching state \'S227\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp216 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S243\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of Release, state S243");
                                this.Manager.Comment("reaching state \'S259\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp217;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp217 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S275\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp217, "return of Release, state S275");
                                this.Manager.Comment("reaching state \'S291\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp218;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp218 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S307\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp218, "return of Release, state S307");
                                this.Manager.Comment("reaching state \'S323\'");
                                goto label11;
                            }
                            if ((temp226 == 1)) {
                                this.Manager.Comment("reaching state \'S132\'");
                                int temp219;
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp220;
                                this.Manager.Comment("executing step \'call GetHierarchyTable(1,3,HardDeleteCheck,out _)\'");
                                temp220 = this.IMS_OXCFXICSAdapterInstance.GetHierarchyTable(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.DeleteFlags.HardDeleteCheck, out temp219);
                                this.Manager.Comment("reaching state \'S148\'");
                                this.Manager.Comment("checking step \'return GetHierarchyTable/[out 0]:Success\'");
                                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 0, temp219, "rowCount of GetHierarchyTable, state S148");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp220, "return of GetHierarchyTable, state S148");
                                this.Manager.Comment("reaching state \'S164\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp221;
                                this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[1,2])\'");
                                temp221 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                                "Rep"}, new object[] {
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        2,
                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})})}));
                                this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                                this.Manager.Checkpoint("MS-OXCFXICS_R940");
                                this.Manager.Comment("reaching state \'S180\'");
                                this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp221, "return of SetLocalReplicaMidsetDeleted, state S180");
                                this.Manager.Comment("reaching state \'S196\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp222;
                                this.Manager.Comment("executing step \'call Release(1,7)\'");
                                temp222 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                                this.Manager.Comment("reaching state \'S212\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp222, "return of Release, state S212");
                                this.Manager.Comment("reaching state \'S228\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp223;
                                this.Manager.Comment("executing step \'call Release(1,5)\'");
                                temp223 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                                this.Manager.Comment("reaching state \'S244\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp223, "return of Release, state S244");
                                this.Manager.Comment("reaching state \'S260\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp224;
                                this.Manager.Comment("executing step \'call Release(1,4)\'");
                                temp224 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                                this.Manager.Comment("reaching state \'S276\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp224, "return of Release, state S276");
                                this.Manager.Comment("reaching state \'S292\'");
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp225;
                                this.Manager.Comment("executing step \'call Release(1,6)\'");
                                temp225 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                                this.Manager.Comment("reaching state \'S308\'");
                                this.Manager.Comment("checking step \'return Release/Success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp225, "return of Release, state S308");
                                this.Manager.Comment("reaching state \'S324\'");
                                goto label11;
                            }
                            throw new InvalidOperationException("never reached");
                        label11:
;
                            goto label12;
                        }
                        throw new InvalidOperationException("never reached");
                    label12:
;
                        goto label13;
                    }
                    throw new InvalidOperationException("never reached");
                label13:
;
                    goto label14;
                }
                throw new InvalidOperationException("never reached");
            label14:
;
                goto label15;
            }
            if ((temp230 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S20");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S43");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S81");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S109");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S109");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S81");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S110");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S110");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S43");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S82");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S111");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S111");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S82");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S112");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S112");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S20");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S44");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S83");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S113");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S113");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S83");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S114");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S114");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S44");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S84");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S115");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S115");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S84");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S116");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S116");
        }
        
        private void MSOXCFXICS_S05_SyncICSHierarchyDeleteCheck_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}