//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSContentAllMessage_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSContentAllMessage_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp176 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp176 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S5\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S6");
                this.Manager.Comment("reaching state \'S7\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S8");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S8");
                this.Manager.Comment("reaching state \'S9\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S10");
                this.Manager.Comment("reaching state \'S11\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S12");
                this.Manager.Comment("reaching state \'S13\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "synchronizationHandleIndex of SynchronizationOpenCollector, state S14");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SynchronizationOpenCollector, state S14");
                this.Manager.Comment("reaching state \'S15\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Associated,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, Microsoft.Protocols.TestSuites.Common.ImportFlag.Associated, out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R813");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "importMessageHandleIndex of SynchronizationImportMessageChange, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationImportMessageChange, state S16");
                this.Manager.Comment("reaching state \'S17\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp14, "messageIdIndex of SaveChangesMessage, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S18");
                this.Manager.Comment("reaching state \'S19\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "importMessageHandleIndex of SynchronizationImportMessageChange, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SynchronizationImportMessageChange, state S20");
                this.Manager.Comment("reaching state \'S21\'");
                int temp18;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp19 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp18);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp18, "messageIdIndex of SaveChangesMessage, state S22");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of SaveChangesMessage, state S22");
                this.Manager.Comment("reaching state \'S23\'");
                int temp20;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                        "AI|Normal|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)" +
                        "\'");
                temp21 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16432)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp20);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp20, "downloadcontextHandleIndex of SynchronizationConfigure, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SynchronizationConfigure, state S24");
                this.Manager.Comment("reaching state \'S25\'");
                bool temp22;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp22);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp22);
                this.Manager.Comment("reaching state \'S26\'");
                int temp175 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp175 == 0)) {
                    this.Manager.Comment("reaching state \'S27\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp23 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S29\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp23, "return of SynchronizationUploadState, state S29");
                    this.Manager.Comment("reaching state \'S31\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp24 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S33\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of SynchronizationUploadState, state S33");
                    this.Manager.Comment("reaching state \'S35\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp25 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S37\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of SynchronizationUploadState, state S37");
                    this.Manager.Comment("reaching state \'S39\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp26 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S41\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of SynchronizationUploadState, state S41");
                    this.Manager.Comment("reaching state \'S43\'");
                    int temp27;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp28;
                    bool temp29;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp30 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp27, out temp28, out temp29);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                    this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S45\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                            "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                            "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                            "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                            "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                            "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                            "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                            "lse,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCn" +
                            "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=True,IsN" +
                            "ewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByL" +
                            "astModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEc" +
                            "WarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFo" +
                            "lderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidT" +
                            "agFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecede" +
                            "dByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                            "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                            "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                            "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                            "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                            "herCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Abs" +
                            "FolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObj" +
                            "NotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPr" +
                            "opertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage" +
                            "=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLi" +
                            "st=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessa" +
                            "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                            "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                            "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                            "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                            "e))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex" +
                            "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                            "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                            "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                            "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                            "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                            "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                            "se,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp27, "transferBufferIndex of FastTransferSourceGetBuffer, state S45");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            true,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp28, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S45");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp29, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S45");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of FastTransferSourceGetBuffer, state S45");
                    this.Manager.Comment("reaching state \'S47\'");
                    int temp31;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                            "AI|Normal,OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                    temp32 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(48)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp31);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S49\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp31, "downloadcontextHandleIndex of SynchronizationConfigure, state S49");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of SynchronizationConfigure, state S49");
                    this.Manager.Comment("reaching state \'S51\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,0)\'");
                    temp33 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S53\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp33, "return of SynchronizationUploadState, state S53");
                    this.Manager.Comment("reaching state \'S55\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,0)\'");
                    temp34 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S57\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of SynchronizationUploadState, state S57");
                    this.Manager.Comment("reaching state \'S59\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,0)\'");
                    temp35 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S61\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of SynchronizationUploadState, state S61");
                    this.Manager.Comment("reaching state \'S63\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,0)\'");
                    temp36 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S65\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of SynchronizationUploadState, state S65");
                    this.Manager.Comment("reaching state \'S67\'");
                    bool temp37;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(218300301,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(218300301, out temp37);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp37);
                    this.Manager.Comment("reaching state \'S69\'");
                    int temp98 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp98 == 0)) {
                        this.Manager.Comment("reaching state \'S71\'");
                        int temp38;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp39;
                        bool temp40;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp41 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp38, out temp39, out temp40);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S75\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=True,IsN" +
                                "ewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByL" +
                                "astModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEc" +
                                "WarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFo" +
                                "lderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidT" +
                                "agFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecede" +
                                "dByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Abs" +
                                "FolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObj" +
                                "NotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPr" +
                                "opertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage" +
                                "=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLi" +
                                "st=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex" +
                                "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                                "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessag" +
                                "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                "),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp38, "transferBufferIndex of FastTransferSourceGetBuffer, state S75");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp39, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S75");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp40, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S75");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of FastTransferSourceGetBuffer, state S75");
                        this.Manager.Comment("reaching state \'S79\'");
                        int temp42;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|Normal|OnlySpecifiedProperties,OrderByDeliveryTime,[\"PidTagCreationTime\"],out" +
                                " _)\'");
                        temp43 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(176)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp42);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S83\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp42, "downloadcontextHandleIndex of SynchronizationConfigure, state S83");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of SynchronizationConfigure, state S83");
                        this.Manager.Comment("reaching state \'S87\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp44 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S91\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp44, "return of SynchronizationUploadState, state S91");
                        this.Manager.Comment("reaching state \'S95\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp45 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S99\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of SynchronizationUploadState, state S99");
                        this.Manager.Comment("reaching state \'S103\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp46 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S107\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of SynchronizationUploadState, state S107");
                        this.Manager.Comment("reaching state \'S111\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp47 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S115\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of SynchronizationUploadState, state S115");
                        this.Manager.Comment("reaching state \'S119\'");
                        int temp48;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp49;
                        bool temp50;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp51 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp48, out temp49, out temp50);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S123\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=True,IsN" +
                                "ewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByL" +
                                "astModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEc" +
                                "WarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFo" +
                                "lderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidT" +
                                "agFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecede" +
                                "dByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Abs" +
                                "FolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObj" +
                                "NotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPr" +
                                "opertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage" +
                                "=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLi" +
                                "st=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex" +
                                "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                                "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessag" +
                                "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                "),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp48, "transferBufferIndex of FastTransferSourceGetBuffer, state S123");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp49, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S123");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp50, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S123");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of FastTransferSourceGetBuffer, state S123");
                        this.Manager.Comment("reaching state \'S127\'");
                        int temp52;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,N" +
                                "ormal|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagC" +
                                "reationTime\"],out _)\'");
                        temp53 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16544)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp52);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S131\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp52, "downloadcontextHandleIndex of SynchronizationConfigure, state S131");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of SynchronizationConfigure, state S131");
                        this.Manager.Comment("reaching state \'S135\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagIdsetGiven,True,0)\'");
                        temp54 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S139\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp54, "return of SynchronizationUploadState, state S139");
                        this.Manager.Comment("reaching state \'S143\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeen,False,0)\'");
                        temp55 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S147\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of SynchronizationUploadState, state S147");
                        this.Manager.Comment("reaching state \'S151\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeenFAI,False,0)\'" +
                                "");
                        temp56 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S155\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of SynchronizationUploadState, state S155");
                        this.Manager.Comment("reaching state \'S159\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetRead,False,0)\'");
                        temp57 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S163\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of SynchronizationUploadState, state S163");
                        this.Manager.Comment("reaching state \'S167\'");
                        int temp58;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp59;
                        bool temp60;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp61 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp58, out temp59, out temp60);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2173");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S171\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiven={4},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp58, "transferBufferIndex of FastTransferSourceGetBuffer, state S171");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp59, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S171");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp60, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S171");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of FastTransferSourceGetBuffer, state S171");
                        this.Manager.Comment("reaching state \'S175\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp62 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S179\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of SetLocalReplicaMidsetDeleted, state S179");
                        this.Manager.Comment("reaching state \'S183\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp63 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S187\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of Release, state S187");
                        this.Manager.Comment("reaching state \'S191\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp64 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S195\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of Release, state S195");
                        this.Manager.Comment("reaching state \'S199\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp65 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S203\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Release, state S203");
                        this.Manager.Comment("reaching state \'S207\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp66 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S211\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of Release, state S211");
                        this.Manager.Comment("reaching state \'S215\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp67 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S219\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of Release, state S219");
                        this.Manager.Comment("reaching state \'S223\'");
                        goto label0;
                    }
                    if ((temp98 == 1)) {
                        this.Manager.Comment("reaching state \'S72\'");
                        int temp68;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp69;
                        bool temp70;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp71 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp68, out temp69, out temp70);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S76\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortBy" +
                                "LastModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagE" +
                                "cWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsF" +
                                "olderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPid" +
                                "TagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreced" +
                                "edByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Ab" +
                                "sFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionOb" +
                                "jNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderP" +
                                "ropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessag" +
                                "e=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageL" +
                                "ist=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMess" +
                                "ageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageCh" +
                                "ildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipie" +
                                "ntPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropert" +
                                "iesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fal" +
                                "se))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateInde" +
                                "x=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPr" +
                                "opertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp68, "transferBufferIndex of FastTransferSourceGetBuffer, state S76");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp69, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S76");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp70, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S76");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of FastTransferSourceGetBuffer, state S76");
                        this.Manager.Comment("reaching state \'S80\'");
                        int temp72;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|Normal|OnlySpecifiedProperties,OrderByDeliveryTime,[\"PidTagCreationTime\"],out" +
                                " _)\'");
                        temp73 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(176)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp72);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S84\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp72, "downloadcontextHandleIndex of SynchronizationConfigure, state S84");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of SynchronizationConfigure, state S84");
                        this.Manager.Comment("reaching state \'S88\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp74 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S92\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp74, "return of SynchronizationUploadState, state S92");
                        this.Manager.Comment("reaching state \'S96\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp75 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S100\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of SynchronizationUploadState, state S100");
                        this.Manager.Comment("reaching state \'S104\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp76 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S108\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of SynchronizationUploadState, state S108");
                        this.Manager.Comment("reaching state \'S112\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp77 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S116\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of SynchronizationUploadState, state S116");
                        this.Manager.Comment("reaching state \'S120\'");
                        int temp78;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp79;
                        bool temp80;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp81 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp78, out temp79, out temp80);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S124\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortBy" +
                                "LastModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagE" +
                                "cWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsF" +
                                "olderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPid" +
                                "TagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreced" +
                                "edByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Ab" +
                                "sFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionOb" +
                                "jNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderP" +
                                "ropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessag" +
                                "e=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageL" +
                                "ist=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMess" +
                                "ageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageCh" +
                                "ildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipie" +
                                "ntPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropert" +
                                "iesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fal" +
                                "se))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateInde" +
                                "x=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPr" +
                                "opertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp78, "transferBufferIndex of FastTransferSourceGetBuffer, state S124");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp79, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S124");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp80, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S124");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of FastTransferSourceGetBuffer, state S124");
                        this.Manager.Comment("reaching state \'S128\'");
                        int temp82;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,N" +
                                "ormal|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagC" +
                                "reationTime\"],out _)\'");
                        temp83 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16544)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp82);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S132\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp82, "downloadcontextHandleIndex of SynchronizationConfigure, state S132");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of SynchronizationConfigure, state S132");
                        this.Manager.Comment("reaching state \'S136\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagIdsetGiven,True,0)\'");
                        temp84 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S140\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp84, "return of SynchronizationUploadState, state S140");
                        this.Manager.Comment("reaching state \'S144\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeen,False,0)\'");
                        temp85 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S148\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp85, "return of SynchronizationUploadState, state S148");
                        this.Manager.Comment("reaching state \'S152\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeenFAI,False,0)\'" +
                                "");
                        temp86 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S156\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of SynchronizationUploadState, state S156");
                        this.Manager.Comment("reaching state \'S160\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetRead,False,0)\'");
                        temp87 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S164\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of SynchronizationUploadState, state S164");
                        this.Manager.Comment("reaching state \'S168\'");
                        int temp88;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp89;
                        bool temp90;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp91 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp88, out temp89, out temp90);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2173");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S172\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiven={4},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp88, "transferBufferIndex of FastTransferSourceGetBuffer, state S172");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp89, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S172");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp90, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S172");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of FastTransferSourceGetBuffer, state S172");
                        this.Manager.Comment("reaching state \'S176\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp92;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp92 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S180\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp92, "return of SetLocalReplicaMidsetDeleted, state S180");
                        this.Manager.Comment("reaching state \'S184\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp93;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp93 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S188\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp93, "return of Release, state S188");
                        this.Manager.Comment("reaching state \'S192\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp94 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S196\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of Release, state S196");
                        this.Manager.Comment("reaching state \'S200\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp95;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp95 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S204\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp95, "return of Release, state S204");
                        this.Manager.Comment("reaching state \'S208\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp96 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S212\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of Release, state S212");
                        this.Manager.Comment("reaching state \'S216\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp97 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S220\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of Release, state S220");
                        this.Manager.Comment("reaching state \'S224\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp175 == 1)) {
                    this.Manager.Comment("reaching state \'S28\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp99 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S30\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of SynchronizationUploadState, state S30");
                    this.Manager.Comment("reaching state \'S32\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp100 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S34\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of SynchronizationUploadState, state S34");
                    this.Manager.Comment("reaching state \'S36\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp101 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S38\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp101, "return of SynchronizationUploadState, state S38");
                    this.Manager.Comment("reaching state \'S40\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp102;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp102 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S42\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp102, "return of SynchronizationUploadState, state S42");
                    this.Manager.Comment("reaching state \'S44\'");
                    int temp103;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp104;
                    bool temp105;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp106 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp103, out temp104, out temp105);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                    this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S46\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                            "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                            "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                            "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                            "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                            "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                            "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                            "lse,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3,4},IsNewCn" +
                            "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=True,IsN" +
                            "ewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByL" +
                            "astModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEc" +
                            "WarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFo" +
                            "lderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidT" +
                            "agFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecede" +
                            "dByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                            "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                            "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                            "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                            "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                            "herCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Abs" +
                            "FolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObj" +
                            "NotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPr" +
                            "opertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage" +
                            "=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLi" +
                            "st=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessa" +
                            "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                            "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                            "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                            "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                            "e))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex" +
                            "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                            "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessag" +
                            "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                            "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                            "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                            "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                            "),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                            "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                            "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                            "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                            "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                            "se,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp103, "transferBufferIndex of FastTransferSourceGetBuffer, state S46");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            4,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            true,
                                                            true}),
                                                true,
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp104, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S46");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp105, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S46");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of FastTransferSourceGetBuffer, state S46");
                    this.Manager.Comment("reaching state \'S48\'");
                    int temp107;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                            "AI|Normal,OrderByDeliveryTime,[\"PidTagCreationTime\"],out _)\'");
                    temp108 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(48)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp107);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S50\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp107, "downloadcontextHandleIndex of SynchronizationConfigure, state S50");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of SynchronizationConfigure, state S50");
                    this.Manager.Comment("reaching state \'S52\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,0)\'");
                    temp109 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S54\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp109, "return of SynchronizationUploadState, state S54");
                    this.Manager.Comment("reaching state \'S56\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,0)\'");
                    temp110 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S58\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp110, "return of SynchronizationUploadState, state S58");
                    this.Manager.Comment("reaching state \'S60\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,0)\'");
                    temp111 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S62\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of SynchronizationUploadState, state S62");
                    this.Manager.Comment("reaching state \'S64\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,0)\'");
                    temp112 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S66\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of SynchronizationUploadState, state S66");
                    this.Manager.Comment("reaching state \'S68\'");
                    bool temp113;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(218300301,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(218300301, out temp113);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp113);
                    this.Manager.Comment("reaching state \'S70\'");
                    int temp174 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSContentAllMessage_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp174 == 0)) {
                        this.Manager.Comment("reaching state \'S73\'");
                        int temp114;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp115;
                        bool temp116;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp117 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp114, out temp115, out temp116);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S77\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=True,IsN" +
                                "ewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByL" +
                                "astModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEc" +
                                "WarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFo" +
                                "lderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidT" +
                                "agFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecede" +
                                "dByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Abs" +
                                "FolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObj" +
                                "NotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPr" +
                                "opertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage" +
                                "=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLi" +
                                "st=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex" +
                                "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                                "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessag" +
                                "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                "),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp114, "transferBufferIndex of FastTransferSourceGetBuffer, state S77");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp115, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S77");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp116, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S77");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of FastTransferSourceGetBuffer, state S77");
                        this.Manager.Comment("reaching state \'S81\'");
                        int temp118;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp119;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|Normal|OnlySpecifiedProperties,OrderByDeliveryTime,[\"PidTagCreationTime\"],out" +
                                " _)\'");
                        temp119 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(176)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp118);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S85\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp118, "downloadcontextHandleIndex of SynchronizationConfigure, state S85");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp119, "return of SynchronizationConfigure, state S85");
                        this.Manager.Comment("reaching state \'S89\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp120 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S93\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of SynchronizationUploadState, state S93");
                        this.Manager.Comment("reaching state \'S97\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp121 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S101\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of SynchronizationUploadState, state S101");
                        this.Manager.Comment("reaching state \'S105\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp122 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S109\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of SynchronizationUploadState, state S109");
                        this.Manager.Comment("reaching state \'S113\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp123 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S117\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of SynchronizationUploadState, state S117");
                        this.Manager.Comment("reaching state \'S121\'");
                        int temp124;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp125;
                        bool temp126;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp127 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp124, out temp125, out temp126);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S125\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=True,IsN" +
                                "ewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortByL" +
                                "astModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagEc" +
                                "WarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFo" +
                                "lderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidT" +
                                "agFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecede" +
                                "dByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=Fa" +
                                "lse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissio" +
                                "nMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPreced" +
                                "edByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringProper" +
                                "tiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOt" +
                                "herCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Abs" +
                                "FolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObj" +
                                "NotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPr" +
                                "opertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage" +
                                "=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageLi" +
                                "st=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateIndex" +
                                "=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPro" +
                                "pertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessag" +
                                "eContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChil" +
                                "dren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipient" +
                                "PrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropertie" +
                                "sInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False" +
                                "),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=" +
                                "AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp124, "transferBufferIndex of FastTransferSourceGetBuffer, state S125");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp125, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S125");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp126, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S125");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp127, "return of FastTransferSourceGetBuffer, state S125");
                        this.Manager.Comment("reaching state \'S129\'");
                        int temp128;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,N" +
                                "ormal|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagC" +
                                "reationTime\"],out _)\'");
                        temp129 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16544)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp128);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S133\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp128, "downloadcontextHandleIndex of SynchronizationConfigure, state S133");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp129, "return of SynchronizationConfigure, state S133");
                        this.Manager.Comment("reaching state \'S137\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagIdsetGiven,True,0)\'");
                        temp130 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S141\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of SynchronizationUploadState, state S141");
                        this.Manager.Comment("reaching state \'S145\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeen,False,0)\'");
                        temp131 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S149\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of SynchronizationUploadState, state S149");
                        this.Manager.Comment("reaching state \'S153\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeenFAI,False,0)\'" +
                                "");
                        temp132 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S157\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of SynchronizationUploadState, state S157");
                        this.Manager.Comment("reaching state \'S161\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetRead,False,0)\'");
                        temp133 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S165\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of SynchronizationUploadState, state S165");
                        this.Manager.Comment("reaching state \'S169\'");
                        int temp134;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp135;
                        bool temp136;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp137;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp137 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp134, out temp135, out temp136);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2173");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S173\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiven={4},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp134, "transferBufferIndex of FastTransferSourceGetBuffer, state S173");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp135, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S173");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp136, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S173");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp137, "return of FastTransferSourceGetBuffer, state S173");
                        this.Manager.Comment("reaching state \'S177\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp138;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp138 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S181\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp138, "return of SetLocalReplicaMidsetDeleted, state S181");
                        this.Manager.Comment("reaching state \'S185\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp139;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp139 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S189\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp139, "return of Release, state S189");
                        this.Manager.Comment("reaching state \'S193\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp140 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S197\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of Release, state S197");
                        this.Manager.Comment("reaching state \'S201\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp141 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S205\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of Release, state S205");
                        this.Manager.Comment("reaching state \'S209\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp142 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S213\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of Release, state S213");
                        this.Manager.Comment("reaching state \'S217\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp143 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S221\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of Release, state S221");
                        this.Manager.Comment("reaching state \'S225\'");
                        goto label1;
                    }
                    if ((temp174 == 1)) {
                        this.Manager.Comment("reaching state \'S74\'");
                        int temp144;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp145;
                        bool temp146;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp147;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp147 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp144, out temp145, out temp146);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S78\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortBy" +
                                "LastModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagE" +
                                "cWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsF" +
                                "olderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPid" +
                                "TagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreced" +
                                "edByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Ab" +
                                "sFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionOb" +
                                "jNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderP" +
                                "ropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessag" +
                                "e=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageL" +
                                "ist=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMess" +
                                "ageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageCh" +
                                "ildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipie" +
                                "ntPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropert" +
                                "iesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fal" +
                                "se))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateInde" +
                                "x=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPr" +
                                "opertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp144, "transferBufferIndex of FastTransferSourceGetBuffer, state S78");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp145, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S78");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp146, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S78");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp147, "return of FastTransferSourceGetBuffer, state S78");
                        this.Manager.Comment("reaching state \'S82\'");
                        int temp148;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|Normal|OnlySpecifiedProperties,OrderByDeliveryTime,[\"PidTagCreationTime\"],out" +
                                " _)\'");
                        temp149 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(176)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp148);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S86\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp148, "downloadcontextHandleIndex of SynchronizationConfigure, state S86");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp149, "return of SynchronizationConfigure, state S86");
                        this.Manager.Comment("reaching state \'S90\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp150;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp150 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S94\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp150, "return of SynchronizationUploadState, state S94");
                        this.Manager.Comment("reaching state \'S98\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp151 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S102\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of SynchronizationUploadState, state S102");
                        this.Manager.Comment("reaching state \'S106\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp152 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S110\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of SynchronizationUploadState, state S110");
                        this.Manager.Comment("reaching state \'S114\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp153;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp153 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S118\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp153, "return of SynchronizationUploadState, state S118");
                        this.Manager.Comment("reaching state \'S122\'");
                        int temp154;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp155;
                        bool temp156;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp157 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp154, out temp155, out temp156);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2198");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2199");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S126\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False),Abstra" +
                                "ctMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage=False,I" +
                                "sMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=False,Is" +
                                "PidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},AbstractDelet" +
                                "ion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdsetNoLong" +
                                "erInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesExist=Fa" +
                                "lse,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3,4},IsNewCn" +
                                "setReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=True,IsSortBy" +
                                "LastModificationTime=True),AbstractFolderContent=AbstractFolderContent(IsPidTagE" +
                                "cWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsF" +
                                "olderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPid" +
                                "TagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPreced" +
                                "edByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=F" +
                                "alse,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissi" +
                                "onMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrece" +
                                "dedByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPrope" +
                                "rtiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInO" +
                                "therCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFolder(Ab" +
                                "sFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionOb" +
                                "jNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderP" +
                                "ropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessag" +
                                "e=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageL" +
                                "ist=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMess" +
                                "ageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageCh" +
                                "ildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipie" +
                                "ntPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringPropert" +
                                "iesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fal" +
                                "se))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSStateInde" +
                                "x=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPr" +
                                "opertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),AbstractMessa" +
                                "geContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChi" +
                                "ldren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,Recipien" +
                                "tPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringProperti" +
                                "esInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=Fals" +
                                "e),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp154, "transferBufferIndex of FastTransferSourceGetBuffer, state S126");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                    "IsProgressPerMessagePresent",
                                                                                    "FollowedFAIMessage",
                                                                                    "IsMessageChangeFull",
                                                                                    "IsPidTagMidExist",
                                                                                    "IsPidTagMessageSizeExist",
                                                                                    "IsPidTagChangeNumberExist",
                                                                                    "MessageIdIndex",
                                                                                    "IsRTFformat"}, new object[] {
                                                                                    false,
                                                                                    false,
                                                                                    true,
                                                                                    false,
                                                                                    false,
                                                                                    false,
                                                                                    3,
                                                                                    false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                    "Element"}, new object[] {
                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    true,
                                                    true}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp155, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S126");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp156, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S126");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of FastTransferSourceGetBuffer, state S126");
                        this.Manager.Comment("reaching state \'S130\'");
                        int temp158;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp159;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,N" +
                                "ormal|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagC" +
                                "reationTime\"],out _)\'");
                        temp159 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16544)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagCreationTime",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp158);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S134\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp158, "downloadcontextHandleIndex of SynchronizationConfigure, state S134");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp159, "return of SynchronizationConfigure, state S134");
                        this.Manager.Comment("reaching state \'S138\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp160;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagIdsetGiven,True,0)\'");
                        temp160 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S142\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp160, "return of SynchronizationUploadState, state S142");
                        this.Manager.Comment("reaching state \'S146\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp161;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeen,False,0)\'");
                        temp161 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S150\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp161, "return of SynchronizationUploadState, state S150");
                        this.Manager.Comment("reaching state \'S154\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp162;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetSeenFAI,False,0)\'" +
                                "");
                        temp162 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S158\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp162, "return of SynchronizationUploadState, state S158");
                        this.Manager.Comment("reaching state \'S162\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,10,PidTagCnsetRead,False,0)\'");
                        temp163 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S166\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of SynchronizationUploadState, state S166");
                        this.Manager.Comment("reaching state \'S170\'");
                        int temp164;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp165;
                        bool temp166;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,10,Normal,out _,out _,out _)\'");
                        temp167 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 10, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp164, out temp165, out temp166);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2173");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R716002");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S174\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=4,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiven={4},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp164, "transferBufferIndex of FastTransferSourceGetBuffer, state S174");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                4,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp165, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S174");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp166, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S174");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of FastTransferSourceGetBuffer, state S174");
                        this.Manager.Comment("reaching state \'S178\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp168 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S182\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of SetLocalReplicaMidsetDeleted, state S182");
                        this.Manager.Comment("reaching state \'S186\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp169 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S190\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of Release, state S190");
                        this.Manager.Comment("reaching state \'S194\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp170 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S198\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of Release, state S198");
                        this.Manager.Comment("reaching state \'S202\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp171 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S206\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of Release, state S206");
                        this.Manager.Comment("reaching state \'S210\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp172;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp172 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S214\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp172, "return of Release, state S214");
                        this.Manager.Comment("reaching state \'S218\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp173;
                        this.Manager.Comment("executing step \'call Release(1,10)\'");
                        temp173 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                        this.Manager.Comment("reaching state \'S222\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp173, "return of Release, state S222");
                        this.Manager.Comment("reaching state \'S226\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp176 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S26");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S69");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S69");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S26");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S70");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S70");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentAllMessage_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}