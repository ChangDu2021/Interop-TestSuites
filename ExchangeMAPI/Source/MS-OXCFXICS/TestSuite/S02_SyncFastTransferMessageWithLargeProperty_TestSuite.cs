//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S02_SyncFastTransferMessageWithLargeProperty_TestSuite : PtfTestClassBase {
        
        public S02_SyncFastTransferMessageWithLargeProperty_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp23 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp23 == 0)) {
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S45\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S54");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S54");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S54");
                this.Manager.Comment("reaching state \'S63\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S72");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S72");
                this.Manager.Comment("reaching state \'S81\'");
                int temp6;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp7;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp7 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp6);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S90\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp6, "messageHandleIndex of CreateMessage, state S90");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp7, "return of CreateMessage, state S90");
                this.Manager.Comment("reaching state \'S99\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S108\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of SetProperties, state S108");
                this.Manager.Comment("reaching state \'S117\'");
                int temp9;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp10;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp10 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp9);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S126\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp9, "messageIdIndex of SaveChangesMessage, state S126");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp10, "return of SaveChangesMessage, state S126");
                this.Manager.Comment("reaching state \'S135\'");
                int temp11;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,Unicode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp12 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp11);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S144\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp11, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S144");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of FastTransferSourceCopyProperties, state S144");
                this.Manager.Comment("reaching state \'S153\'");
                int temp13;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp14;
                bool temp15;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp16;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Greater,out _,out _,out _)\'");
                temp16 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Greater, out temp13, out temp14, out temp15);
                this.Manager.Comment("reaching state \'S162\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                        "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:BufferTooSmall\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp13, "transferBufferIndex of FastTransferSourceGetBuffer, state S162");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp14, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S162");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp15, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S162");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.BufferTooSmall, temp16, "return of FastTransferSourceGetBuffer, state S162");
                this.Manager.Comment("reaching state \'S171\'");
                int temp17;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp18;
                bool temp19;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Greater,out _,out _,out _)\'");
                temp20 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Greater, out temp17, out temp18, out temp19);
                this.Manager.Comment("reaching state \'S180\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                        "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:BufferTooSmall\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp17, "transferBufferIndex of FastTransferSourceGetBuffer, state S180");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp18, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S180");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp19, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S180");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.BufferTooSmall, temp20, "return of FastTransferSourceGetBuffer, state S180");
                this.Manager.Comment("reaching state \'S189\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp21 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S198\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of Release, state S198");
                this.Manager.Comment("reaching state \'S207\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp22 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S216\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of Release, state S216");
                this.Manager.Comment("reaching state \'S219\'");
                goto label0;
            }
            if ((temp23 == 1)) {
                this.Manager.Comment("reaching state \'S19\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite1");
            this.Manager.Comment("reaching state \'S10\'");
            bool temp24;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp24);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp24);
            this.Manager.Comment("reaching state \'S11\'");
            int temp43 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp43 == 0)) {
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S50\'");
                int temp25;
                int temp26;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp27 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp25, out temp26);
                this.Manager.Comment("reaching state \'S59\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp25, "logonHandleIndex of Logon, state S59");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp26, "inboxFolderIdIndex of Logon, state S59");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of Logon, state S59");
                this.Manager.Comment("reaching state \'S68\'");
                int temp28;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp29 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp28);
                this.Manager.Comment("reaching state \'S77\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp28, "folderHandleIndex of OpenFolder, state S77");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of OpenFolder, state S77");
                this.Manager.Comment("reaching state \'S86\'");
                int temp30;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp31 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp30);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S95\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp30, "messageHandleIndex of CreateMessage, state S95");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of CreateMessage, state S95");
                this.Manager.Comment("reaching state \'S104\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp32 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S113\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of SetProperties, state S113");
                this.Manager.Comment("reaching state \'S122\'");
                int temp33;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp34 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp33);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S131\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp33, "messageIdIndex of SaveChangesMessage, state S131");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of SaveChangesMessage, state S131");
                this.Manager.Comment("reaching state \'S140\'");
                int temp35;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,RecoverMode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp36 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp35);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S149\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp35, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S149");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of FastTransferSourceCopyProperties, state S149");
                this.Manager.Comment("reaching state \'S158\'");
                int temp37;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp38;
                bool temp39;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Partial,out _,out _,out _)\'");
                temp40 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Partial, out temp37, out temp38, out temp39);
                this.Manager.Checkpoint("MS-OXCFXICS_R2142");
                this.Manager.Checkpoint("MS-OXCFXICS_R2143");
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3327");
                this.Manager.Checkpoint("MS-OXCFXICS_R3447");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S167\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                        "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                        "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                        "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                        "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                        ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                        "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                        "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                        "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                        "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                        "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                        ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                        "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                        "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                        "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                        "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                        "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                        "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                        "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                        "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                        "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                        "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                        "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                        "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                        "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                        "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                        "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                        "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                        "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                        "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                        "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWa" +
                        "rningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(Is" +
                        "NoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attac" +
                        "hmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),S" +
                        "tringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPro" +
                        "pertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fa" +
                        "lse),out True]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp37, "transferBufferIndex of FastTransferSourceGetBuffer, state S167");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp38, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S167");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp39, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S167");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of FastTransferSourceGetBuffer, state S167");
                this.Manager.Comment("reaching state \'S176\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp41 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S185\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of Release, state S185");
                this.Manager.Comment("reaching state \'S194\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp42 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S203\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of Release, state S203");
                this.Manager.Comment("reaching state \'S212\'");
                goto label1;
            }
            if ((temp43 == 1)) {
                this.Manager.Comment("reaching state \'S29\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite2");
            this.Manager.Comment("reaching state \'S12\'");
            bool temp44;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp44);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp44);
            this.Manager.Comment("reaching state \'S13\'");
            int temp67 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp67 == 0)) {
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S51\'");
                int temp45;
                int temp46;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp47 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp45, out temp46);
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp45, "logonHandleIndex of Logon, state S60");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp46, "inboxFolderIdIndex of Logon, state S60");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of Logon, state S60");
                this.Manager.Comment("reaching state \'S69\'");
                int temp48;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp49 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp48);
                this.Manager.Comment("reaching state \'S78\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp48, "folderHandleIndex of OpenFolder, state S78");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of OpenFolder, state S78");
                this.Manager.Comment("reaching state \'S87\'");
                int temp50;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp51 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp50);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S96\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp50, "messageHandleIndex of CreateMessage, state S96");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of CreateMessage, state S96");
                this.Manager.Comment("reaching state \'S105\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp52 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S114\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of SetProperties, state S114");
                this.Manager.Comment("reaching state \'S123\'");
                int temp53;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp54 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp53);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S132\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp53, "messageIdIndex of SaveChangesMessage, state S132");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of SaveChangesMessage, state S132");
                this.Manager.Comment("reaching state \'S141\'");
                int temp55;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,Unicode|ForceUnicode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp56 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp55);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S150\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp55, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S150");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of FastTransferSourceCopyProperties, state S150");
                this.Manager.Comment("reaching state \'S159\'");
                int temp57;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp58;
                bool temp59;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Greater,out _,out _,out _)\'");
                temp60 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Greater, out temp57, out temp58, out temp59);
                this.Manager.Comment("reaching state \'S168\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                        "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:BufferTooSmall\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp57, "transferBufferIndex of FastTransferSourceGetBuffer, state S168");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp58, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S168");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp59, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S168");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.BufferTooSmall, temp60, "return of FastTransferSourceGetBuffer, state S168");
                this.Manager.Comment("reaching state \'S177\'");
                int temp61;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp62;
                bool temp63;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Greater,out _,out _,out _)\'");
                temp64 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Greater, out temp61, out temp62, out temp63);
                this.Manager.Comment("reaching state \'S186\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                        "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:BufferTooSmall\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp61, "transferBufferIndex of FastTransferSourceGetBuffer, state S186");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp62, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S186");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp63, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S186");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.BufferTooSmall, temp64, "return of FastTransferSourceGetBuffer, state S186");
                this.Manager.Comment("reaching state \'S195\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp65 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S204\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Release, state S204");
                this.Manager.Comment("reaching state \'S213\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp66 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S218\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of Release, state S218");
                this.Manager.Comment("reaching state \'S221\'");
                goto label2;
            }
            if ((temp67 == 1)) {
                this.Manager.Comment("reaching state \'S31\'");
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite3() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite3");
            this.Manager.Comment("reaching state \'S14\'");
            bool temp68;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp68);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp68);
            this.Manager.Comment("reaching state \'S15\'");
            int temp87 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp87 == 0)) {
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S52\'");
                int temp69;
                int temp70;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp71 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp69, out temp70);
                this.Manager.Comment("reaching state \'S61\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp69, "logonHandleIndex of Logon, state S61");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp70, "inboxFolderIdIndex of Logon, state S61");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of Logon, state S61");
                this.Manager.Comment("reaching state \'S70\'");
                int temp72;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp73 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp72);
                this.Manager.Comment("reaching state \'S79\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp72, "folderHandleIndex of OpenFolder, state S79");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of OpenFolder, state S79");
                this.Manager.Comment("reaching state \'S88\'");
                int temp74;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp75 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp74);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S97\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp74, "messageHandleIndex of CreateMessage, state S97");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of CreateMessage, state S97");
                this.Manager.Comment("reaching state \'S106\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp76 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S115\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of SetProperties, state S115");
                this.Manager.Comment("reaching state \'S124\'");
                int temp77;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp78 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp77);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S133\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp77, "messageIdIndex of SaveChangesMessage, state S133");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp78, "return of SaveChangesMessage, state S133");
                this.Manager.Comment("reaching state \'S142\'");
                int temp79;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,Unicode|ForceUnicode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp80 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp79);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S151\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp79, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S151");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp80, "return of FastTransferSourceCopyProperties, state S151");
                this.Manager.Comment("reaching state \'S160\'");
                int temp81;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp82;
                bool temp83;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,NoRoom,out _,out _,out _)\'");
                temp84 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.NoRoom, out temp81, out temp82, out temp83);
                this.Manager.Checkpoint("MS-OXCFXICS_R2142");
                this.Manager.Checkpoint("MS-OXCFXICS_R2143");
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3327");
                this.Manager.Checkpoint("MS-OXCFXICS_R3455");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S169\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                        "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                        "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                        "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                        "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                        ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                        "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                        "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                        "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                        "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                        "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                        ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                        "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                        "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                        "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                        "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                        "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                        "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                        "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                        "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                        "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                        "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                        "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                        "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                        "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                        "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                        "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                        "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                        "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                        "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                        "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=True,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out True]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp81, "transferBufferIndex of FastTransferSourceGetBuffer, state S169");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            true,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp82, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S169");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp83, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S169");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of FastTransferSourceGetBuffer, state S169");
                this.Manager.Comment("reaching state \'S178\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp85 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S187\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp85, "return of Release, state S187");
                this.Manager.Comment("reaching state \'S196\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp86 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S205\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of Release, state S205");
                this.Manager.Comment("reaching state \'S214\'");
                goto label3;
            }
            if ((temp87 == 1)) {
                this.Manager.Comment("reaching state \'S33\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        #endregion
        
        #region Test Starting in S16
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite4() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite4");
            this.Manager.Comment("reaching state \'S16\'");
            bool temp88;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp88);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp88);
            this.Manager.Comment("reaching state \'S17\'");
            int temp107 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite4CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite4CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp107 == 0)) {
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S53\'");
                int temp89;
                int temp90;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp91 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp89, out temp90);
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp89, "logonHandleIndex of Logon, state S62");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp90, "inboxFolderIdIndex of Logon, state S62");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of Logon, state S62");
                this.Manager.Comment("reaching state \'S71\'");
                int temp92;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp93;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp93 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp92);
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp92, "folderHandleIndex of OpenFolder, state S80");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp93, "return of OpenFolder, state S80");
                this.Manager.Comment("reaching state \'S89\'");
                int temp94;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp95;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp95 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp94);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S98\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp94, "messageHandleIndex of CreateMessage, state S98");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp95, "return of CreateMessage, state S98");
                this.Manager.Comment("reaching state \'S107\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp96 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S116\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of SetProperties, state S116");
                this.Manager.Comment("reaching state \'S125\'");
                int temp97;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp98;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp98 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp97);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S134\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp97, "messageIdIndex of SaveChangesMessage, state S134");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp98, "return of SaveChangesMessage, state S134");
                this.Manager.Comment("reaching state \'S143\'");
                int temp99;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,Unicode|ForceUnicode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp100 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp99);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S152\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp99, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S152");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of FastTransferSourceCopyProperties, state S152");
                this.Manager.Comment("reaching state \'S161\'");
                int temp101;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp102;
                bool temp103;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Partial,out _,out _,out _)\'");
                temp104 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Partial, out temp101, out temp102, out temp103);
                this.Manager.Checkpoint("MS-OXCFXICS_R2142");
                this.Manager.Checkpoint("MS-OXCFXICS_R2143");
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3327");
                this.Manager.Checkpoint("MS-OXCFXICS_R3455");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S170\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                        "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                        "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                        "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                        "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                        ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                        "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                        "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                        "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                        "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                        "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                        ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                        "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                        "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                        "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                        "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                        "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                        "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                        "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                        "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                        "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                        "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                        "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                        "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                        "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                        "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                        "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                        "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                        "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                        "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                        "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=True,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out True]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp101, "transferBufferIndex of FastTransferSourceGetBuffer, state S170");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            true,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp102, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S170");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp103, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S170");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of FastTransferSourceGetBuffer, state S170");
                this.Manager.Comment("reaching state \'S179\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp105;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp105 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S188\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp105, "return of Release, state S188");
                this.Manager.Comment("reaching state \'S197\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp106 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S206\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of Release, state S206");
                this.Manager.Comment("reaching state \'S215\'");
                goto label4;
            }
            if ((temp107 == 1)) {
                this.Manager.Comment("reaching state \'S35\'");
                goto label4;
            }
            throw new InvalidOperationException("never reached");
        label4:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite4CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite4CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite5() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite5");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp108;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp108);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp108);
            this.Manager.Comment("reaching state \'S3\'");
            int temp127 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite5CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite5CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp127 == 0)) {
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S46\'");
                int temp109;
                int temp110;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp111 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp109, out temp110);
                this.Manager.Comment("reaching state \'S55\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp109, "logonHandleIndex of Logon, state S55");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp110, "inboxFolderIdIndex of Logon, state S55");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of Logon, state S55");
                this.Manager.Comment("reaching state \'S64\'");
                int temp112;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp113 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp112);
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp112, "folderHandleIndex of OpenFolder, state S73");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of OpenFolder, state S73");
                this.Manager.Comment("reaching state \'S82\'");
                int temp114;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp115 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp114);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S91\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp114, "messageHandleIndex of CreateMessage, state S91");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of CreateMessage, state S91");
                this.Manager.Comment("reaching state \'S100\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp116 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S109\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of SetProperties, state S109");
                this.Manager.Comment("reaching state \'S118\'");
                int temp117;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp118;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp118 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp117);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S127\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp117, "messageIdIndex of SaveChangesMessage, state S127");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp118, "return of SaveChangesMessage, state S127");
                this.Manager.Comment("reaching state \'S136\'");
                int temp119;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,Unicode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp120 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp119);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S145\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp119, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S145");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of FastTransferSourceCopyProperties, state S145");
                this.Manager.Comment("reaching state \'S154\'");
                int temp121;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp122;
                bool temp123;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp124;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,NoRoom,out _,out _,out _)\'");
                temp124 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.NoRoom, out temp121, out temp122, out temp123);
                this.Manager.Checkpoint("MS-OXCFXICS_R2142");
                this.Manager.Checkpoint("MS-OXCFXICS_R2143");
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3327");
                this.Manager.Checkpoint("MS-OXCFXICS_R3448");
                this.Manager.Checkpoint("MS-OXCFXICS_R3449");
                this.Manager.Checkpoint("MS-OXCFXICS_R3450");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S163\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                        "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                        "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                        "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                        "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                        ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                        "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                        "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                        "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                        "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                        "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                        ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                        "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                        "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                        "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                        "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                        "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                        "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                        "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                        "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                        "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                        "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                        "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                        "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                        "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                        "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                        "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                        "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                        "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                        "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                        "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=True,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out True]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp121, "transferBufferIndex of FastTransferSourceGetBuffer, state S163");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            true,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp122, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S163");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp123, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S163");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp124, "return of FastTransferSourceGetBuffer, state S163");
                this.Manager.Comment("reaching state \'S172\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp125;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp125 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S181\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp125, "return of Release, state S181");
                this.Manager.Comment("reaching state \'S190\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp126;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp126 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S199\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp126, "return of Release, state S199");
                this.Manager.Comment("reaching state \'S208\'");
                goto label5;
            }
            if ((temp127 == 1)) {
                this.Manager.Comment("reaching state \'S21\'");
                goto label5;
            }
            throw new InvalidOperationException("never reached");
        label5:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite5CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite5CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite6() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite6");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp128;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp128);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp128);
            this.Manager.Comment("reaching state \'S5\'");
            int temp147 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite6CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite6CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp147 == 0)) {
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S47\'");
                int temp129;
                int temp130;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp131 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp129, out temp130);
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp129, "logonHandleIndex of Logon, state S56");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp130, "inboxFolderIdIndex of Logon, state S56");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of Logon, state S56");
                this.Manager.Comment("reaching state \'S65\'");
                int temp132;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp133 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp132);
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp132, "folderHandleIndex of OpenFolder, state S74");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of OpenFolder, state S74");
                this.Manager.Comment("reaching state \'S83\'");
                int temp134;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp135;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp135 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp134);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S92\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp134, "messageHandleIndex of CreateMessage, state S92");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp135, "return of CreateMessage, state S92");
                this.Manager.Comment("reaching state \'S101\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp136;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp136 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S110\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp136, "return of SetProperties, state S110");
                this.Manager.Comment("reaching state \'S119\'");
                int temp137;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp138;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp138 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp137);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S128\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp137, "messageIdIndex of SaveChangesMessage, state S128");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp138, "return of SaveChangesMessage, state S128");
                this.Manager.Comment("reaching state \'S137\'");
                int temp139;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,Unicode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp140 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp139);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S146\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp139, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S146");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of FastTransferSourceCopyProperties, state S146");
                this.Manager.Comment("reaching state \'S155\'");
                int temp141;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp142;
                bool temp143;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp144;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Partial,out _,out _,out _)\'");
                temp144 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Partial, out temp141, out temp142, out temp143);
                this.Manager.Checkpoint("MS-OXCFXICS_R2142");
                this.Manager.Checkpoint("MS-OXCFXICS_R2143");
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3327");
                this.Manager.Checkpoint("MS-OXCFXICS_R3448");
                this.Manager.Checkpoint("MS-OXCFXICS_R3449");
                this.Manager.Checkpoint("MS-OXCFXICS_R3450");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S164\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                        "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                        "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                        "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                        "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                        ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                        "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                        "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                        "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                        "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                        "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                        ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                        "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                        "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                        "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                        "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                        "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                        "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                        "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                        "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                        "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                        "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                        "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                        "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                        "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                        "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                        "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                        "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                        "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                        "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                        "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=True,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out True]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp141, "transferBufferIndex of FastTransferSourceGetBuffer, state S164");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            true,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp142, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S164");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp143, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S164");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp144, "return of FastTransferSourceGetBuffer, state S164");
                this.Manager.Comment("reaching state \'S173\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp145;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp145 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S182\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp145, "return of Release, state S182");
                this.Manager.Comment("reaching state \'S191\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp146 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S200\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of Release, state S200");
                this.Manager.Comment("reaching state \'S209\'");
                goto label6;
            }
            if ((temp147 == 1)) {
                this.Manager.Comment("reaching state \'S23\'");
                goto label6;
            }
            throw new InvalidOperationException("never reached");
        label6:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite6CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite6CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite7() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite7");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp148;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp148);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp148);
            this.Manager.Comment("reaching state \'S7\'");
            int temp171 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite7CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite7CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp171 == 0)) {
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S39\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S48\'");
                int temp149;
                int temp150;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp151 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp149, out temp150);
                this.Manager.Comment("reaching state \'S57\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp149, "logonHandleIndex of Logon, state S57");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp150, "inboxFolderIdIndex of Logon, state S57");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of Logon, state S57");
                this.Manager.Comment("reaching state \'S66\'");
                int temp152;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp153;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp153 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp152);
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp152, "folderHandleIndex of OpenFolder, state S75");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp153, "return of OpenFolder, state S75");
                this.Manager.Comment("reaching state \'S84\'");
                int temp154;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp155 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp154);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S93\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp154, "messageHandleIndex of CreateMessage, state S93");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of CreateMessage, state S93");
                this.Manager.Comment("reaching state \'S102\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp156;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp156 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S111\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp156, "return of SetProperties, state S111");
                this.Manager.Comment("reaching state \'S120\'");
                int temp157;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp158;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp158 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp157);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S129\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp157, "messageIdIndex of SaveChangesMessage, state S129");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp158, "return of SaveChangesMessage, state S129");
                this.Manager.Comment("reaching state \'S138\'");
                int temp159;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp160;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,RecoverMode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp160 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp159);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S147\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp159, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S147");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp160, "return of FastTransferSourceCopyProperties, state S147");
                this.Manager.Comment("reaching state \'S156\'");
                int temp161;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp162;
                bool temp163;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Greater,out _,out _,out _)\'");
                temp164 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Greater, out temp161, out temp162, out temp163);
                this.Manager.Comment("reaching state \'S165\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                        "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:BufferTooSmall\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp161, "transferBufferIndex of FastTransferSourceGetBuffer, state S165");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp162, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S165");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp163, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S165");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.BufferTooSmall, temp164, "return of FastTransferSourceGetBuffer, state S165");
                this.Manager.Comment("reaching state \'S174\'");
                int temp165;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp166;
                bool temp167;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Greater,out _,out _,out _)\'");
                temp168 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Greater, out temp165, out temp166, out temp167);
                this.Manager.Comment("reaching state \'S183\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                        "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                        "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                        "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                        "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                        "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                        "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                        "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                        "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                        "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                        "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                        "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                        "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                        "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                        "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                        "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                        "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                        "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                        "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                        "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                        "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                        "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                        "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                        "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                        "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                        "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                        "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                        "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                        "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                        "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                        "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                        "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                        "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                        "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                        "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                        "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                        "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                        "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                        "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                        "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                        "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                        "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                        "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                        "se),out False]:BufferTooSmall\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp165, "transferBufferIndex of FastTransferSourceGetBuffer, state S183");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp166, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S183");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp167, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S183");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.BufferTooSmall, temp168, "return of FastTransferSourceGetBuffer, state S183");
                this.Manager.Comment("reaching state \'S192\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp169 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S201\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of Release, state S201");
                this.Manager.Comment("reaching state \'S210\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp170 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S217\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of Release, state S217");
                this.Manager.Comment("reaching state \'S220\'");
                goto label7;
            }
            if ((temp171 == 1)) {
                this.Manager.Comment("reaching state \'S25\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite7CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite7CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite8() {
            this.Manager.BeginTest("MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite8");
            this.Manager.Comment("reaching state \'S8\'");
            bool temp172;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp172);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp172);
            this.Manager.Comment("reaching state \'S9\'");
            int temp191 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite8CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SyncFastTransferMessageWithLargeProperty_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite8CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp191 == 0)) {
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S49\'");
                int temp173;
                int temp174;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp175 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp173, out temp174);
                this.Manager.Comment("reaching state \'S58\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp173, "logonHandleIndex of Logon, state S58");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp174, "inboxFolderIdIndex of Logon, state S58");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of Logon, state S58");
                this.Manager.Comment("reaching state \'S67\'");
                int temp176;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp177 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp176);
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp176, "folderHandleIndex of OpenFolder, state S76");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of OpenFolder, state S76");
                this.Manager.Comment("reaching state \'S85\'");
                int temp178;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp179 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp178);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S94\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp178, "messageHandleIndex of CreateMessage, state S94");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of CreateMessage, state S94");
                this.Manager.Comment("reaching state \'S103\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp180;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagBody\",\"PidTagPolicyTag\"])\'");
                temp180 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}));
                this.Manager.Comment("reaching state \'S112\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp180, "return of SetProperties, state S112");
                this.Manager.Comment("reaching state \'S121\'");
                int temp181;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp182 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp181);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S130\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp181, "messageIdIndex of SaveChangesMessage, state S130");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of SaveChangesMessage, state S130");
                this.Manager.Comment("reaching state \'S139\'");
                int temp183;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,MessageHandle,False,Non" +
                        "e,RecoverMode,[\"PidTagBody\",\"PidTagPolicyTag\"],out _)\'");
                temp184 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(0)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagBody",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagPolicyTag",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp183);
                this.Manager.Checkpoint("MS-OXCFXICS_R431");
                this.Manager.Comment("reaching state \'S148\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp183, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S148");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp184, "return of FastTransferSourceCopyProperties, state S148");
                this.Manager.Comment("reaching state \'S157\'");
                int temp185;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp186;
                bool temp187;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp188;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,NoRoom,out _,out _,out _)\'");
                temp188 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.NoRoom, out temp185, out temp186, out temp187);
                this.Manager.Checkpoint("MS-OXCFXICS_R2142");
                this.Manager.Checkpoint("MS-OXCFXICS_R2143");
                this.Manager.Checkpoint("MS-OXCFXICS_R455");
                this.Manager.Checkpoint("MS-OXCFXICS_R3327");
                this.Manager.Checkpoint("MS-OXCFXICS_R3447");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S166\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=MessageContent,AbstractHierarchySync=AbstractHierarchySync(Fol" +
                        "derchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFol" +
                        "derIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZe" +
                        "ro=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSe" +
                        "tGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCh" +
                        "angeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeC" +
                        "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))" +
                        ",AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageIn" +
                        "fo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=n" +
                        "ull,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsR" +
                        "eadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDel" +
                        "iveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstra" +
                        "ctFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTa" +
                        "gNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False" +
                        ",IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessa" +
                        "ge(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLi" +
                        "st(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMe" +
                        "ssageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessag" +
                        "eChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXD" +
                        "elProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=" +
                        "False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFo" +
                        "lder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningO" +
                        "ut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderCont" +
                        "entNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelP" +
                        "rop=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTa" +
                        "gFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsM" +
                        "essage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessage" +
                        "NotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidT" +
                        "agFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUn" +
                        "icode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodeP" +
                        "age=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractS" +
                        "tate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=" +
                        "False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNu" +
                        "mber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                        "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                        "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                        "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                        "ge=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWa" +
                        "rningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(Is" +
                        "NoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attac" +
                        "hmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),S" +
                        "tringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPro" +
                        "pertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fa" +
                        "lse),out True]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp185, "transferBufferIndex of FastTransferSourceGetBuffer, state S166");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.MessageContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp186, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S166");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp187, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S166");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp188, "return of FastTransferSourceGetBuffer, state S166");
                this.Manager.Comment("reaching state \'S175\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp189;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp189 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S184\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp189, "return of Release, state S184");
                this.Manager.Comment("reaching state \'S193\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp190 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S202\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of Release, state S202");
                this.Manager.Comment("reaching state \'S211\'");
                goto label8;
            }
            if ((temp191 == 1)) {
                this.Manager.Comment("reaching state \'S27\'");
                goto label8;
            }
            throw new InvalidOperationException("never reached");
        label8:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite8CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        
        private void MSOXCFXICS_S02_SyncFastTransferMessageWithLargeProperty_TestSuite8CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        #endregion
    }
}