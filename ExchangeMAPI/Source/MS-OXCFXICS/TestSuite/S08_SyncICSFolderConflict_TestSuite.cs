//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S08_SyncICSFolderConflict_TestSuite : PtfTestClassBase {
        
        public S08_SyncICSFolderConflict_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S08_SyncICSFolderConflict_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp220 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp220 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S5\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S6");
                this.Manager.Comment("reaching state \'S7\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S8");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S8");
                this.Manager.Comment("reaching state \'S9\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S10");
                this.Manager.Comment("reaching state \'S11\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S12");
                this.Manager.Comment("reaching state \'S13\'");
                bool temp10;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2734,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2734, out temp10);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp10);
                this.Manager.Comment("reaching state \'S14\'");
                int temp219 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp219 == 0)) {
                    this.Manager.Comment("reaching state \'S15\'");
                    int temp11;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                    temp12 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp11);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S17\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp11, "synchronizationHandleIndex of SynchronizationOpenCollector, state S17");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of SynchronizationOpenCollector, state S17");
                    this.Manager.Comment("reaching state \'S19\'");
                    int temp13;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp14;
                    this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChange(1,4,3,{\"PidTagFolderTyp" +
                            "e\"},0,out _)\'");
                    temp14 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChange(1, 4, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                    "Element"}, new object[] {
                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp13);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                    this.Manager.Checkpoint("MS-OXCFXICS_R816");
                    this.Manager.Comment("reaching state \'S21\'");
                    this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChange/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp13, "folderIdIndex of SynchronizationImportHierarchyChange, state S21");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp14, "return of SynchronizationImportHierarchyChange, state S21");
                    this.Manager.Comment("reaching state \'S23\'");
                    int temp15;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp16;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                            "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                    temp16 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAttachLongFilename",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp15);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S25\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp15, "downloadcontextHandleIndex of SynchronizationConfigure, state S25");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp16, "return of SynchronizationConfigure, state S25");
                    this.Manager.Comment("reaching state \'S27\'");
                    bool temp17;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp17);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp17);
                    this.Manager.Comment("reaching state \'S29\'");
                    int temp114 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp114 == 0)) {
                        this.Manager.Comment("reaching state \'S31\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagIdsetGiven,True,0)\'");
                        temp18 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S35\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp18, "return of SynchronizationUploadState, state S35");
                        this.Manager.Comment("reaching state \'S39\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagCnsetSeen,False,0)\'");
                        temp19 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S43\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of SynchronizationUploadState, state S43");
                        this.Manager.Comment("reaching state \'S47\'");
                        int temp20;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp21;
                        bool temp22;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                        temp23 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp20, out temp21, out temp22);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S51\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=1,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiv" +
                                "en={3},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild=F" +
                                "alse,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},I" +
                                "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstrac" +
                                "tContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null," +
                                "AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPi" +
                                "dTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadState" +
                                "ChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                                "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTim" +
                                "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                " False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp20, "transferBufferIndex of FastTransferSourceGetBuffer, state S51");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    1,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                1,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp21, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S51");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp22, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S51");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of FastTransferSourceGetBuffer, state S51");
                        this.Manager.Comment("reaching state \'S55\'");
                        int temp24;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp25 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp24);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S59\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp24, "synchronizationHandleIndex of SynchronizationOpenCollector, state S59");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of SynchronizationOpenCollector, state S59");
                        this.Manager.Comment("reaching state \'S63\'");
                        int temp26;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,6,3,{\"Pid" +
                                "TagFolderType\"},0,out _,AINCLUDEB)\'");
                        temp27 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 6, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp26, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes)(1)));
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S67\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 4]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp26, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S67");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of SynchronizationImportHierarchyChangeWithConflict, state S67");
                        this.Manager.Comment("reaching state \'S71\'");
                        int temp28;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp29 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp28);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S75\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp28, "downloadcontextHandleIndex of SynchronizationConfigure, state S75");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of SynchronizationConfigure, state S75");
                        this.Manager.Comment("reaching state \'S79\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                        temp30 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S83\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp30, "return of SynchronizationUploadState, state S83");
                        this.Manager.Comment("reaching state \'S87\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                        temp31 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S91\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of SynchronizationUploadState, state S91");
                        this.Manager.Comment("reaching state \'S95\'");
                        int temp32;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp33;
                        bool temp34;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                        temp35 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp32, out temp33, out temp34);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S99\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=2,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                "en={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={}" +
                                ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                "ut False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp32, "transferBufferIndex of FastTransferSourceGetBuffer, state S99");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    2,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp33, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S99");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp34, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S99");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of FastTransferSourceGetBuffer, state S99");
                        this.Manager.Comment("reaching state \'S103\'");
                        int temp36;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp37 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp36);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S107\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp36, "synchronizationHandleIndex of SynchronizationOpenCollector, state S107");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of SynchronizationOpenCollector, state S107");
                        this.Manager.Comment("reaching state \'S111\'");
                        int temp38;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,8,3,{\"Pid" +
                                "TagFolderType\"},0,out _,BINCLUDEA)\'");
                        temp39 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 8, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp38, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.BINCLUDEA);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S115\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 5]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp38, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S115");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of SynchronizationImportHierarchyChangeWithConflict, state S115");
                        this.Manager.Comment("reaching state \'S119\'");
                        int temp40;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp41 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp40);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S123\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp40, "downloadcontextHandleIndex of SynchronizationConfigure, state S123");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of SynchronizationConfigure, state S123");
                        this.Manager.Comment("reaching state \'S127\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp42 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S131\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp42, "return of SynchronizationUploadState, state S131");
                        this.Manager.Comment("reaching state \'S135\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp43 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S139\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of SynchronizationUploadState, state S139");
                        this.Manager.Comment("reaching state \'S143\'");
                        int temp44;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp45;
                        bool temp46;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp47 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp44, out temp45, out temp46);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S147\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                "en={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                                "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                                "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                                "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                                "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                                "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                                "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                                "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                                "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                                "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                                "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                                "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                                "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                                "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                                "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                                "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                                "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                                "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                                "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                                "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                                "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                                "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                                "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                                "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                                "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                                "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                                "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                                "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                                "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                                "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                                "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                                "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                                "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                                "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                                "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                                "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                                "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                                ",out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp44, "transferBufferIndex of FastTransferSourceGetBuffer, state S147");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    3,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp45, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S147");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp46, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S147");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of FastTransferSourceGetBuffer, state S147");
                        this.Manager.Comment("reaching state \'S151\'");
                        int temp48;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp49 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp48);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S155\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp48, "synchronizationHandleIndex of SynchronizationOpenCollector, state S155");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of SynchronizationOpenCollector, state S155");
                        this.Manager.Comment("reaching state \'S159\'");
                        int temp50;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,10,3,{\"Pi" +
                                "dTagFolderType\"},0,out _,CONFLICT)\'");
                        temp51 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 10, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp50, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.CONFLICT);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S163\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 6]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp50, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S163");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of SynchronizationImportHierarchyChangeWithConflict, state S163");
                        this.Manager.Comment("reaching state \'S167\'");
                        int temp52;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp53 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp52);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S171\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp52, "downloadcontextHandleIndex of SynchronizationConfigure, state S171");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of SynchronizationConfigure, state S171");
                        this.Manager.Comment("reaching state \'S175\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagIdsetGiven,True,0)\'");
                        temp54 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S179\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp54, "return of SynchronizationUploadState, state S179");
                        this.Manager.Comment("reaching state \'S183\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagCnsetSeen,False,0)\'");
                        temp55 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S187\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of SynchronizationUploadState, state S187");
                        this.Manager.Comment("reaching state \'S191\'");
                        int temp56;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp57;
                        bool temp58;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,11,Normal,out _,out _,out _)\'");
                        temp59 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 11, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp56, out temp57, out temp58);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S195\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=4,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiv" +
                                "en={3,4,5,6},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d={},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                                "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRea" +
                                "dStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdS" +
                                "etGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliv" +
                                "eryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstract" +
                                "FolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagN" +
                                "ewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,I" +
                                "sSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage" +
                                "(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList" +
                                "(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMess" +
                                "ageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageC" +
                                "hildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDel" +
                                "Prop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fa" +
                                "lse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFold" +
                                "er=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut" +
                                "=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConten" +
                                "tNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPro" +
                                "p=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagF" +
                                "XDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMes" +
                                "sage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                                "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                                "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                                "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                                "e=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSta" +
                                "te(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumb" +
                                "er=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                                "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                                "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                                "=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fals" +
                                "e),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp56, "transferBufferIndex of FastTransferSourceGetBuffer, state S195");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    4,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                        "Element"}, new object[] {
                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 6, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp57, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S195");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp58, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S195");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of FastTransferSourceGetBuffer, state S195");
                        this.Manager.Comment("reaching state \'S199\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp60 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S203\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp60, "return of Release, state S203");
                        this.Manager.Comment("reaching state \'S207\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp61 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S211\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of Release, state S211");
                        this.Manager.Comment("reaching state \'S215\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp62 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S219\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of Release, state S219");
                        this.Manager.Comment("reaching state \'S223\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp63 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S227\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of Release, state S227");
                        this.Manager.Comment("reaching state \'S231\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp64 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S235\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of Release, state S235");
                        this.Manager.Comment("reaching state \'S239\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp65 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S243\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Release, state S243");
                        this.Manager.Comment("reaching state \'S247\'");
                        goto label0;
                    }
                    if ((temp114 == 1)) {
                        this.Manager.Comment("reaching state \'S32\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagIdsetGiven,True,0)\'");
                        temp66 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S36\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of SynchronizationUploadState, state S36");
                        this.Manager.Comment("reaching state \'S40\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagCnsetSeen,False,0)\'");
                        temp67 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S44\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of SynchronizationUploadState, state S44");
                        this.Manager.Comment("reaching state \'S48\'");
                        int temp68;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp69;
                        bool temp70;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                        temp71 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp68, out temp69, out temp70);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S52\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=1,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiv" +
                                "en={3},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild=F" +
                                "alse,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},I" +
                                "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstrac" +
                                "tContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null," +
                                "AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPi" +
                                "dTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadState" +
                                "ChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                                "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTim" +
                                "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                " False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp68, "transferBufferIndex of FastTransferSourceGetBuffer, state S52");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    1,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                1,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp69, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S52");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp70, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S52");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of FastTransferSourceGetBuffer, state S52");
                        this.Manager.Comment("reaching state \'S56\'");
                        int temp72;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp73 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp72);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S60\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp72, "synchronizationHandleIndex of SynchronizationOpenCollector, state S60");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of SynchronizationOpenCollector, state S60");
                        this.Manager.Comment("reaching state \'S64\'");
                        int temp74;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,6,3,{\"Pid" +
                                "TagFolderType\"},0,out _,AINCLUDEB)\'");
                        temp75 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 6, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp74, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes)(1)));
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S68\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 4]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp74, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S68");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of SynchronizationImportHierarchyChangeWithConflict, state S68");
                        this.Manager.Comment("reaching state \'S72\'");
                        int temp76;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp77 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp76);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S76\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp76, "downloadcontextHandleIndex of SynchronizationConfigure, state S76");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of SynchronizationConfigure, state S76");
                        this.Manager.Comment("reaching state \'S80\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                        temp78 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S84\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp78, "return of SynchronizationUploadState, state S84");
                        this.Manager.Comment("reaching state \'S88\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                        temp79 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S92\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of SynchronizationUploadState, state S92");
                        this.Manager.Comment("reaching state \'S96\'");
                        int temp80;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp81;
                        bool temp82;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                        temp83 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp80, out temp81, out temp82);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S100\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=2,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                "en={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={}" +
                                ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                "ut False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp80, "transferBufferIndex of FastTransferSourceGetBuffer, state S100");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    2,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp81, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S100");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp82, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S100");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of FastTransferSourceGetBuffer, state S100");
                        this.Manager.Comment("reaching state \'S104\'");
                        int temp84;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp85 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp84);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S108\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp84, "synchronizationHandleIndex of SynchronizationOpenCollector, state S108");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp85, "return of SynchronizationOpenCollector, state S108");
                        this.Manager.Comment("reaching state \'S112\'");
                        int temp86;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,8,3,{\"Pid" +
                                "TagFolderType\"},0,out _,BINCLUDEA)\'");
                        temp87 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 8, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp86, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.BINCLUDEA);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S116\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 5]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp86, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S116");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of SynchronizationImportHierarchyChangeWithConflict, state S116");
                        this.Manager.Comment("reaching state \'S120\'");
                        int temp88;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp89 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp88);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S124\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp88, "downloadcontextHandleIndex of SynchronizationConfigure, state S124");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of SynchronizationConfigure, state S124");
                        this.Manager.Comment("reaching state \'S128\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp90 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S132\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of SynchronizationUploadState, state S132");
                        this.Manager.Comment("reaching state \'S136\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp91 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S140\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of SynchronizationUploadState, state S140");
                        this.Manager.Comment("reaching state \'S144\'");
                        int temp92;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp93;
                        bool temp94;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp95;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp95 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp92, out temp93, out temp94);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S148\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                "en={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                                "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                                "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                                "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                                "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                                "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                                "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                                "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                                "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                                "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                                "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                                "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                                "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                                "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                                "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                                "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                                "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                                "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                                "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                                "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                                "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                                "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                                "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                                "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                                "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                                "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                                "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                                "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                                "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                                "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                                "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                                "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                                "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                                "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                                "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                                "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                                "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                                ",out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp92, "transferBufferIndex of FastTransferSourceGetBuffer, state S148");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    3,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp93, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S148");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp94, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S148");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp95, "return of FastTransferSourceGetBuffer, state S148");
                        this.Manager.Comment("reaching state \'S152\'");
                        int temp96;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp97 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp96);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S156\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp96, "synchronizationHandleIndex of SynchronizationOpenCollector, state S156");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of SynchronizationOpenCollector, state S156");
                        this.Manager.Comment("reaching state \'S160\'");
                        int temp98;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,10,3,{\"Pi" +
                                "dTagFolderType\"},0,out _,CONFLICT)\'");
                        temp99 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 10, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp98, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.CONFLICT);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S164\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 6]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp98, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S164");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of SynchronizationImportHierarchyChangeWithConflict, state S164");
                        this.Manager.Comment("reaching state \'S168\'");
                        int temp100;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp101 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp100);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S172\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp100, "downloadcontextHandleIndex of SynchronizationConfigure, state S172");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp101, "return of SynchronizationConfigure, state S172");
                        this.Manager.Comment("reaching state \'S176\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp102;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagIdsetGiven,True,0)\'");
                        temp102 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S180\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp102, "return of SynchronizationUploadState, state S180");
                        this.Manager.Comment("reaching state \'S184\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp103;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagCnsetSeen,False,0)\'");
                        temp103 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S188\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp103, "return of SynchronizationUploadState, state S188");
                        this.Manager.Comment("reaching state \'S192\'");
                        int temp104;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp105;
                        bool temp106;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,11,Normal,out _,out _,out _)\'");
                        temp107 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 11, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp104, out temp105, out temp106);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S196\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=4,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiv" +
                                "en={3,4,5,6},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d={},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                                "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRea" +
                                "dStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdS" +
                                "etGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliv" +
                                "eryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstract" +
                                "FolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagN" +
                                "ewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,I" +
                                "sSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage" +
                                "(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList" +
                                "(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMess" +
                                "ageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageC" +
                                "hildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDel" +
                                "Prop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fa" +
                                "lse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFold" +
                                "er=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut" +
                                "=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConten" +
                                "tNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPro" +
                                "p=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagF" +
                                "XDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMes" +
                                "sage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                                "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                                "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                                "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                                "e=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSta" +
                                "te(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumb" +
                                "er=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                                "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                                "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                                "=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fals" +
                                "e),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp104, "transferBufferIndex of FastTransferSourceGetBuffer, state S196");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    4,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                        "Element"}, new object[] {
                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 6, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp105, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S196");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp106, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S196");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp107, "return of FastTransferSourceGetBuffer, state S196");
                        this.Manager.Comment("reaching state \'S200\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp108 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S204\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of Release, state S204");
                        this.Manager.Comment("reaching state \'S208\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp109 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S212\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp109, "return of Release, state S212");
                        this.Manager.Comment("reaching state \'S216\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp110 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S220\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp110, "return of Release, state S220");
                        this.Manager.Comment("reaching state \'S224\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp111 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S228\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of Release, state S228");
                        this.Manager.Comment("reaching state \'S232\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp112 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S236\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of Release, state S236");
                        this.Manager.Comment("reaching state \'S240\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp113 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S244\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of Release, state S244");
                        this.Manager.Comment("reaching state \'S248\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp219 == 1)) {
                    this.Manager.Comment("reaching state \'S16\'");
                    int temp115;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                    this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                    temp116 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp115);
                    this.Manager.Checkpoint("MS-OXCFXICS_R778");
                    this.Manager.Checkpoint("MS-OXCFXICS_R769");
                    this.Manager.Comment("reaching state \'S18\'");
                    this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp115, "synchronizationHandleIndex of SynchronizationOpenCollector, state S18");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of SynchronizationOpenCollector, state S18");
                    this.Manager.Comment("reaching state \'S20\'");
                    int temp117;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp118;
                    this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChange(1,4,3,{\"PidTagFolderTyp" +
                            "e\"},0,out _)\'");
                    temp118 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChange(1, 4, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                    "Element"}, new object[] {
                                                    Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp117);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                    this.Manager.Checkpoint("MS-OXCFXICS_R816");
                    this.Manager.Comment("reaching state \'S22\'");
                    this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChange/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp117, "folderIdIndex of SynchronizationImportHierarchyChange, state S22");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp118, "return of SynchronizationImportHierarchyChange, state S22");
                    this.Manager.Comment("reaching state \'S24\'");
                    int temp119;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                            "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                    temp120 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAttachLongFilename",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp119);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S26\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 5]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp119, "downloadcontextHandleIndex of SynchronizationConfigure, state S26");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of SynchronizationConfigure, state S26");
                    this.Manager.Comment("reaching state \'S28\'");
                    bool temp121;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp121);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp121);
                    this.Manager.Comment("reaching state \'S30\'");
                    int temp218 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S08_SyncICSFolderConflict_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp218 == 0)) {
                        this.Manager.Comment("reaching state \'S33\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagIdsetGiven,True,0)\'");
                        temp122 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S37\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp122, "return of SynchronizationUploadState, state S37");
                        this.Manager.Comment("reaching state \'S41\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagCnsetSeen,False,0)\'");
                        temp123 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S45\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of SynchronizationUploadState, state S45");
                        this.Manager.Comment("reaching state \'S49\'");
                        int temp124;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp125;
                        bool temp126;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                        temp127 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp124, out temp125, out temp126);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S53\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=1,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiv" +
                                "en={3},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild=F" +
                                "alse,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},I" +
                                "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstrac" +
                                "tContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null," +
                                "AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPi" +
                                "dTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadState" +
                                "ChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                                "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTim" +
                                "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                " False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp124, "transferBufferIndex of FastTransferSourceGetBuffer, state S53");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    1,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                1,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp125, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S53");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp126, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S53");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp127, "return of FastTransferSourceGetBuffer, state S53");
                        this.Manager.Comment("reaching state \'S57\'");
                        int temp128;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp129 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp128);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S61\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp128, "synchronizationHandleIndex of SynchronizationOpenCollector, state S61");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp129, "return of SynchronizationOpenCollector, state S61");
                        this.Manager.Comment("reaching state \'S65\'");
                        int temp130;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,6,3,{\"Pid" +
                                "TagFolderType\"},0,out _,AINCLUDEB)\'");
                        temp131 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 6, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp130, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes)(1)));
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S69\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 4]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp130, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S69");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of SynchronizationImportHierarchyChangeWithConflict, state S69");
                        this.Manager.Comment("reaching state \'S73\'");
                        int temp132;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp133 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp132);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S77\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp132, "downloadcontextHandleIndex of SynchronizationConfigure, state S77");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp133, "return of SynchronizationConfigure, state S77");
                        this.Manager.Comment("reaching state \'S81\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp134;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                        temp134 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S85\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp134, "return of SynchronizationUploadState, state S85");
                        this.Manager.Comment("reaching state \'S89\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp135;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                        temp135 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S93\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp135, "return of SynchronizationUploadState, state S93");
                        this.Manager.Comment("reaching state \'S97\'");
                        int temp136;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp137;
                        bool temp138;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp139;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                        temp139 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp136, out temp137, out temp138);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S101\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=2,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                "en={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={}" +
                                ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                "ut False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp136, "transferBufferIndex of FastTransferSourceGetBuffer, state S101");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    2,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp137, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S101");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp138, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S101");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp139, "return of FastTransferSourceGetBuffer, state S101");
                        this.Manager.Comment("reaching state \'S105\'");
                        int temp140;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp141 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp140);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S109\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp140, "synchronizationHandleIndex of SynchronizationOpenCollector, state S109");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of SynchronizationOpenCollector, state S109");
                        this.Manager.Comment("reaching state \'S113\'");
                        int temp142;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,8,3,{\"Pid" +
                                "TagFolderType\"},0,out _,BINCLUDEA)\'");
                        temp143 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 8, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp142, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.BINCLUDEA);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S117\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 5]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp142, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S117");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of SynchronizationImportHierarchyChangeWithConflict, state S117");
                        this.Manager.Comment("reaching state \'S121\'");
                        int temp144;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp145;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp145 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp144);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S125\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp144, "downloadcontextHandleIndex of SynchronizationConfigure, state S125");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp145, "return of SynchronizationConfigure, state S125");
                        this.Manager.Comment("reaching state \'S129\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp146 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S133\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp146, "return of SynchronizationUploadState, state S133");
                        this.Manager.Comment("reaching state \'S137\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp147;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp147 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S141\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp147, "return of SynchronizationUploadState, state S141");
                        this.Manager.Comment("reaching state \'S145\'");
                        int temp148;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp149;
                        bool temp150;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp151 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp148, out temp149, out temp150);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S149\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                "en={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                                "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                                "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                                "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                                "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                                "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                                "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                                "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                                "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                                "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                                "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                                "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                                "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                                "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                                "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                                "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                                "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                                "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                                "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                                "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                                "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                                "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                                "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                                "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                                "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                                "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                                "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                                "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                                "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                                "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                                "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                                "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                                "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                                "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                                "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                                "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                                "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                                ",out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp148, "transferBufferIndex of FastTransferSourceGetBuffer, state S149");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    3,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp149, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S149");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp150, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S149");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of FastTransferSourceGetBuffer, state S149");
                        this.Manager.Comment("reaching state \'S153\'");
                        int temp152;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp153;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp153 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp152);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S157\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp152, "synchronizationHandleIndex of SynchronizationOpenCollector, state S157");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp153, "return of SynchronizationOpenCollector, state S157");
                        this.Manager.Comment("reaching state \'S161\'");
                        int temp154;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp155;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,10,3,{\"Pi" +
                                "dTagFolderType\"},0,out _,CONFLICT)\'");
                        temp155 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 10, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp154, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.CONFLICT);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S165\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 6]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp154, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S165");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp155, "return of SynchronizationImportHierarchyChangeWithConflict, state S165");
                        this.Manager.Comment("reaching state \'S169\'");
                        int temp156;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp157;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp157 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp156);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S173\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp156, "downloadcontextHandleIndex of SynchronizationConfigure, state S173");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp157, "return of SynchronizationConfigure, state S173");
                        this.Manager.Comment("reaching state \'S177\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp158;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagIdsetGiven,True,0)\'");
                        temp158 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S181\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp158, "return of SynchronizationUploadState, state S181");
                        this.Manager.Comment("reaching state \'S185\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp159;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagCnsetSeen,False,0)\'");
                        temp159 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S189\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp159, "return of SynchronizationUploadState, state S189");
                        this.Manager.Comment("reaching state \'S193\'");
                        int temp160;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp161;
                        bool temp162;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,11,Normal,out _,out _,out _)\'");
                        temp163 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 11, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp160, out temp161, out temp162);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S197\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=4,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiv" +
                                "en={3,4,5,6},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d={},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                                "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRea" +
                                "dStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdS" +
                                "etGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliv" +
                                "eryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstract" +
                                "FolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagN" +
                                "ewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,I" +
                                "sSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage" +
                                "(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList" +
                                "(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMess" +
                                "ageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageC" +
                                "hildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDel" +
                                "Prop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fa" +
                                "lse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFold" +
                                "er=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut" +
                                "=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConten" +
                                "tNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPro" +
                                "p=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagF" +
                                "XDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMes" +
                                "sage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                                "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                                "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                                "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                                "e=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSta" +
                                "te(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumb" +
                                "er=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                                "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                                "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                                "=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fals" +
                                "e),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp160, "transferBufferIndex of FastTransferSourceGetBuffer, state S197");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    4,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                        "Element"}, new object[] {
                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 6, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp161, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S197");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp162, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S197");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of FastTransferSourceGetBuffer, state S197");
                        this.Manager.Comment("reaching state \'S201\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp164 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S205\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp164, "return of Release, state S205");
                        this.Manager.Comment("reaching state \'S209\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp165 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S213\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of Release, state S213");
                        this.Manager.Comment("reaching state \'S217\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp166;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp166 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S221\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp166, "return of Release, state S221");
                        this.Manager.Comment("reaching state \'S225\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp167 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S229\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of Release, state S229");
                        this.Manager.Comment("reaching state \'S233\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp168 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S237\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of Release, state S237");
                        this.Manager.Comment("reaching state \'S241\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp169 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S245\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of Release, state S245");
                        this.Manager.Comment("reaching state \'S249\'");
                        goto label1;
                    }
                    if ((temp218 == 1)) {
                        this.Manager.Comment("reaching state \'S34\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagIdsetGiven,True,0)\'");
                        temp170 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S38\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of SynchronizationUploadState, state S38");
                        this.Manager.Comment("reaching state \'S42\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,5,PidTagCnsetSeen,False,0)\'");
                        temp171 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 5, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S46\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of SynchronizationUploadState, state S46");
                        this.Manager.Comment("reaching state \'S50\'");
                        int temp172;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp173;
                        bool temp174;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                        temp175 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp172, out temp173, out temp174);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S54\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=1,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiv" +
                                "en={3},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild=F" +
                                "alse,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},I" +
                                "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstrac" +
                                "tContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=null," +
                                "AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,IsPi" +
                                "dTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadState" +
                                "ChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                                "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTim" +
                                "e=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolder" +
                                "Content(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFo" +
                                "lderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFo" +
                                "lderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFol" +
                                "derMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPid" +
                                "TagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageCon" +
                                "tent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildre" +
                                "n(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=F" +
                                "alse),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,St" +
                                "ringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=Abs" +
                                "tractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False" +
                                ",IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOu" +
                                "t=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fals" +
                                "e,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelPr" +
                                "op=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=A" +
                                "bsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=F" +
                                "alse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelP" +
                                "rop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fa" +
                                "lse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fals" +
                                "e,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(Abs" +
                                "tractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,Is" +
                                "NewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=Fal" +
                                "se),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=Fa" +
                                "lse,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelPr" +
                                "op=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=Fal" +
                                "se,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False" +
                                ",IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut" +
                                "=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermis" +
                                "sionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPre" +
                                "cededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPro" +
                                "pertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesI" +
                                "nOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out" +
                                " False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp172, "transferBufferIndex of FastTransferSourceGetBuffer, state S54");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    1,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                1,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp173, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S54");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp174, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S54");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of FastTransferSourceGetBuffer, state S54");
                        this.Manager.Comment("reaching state \'S58\'");
                        int temp176;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp177 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp176);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S62\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp176, "synchronizationHandleIndex of SynchronizationOpenCollector, state S62");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of SynchronizationOpenCollector, state S62");
                        this.Manager.Comment("reaching state \'S66\'");
                        int temp178;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,6,3,{\"Pid" +
                                "TagFolderType\"},0,out _,AINCLUDEB)\'");
                        temp179 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 6, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp178, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes)(1)));
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S70\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 4]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp178, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S70");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of SynchronizationImportHierarchyChangeWithConflict, state S70");
                        this.Manager.Comment("reaching state \'S74\'");
                        int temp180;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp181;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp181 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp180);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S78\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp180, "downloadcontextHandleIndex of SynchronizationConfigure, state S78");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp181, "return of SynchronizationConfigure, state S78");
                        this.Manager.Comment("reaching state \'S82\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                        temp182 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S86\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of SynchronizationUploadState, state S86");
                        this.Manager.Comment("reaching state \'S90\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp183;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                        temp183 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S94\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp183, "return of SynchronizationUploadState, state S94");
                        this.Manager.Comment("reaching state \'S98\'");
                        int temp184;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp185;
                        bool temp186;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp187;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                        temp187 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp184, out temp185, out temp186);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S102\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=2,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiv" +
                                "en={3,4},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChild" +
                                "=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={}" +
                                ",IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abstr" +
                                "actContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nul" +
                                "l,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,Is" +
                                "PidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSta" +
                                "teChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGi" +
                                "ven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChang" +
                                "eNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryT" +
                                "ime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFold" +
                                "erContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFX" +
                                "FolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSub" +
                                "FolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsF" +
                                "olderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsP" +
                                "idTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageC" +
                                "ontent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChild" +
                                "ren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp" +
                                "=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False," +
                                "StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=A" +
                                "bstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fal" +
                                "se,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNot" +
                                "Out=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=Fa" +
                                "lse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDel" +
                                "Prop=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage" +
                                "=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(A" +
                                "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                                "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                                "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                                "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                                "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                                "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                                "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                                "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                                "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                                "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                                "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                                "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                                "ut False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp184, "transferBufferIndex of FastTransferSourceGetBuffer, state S102");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    2,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp185, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S102");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp186, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S102");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp187, "return of FastTransferSourceGetBuffer, state S102");
                        this.Manager.Comment("reaching state \'S106\'");
                        int temp188;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp189;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp189 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp188);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S110\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 8]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp188, "synchronizationHandleIndex of SynchronizationOpenCollector, state S110");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp189, "return of SynchronizationOpenCollector, state S110");
                        this.Manager.Comment("reaching state \'S114\'");
                        int temp190;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp191;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,8,3,{\"Pid" +
                                "TagFolderType\"},0,out _,BINCLUDEA)\'");
                        temp191 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 8, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp190, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.BINCLUDEA);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S118\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 5]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp190, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S118");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp191, "return of SynchronizationImportHierarchyChangeWithConflict, state S118");
                        this.Manager.Comment("reaching state \'S122\'");
                        int temp192;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp193 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp192);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S126\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp192, "downloadcontextHandleIndex of SynchronizationConfigure, state S126");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of SynchronizationConfigure, state S126");
                        this.Manager.Comment("reaching state \'S130\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp194;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp194 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S134\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp194, "return of SynchronizationUploadState, state S134");
                        this.Manager.Comment("reaching state \'S138\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp195;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp195 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S142\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp195, "return of SynchronizationUploadState, state S142");
                        this.Manager.Comment("reaching state \'S146\'");
                        int temp196;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp197;
                        bool temp198;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp199;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp199 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp196, out temp197, out temp198);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S150\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=3,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiv" +
                                "en={3,4,5},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "{},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abs" +
                                "tractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=n" +
                                "ull,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null," +
                                "IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadS" +
                                "tateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                                "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliver" +
                                "yTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFo" +
                                "lderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNew" +
                                "FXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsS" +
                                "ubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(I" +
                                "sFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(I" +
                                "sPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessag" +
                                "eContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChi" +
                                "ldren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPr" +
                                "op=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fals" +
                                "e,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder" +
                                "=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=F" +
                                "alse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentN" +
                                "otOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=" +
                                "False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXD" +
                                "elProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessa" +
                                "ge=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                                "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                                "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                                "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                                "False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState" +
                                "(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fals" +
                                "e,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber" +
                                "=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                                "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                                "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                                "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                                "alse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarnin" +
                                "gOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPe" +
                                "rmissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachmen" +
                                "tPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Strin" +
                                "gPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropert" +
                                "iesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)" +
                                ",out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp196, "transferBufferIndex of FastTransferSourceGetBuffer, state S150");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    3,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp197, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S150");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp198, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S150");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp199, "return of FastTransferSourceGetBuffer, state S150");
                        this.Manager.Comment("reaching state \'S154\'");
                        int temp200;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                        this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Hierarchy,out _)\'");
                        temp201 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, out temp200);
                        this.Manager.Checkpoint("MS-OXCFXICS_R778");
                        this.Manager.Checkpoint("MS-OXCFXICS_R769");
                        this.Manager.Comment("reaching state \'S158\'");
                        this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 10]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp200, "synchronizationHandleIndex of SynchronizationOpenCollector, state S158");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of SynchronizationOpenCollector, state S158");
                        this.Manager.Comment("reaching state \'S162\'");
                        int temp202;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                        this.Manager.Comment("executing step \'call SynchronizationImportHierarchyChangeWithConflict(1,10,3,{\"Pi" +
                                "dTagFolderType\"},0,out _,CONFLICT)\'");
                        temp203 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportHierarchyChangeWithConflict(1, 10, 3, this.Make<Microsoft.Modeling.Set<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<string, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<string, Microsoft.Xrt.Runtime.Singleton>(), "PidTagFolderType", this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                        "Element"}, new object[] {
                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}), 0, out temp202, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ConflictTypes.CONFLICT);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                        this.Manager.Checkpoint("MS-OXCFXICS_R816");
                        this.Manager.Comment("reaching state \'S166\'");
                        this.Manager.Comment("checking step \'return SynchronizationImportHierarchyChangeWithConflict/[out 6]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp202, "folderIdIndex of SynchronizationImportHierarchyChangeWithConflict, state S166");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of SynchronizationImportHierarchyChangeWithConflict, state S166");
                        this.Manager.Comment("reaching state \'S170\'");
                        int temp204;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Hierarchy,Unicode|ForceUnicode," +
                                "Unicode|NoForeignIdentifiers,Eid,[\"PidTagAttachLongFilename\"],out _)\'");
                        temp205 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes.Hierarchy, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(257)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAttachLongFilename",
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp204);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S174\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 11]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 11, temp204, "downloadcontextHandleIndex of SynchronizationConfigure, state S174");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of SynchronizationConfigure, state S174");
                        this.Manager.Comment("reaching state \'S178\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp206;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagIdsetGiven,True,0)\'");
                        temp206 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S182\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp206, "return of SynchronizationUploadState, state S182");
                        this.Manager.Comment("reaching state \'S186\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp207;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,11,PidTagCnsetSeen,False,0)\'");
                        temp207 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 11, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S190\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp207, "return of SynchronizationUploadState, state S190");
                        this.Manager.Comment("reaching state \'S194\'");
                        int temp208;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp209;
                        bool temp210;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp211;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,11,Normal,out _,out _,out _)\'");
                        temp211 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 11, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp208, out temp209, out temp210);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3322");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1209");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1211");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2730");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1095");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3500");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1097");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2178001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2077");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2179001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2042");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2235");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1128");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S198\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 4,out AbstractFastTransfer" +
                                "Stream(StreamType=hierarchySync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=True,IsPidTagParentFolde" +
                                "rIdExist=True,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=" +
                                "True),FolderCount=4,FinalICSState=AbstractState(AbstractICSStateIndex=4,IdSetGiv" +
                                "en={3,4,5,6},IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=True),IsParentFolderBeforeC" +
                                "hild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                                "d={},IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                                "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRea" +
                                "dStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdS" +
                                "etGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyC" +
                                "hangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliv" +
                                "eryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstract" +
                                "FolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagN" +
                                "ewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,I" +
                                "sSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage" +
                                "(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList" +
                                "(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMess" +
                                "ageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageC" +
                                "hildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDel" +
                                "Prop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fa" +
                                "lse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFold" +
                                "er=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut" +
                                "=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConten" +
                                "tNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPro" +
                                "p=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagF" +
                                "XDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMes" +
                                "sage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                                "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                                "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                                "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                                "e=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSta" +
                                "te(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumb" +
                                "er=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                                "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                                "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                                "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                                "=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fals" +
                                "e),out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp208, "transferBufferIndex of FastTransferSourceGetBuffer, state S198");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.hierarchySync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                true,
                                                                true,
                                                                false,
                                                                true}),
                                                    4,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                4,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                        "Element"}, new object[] {
                                                                                                        Microsoft.Xrt.Runtime.Singleton.Single})), 4, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                    "Element"}, new object[] {
                                                                                                    Microsoft.Xrt.Runtime.Singleton.Single})), 5, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                                "Element"}, new object[] {
                                                                                                Microsoft.Xrt.Runtime.Singleton.Single})), 6, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp209, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S198");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp210, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S198");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp211, "return of FastTransferSourceGetBuffer, state S198");
                        this.Manager.Comment("reaching state \'S202\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp212;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp212 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S206\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp212, "return of Release, state S206");
                        this.Manager.Comment("reaching state \'S210\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp213 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S214\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of Release, state S214");
                        this.Manager.Comment("reaching state \'S218\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp214;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp214 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S222\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp214, "return of Release, state S222");
                        this.Manager.Comment("reaching state \'S226\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp215;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S230\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp215, "return of Release, state S230");
                        this.Manager.Comment("reaching state \'S234\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp216 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S238\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of Release, state S238");
                        this.Manager.Comment("reaching state \'S242\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp217;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp217 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S246\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp217, "return of Release, state S246");
                        this.Manager.Comment("reaching state \'S250\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp220 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S14");
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S29");
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S29");
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S14");
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S30");
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S30");
        }
        
        private void MSOXCFXICS_S08_SyncICSFolderConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}