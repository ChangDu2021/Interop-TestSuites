//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSContentsPartialItem_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSContentsPartialItem_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp94 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp94 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S20\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S24");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S24");
                this.Manager.Comment("reaching state \'S28\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S32");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S32");
                this.Manager.Comment("reaching state \'S36\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S40");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S40");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S40");
                this.Manager.Comment("reaching state \'S44\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S48");
                this.Manager.Comment("reaching state \'S52\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "synchronizationHandleIndex of SynchronizationOpenCollector, state S56");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SynchronizationOpenCollector, state S56");
                this.Manager.Comment("reaching state \'S60\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "importMessageHandleIndex of SynchronizationImportMessageChange, state S64");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationImportMessageChange, state S64");
                this.Manager.Comment("reaching state \'S68\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp14, "messageIdIndex of SaveChangesMessage, state S72");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S72");
                this.Manager.Comment("reaching state \'S76\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode|P" +
                        "artialItem,Unicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(25)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "downloadcontextHandleIndex of SynchronizationConfigure, state S80");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of SynchronizationConfigure, state S80");
                this.Manager.Comment("reaching state \'S84\'");
                bool temp18;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp18);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp18);
                this.Manager.Comment("reaching state \'S88\'");
                int temp93 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp93 == 0)) {
                    this.Manager.Comment("reaching state \'S92\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp19 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S100\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp19, "return of SynchronizationUploadState, state S100");
                    this.Manager.Comment("reaching state \'S108\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp20 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S116\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of SynchronizationUploadState, state S116");
                    this.Manager.Comment("reaching state \'S124\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp21 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S132\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of SynchronizationUploadState, state S132");
                    this.Manager.Comment("reaching state \'S140\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp22 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S148\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of SynchronizationUploadState, state S148");
                    this.Manager.Comment("reaching state \'S156\'");
                    int temp23;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp24;
                    bool temp25;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp26 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp23, out temp24, out temp25);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S164\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp23, "transferBufferIndex of FastTransferSourceGetBuffer, state S164");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp24, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S164");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp25, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S164");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of FastTransferSourceGetBuffer, state S164");
                    this.Manager.Comment("reaching state \'S172\'");
                    int temp27;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp28 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp27);
                    this.Manager.Comment("reaching state \'S180\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp27, "openMessageHandleIndex of OpenMessage, state S180");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of OpenMessage, state S180");
                    this.Manager.Comment("reaching state \'S188\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp29 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S196\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of SetProperties, state S196");
                    this.Manager.Comment("reaching state \'S204\'");
                    int temp30;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp31 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp30);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S212\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp30, "messageIdIndex of SaveChangesMessage, state S212");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of SaveChangesMessage, state S212");
                    this.Manager.Comment("reaching state \'S220\'");
                    int temp32;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode|P" +
                            "artialItem,Unicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp33 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(25)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp32);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S228\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp32, "downloadcontextHandleIndex of SynchronizationConfigure, state S228");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of SynchronizationConfigure, state S228");
                    this.Manager.Comment("reaching state \'S236\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp34 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Comment("reaching state \'S244\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp34, "return of SynchronizationUploadState, state S244");
                    this.Manager.Comment("reaching state \'S252\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp35 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S260\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of SynchronizationUploadState, state S260");
                    this.Manager.Comment("reaching state \'S268\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp36 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S276\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of SynchronizationUploadState, state S276");
                    this.Manager.Comment("reaching state \'S284\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp37 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S292\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of SynchronizationUploadState, state S292");
                    this.Manager.Comment("reaching state \'S300\'");
                    bool temp38;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp38);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp38);
                    this.Manager.Comment("reaching state \'S308\'");
                    int temp55 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp55 == 0)) {
                        this.Manager.Comment("reaching state \'S316\'");
                        int temp39;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp40;
                        bool temp41;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp42 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp39, out temp40, out temp41);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S332\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp39, "transferBufferIndex of FastTransferSourceGetBuffer, state S332");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp40, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S332");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp41, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S332");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of FastTransferSourceGetBuffer, state S332");
                        this.Manager.Comment("reaching state \'S348\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp43 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S364\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of SetLocalReplicaMidsetDeleted, state S364");
                        this.Manager.Comment("reaching state \'S380\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp44 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S396\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of Release, state S396");
                        this.Manager.Comment("reaching state \'S412\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp45 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S428\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of Release, state S428");
                        this.Manager.Comment("reaching state \'S444\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp46 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S460\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of Release, state S460");
                        this.Manager.Comment("reaching state \'S476\'");
                        goto label0;
                    }
                    if ((temp55 == 1)) {
                        this.Manager.Comment("reaching state \'S317\'");
                        int temp47;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp48;
                        bool temp49;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp50 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp47, out temp48, out temp49);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S333\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp47, "transferBufferIndex of FastTransferSourceGetBuffer, state S333");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp48, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S333");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp49, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S333");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of FastTransferSourceGetBuffer, state S333");
                        this.Manager.Comment("reaching state \'S349\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp51 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S365\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of SetLocalReplicaMidsetDeleted, state S365");
                        this.Manager.Comment("reaching state \'S381\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp52 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S397\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of Release, state S397");
                        this.Manager.Comment("reaching state \'S413\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp53 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S429\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of Release, state S429");
                        this.Manager.Comment("reaching state \'S445\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp54 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S461\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of Release, state S461");
                        this.Manager.Comment("reaching state \'S477\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp93 == 1)) {
                    this.Manager.Comment("reaching state \'S93\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp56 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S101\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of SynchronizationUploadState, state S101");
                    this.Manager.Comment("reaching state \'S109\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp57 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S117\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of SynchronizationUploadState, state S117");
                    this.Manager.Comment("reaching state \'S125\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp58 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S133\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of SynchronizationUploadState, state S133");
                    this.Manager.Comment("reaching state \'S141\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp59 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S149\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of SynchronizationUploadState, state S149");
                    this.Manager.Comment("reaching state \'S157\'");
                    int temp60;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp61;
                    bool temp62;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp63 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp60, out temp61, out temp62);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S165\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp60, "transferBufferIndex of FastTransferSourceGetBuffer, state S165");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp61, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S165");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp62, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S165");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of FastTransferSourceGetBuffer, state S165");
                    this.Manager.Comment("reaching state \'S173\'");
                    int temp64;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp65 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp64);
                    this.Manager.Comment("reaching state \'S181\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp64, "openMessageHandleIndex of OpenMessage, state S181");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of OpenMessage, state S181");
                    this.Manager.Comment("reaching state \'S189\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp66 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S197\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of SetProperties, state S197");
                    this.Manager.Comment("reaching state \'S205\'");
                    int temp67;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp68 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp67);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S213\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp67, "messageIdIndex of SaveChangesMessage, state S213");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of SaveChangesMessage, state S213");
                    this.Manager.Comment("reaching state \'S221\'");
                    int temp69;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode|P" +
                            "artialItem,Unicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp70 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(25)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp69);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S229\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp69, "downloadcontextHandleIndex of SynchronizationConfigure, state S229");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of SynchronizationConfigure, state S229");
                    this.Manager.Comment("reaching state \'S237\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp71 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S245\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of SynchronizationUploadState, state S245");
                    this.Manager.Comment("reaching state \'S253\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp72 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S261\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of SynchronizationUploadState, state S261");
                    this.Manager.Comment("reaching state \'S269\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp73 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S277\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of SynchronizationUploadState, state S277");
                    this.Manager.Comment("reaching state \'S285\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp74 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S293\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of SynchronizationUploadState, state S293");
                    this.Manager.Comment("reaching state \'S301\'");
                    bool temp75;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp75);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp75);
                    this.Manager.Comment("reaching state \'S309\'");
                    int temp92 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp92 == 0)) {
                        this.Manager.Comment("reaching state \'S318\'");
                        int temp76;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp77;
                        bool temp78;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp79 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp76, out temp77, out temp78);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S334\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp76, "transferBufferIndex of FastTransferSourceGetBuffer, state S334");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp77, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S334");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp78, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S334");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of FastTransferSourceGetBuffer, state S334");
                        this.Manager.Comment("reaching state \'S350\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp80 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S366\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp80, "return of SetLocalReplicaMidsetDeleted, state S366");
                        this.Manager.Comment("reaching state \'S382\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp81 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S398\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of Release, state S398");
                        this.Manager.Comment("reaching state \'S414\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp82 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S430\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of Release, state S430");
                        this.Manager.Comment("reaching state \'S446\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp83 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S462\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of Release, state S462");
                        this.Manager.Comment("reaching state \'S478\'");
                        goto label1;
                    }
                    if ((temp92 == 1)) {
                        this.Manager.Comment("reaching state \'S319\'");
                        int temp84;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp85;
                        bool temp86;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp87 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp84, out temp85, out temp86);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S335\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp84, "transferBufferIndex of FastTransferSourceGetBuffer, state S335");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp85, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S335");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp86, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S335");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of FastTransferSourceGetBuffer, state S335");
                        this.Manager.Comment("reaching state \'S351\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp88 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S367\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of SetLocalReplicaMidsetDeleted, state S367");
                        this.Manager.Comment("reaching state \'S383\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp89 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S399\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of Release, state S399");
                        this.Manager.Comment("reaching state \'S415\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp90 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S431\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of Release, state S431");
                        this.Manager.Comment("reaching state \'S447\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp91 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S463\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of Release, state S463");
                        this.Manager.Comment("reaching state \'S479\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp94 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S88");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S308");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S308");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S88");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S309");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S309");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp95;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp95);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp95);
            this.Manager.Comment("reaching state \'S3\'");
            int temp189 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp189 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S17\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S21\'");
                int temp96;
                int temp97;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp98;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp98 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp96, out temp97);
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp96, "logonHandleIndex of Logon, state S25");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp97, "inboxFolderIdIndex of Logon, state S25");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp98, "return of Logon, state S25");
                this.Manager.Comment("reaching state \'S29\'");
                int temp99;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp100 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp99);
                this.Manager.Comment("reaching state \'S33\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp99, "folderHandleIndex of OpenFolder, state S33");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of OpenFolder, state S33");
                this.Manager.Comment("reaching state \'S37\'");
                int temp101;
                int temp102;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp103;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp103 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp101, out temp102);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp101, "folderIdIndex of CreateFolder, state S41");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp102, "folderHandleIndex of CreateFolder, state S41");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp103, "return of CreateFolder, state S41");
                this.Manager.Comment("reaching state \'S45\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp104 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of GetLocalReplicaIds, state S49");
                this.Manager.Comment("reaching state \'S53\'");
                int temp105;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp106 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp105);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S57\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp105, "synchronizationHandleIndex of SynchronizationOpenCollector, state S57");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of SynchronizationOpenCollector, state S57");
                this.Manager.Comment("reaching state \'S61\'");
                int temp107;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp108 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp107);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S65\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp107, "importMessageHandleIndex of SynchronizationImportMessageChange, state S65");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of SynchronizationImportMessageChange, state S65");
                this.Manager.Comment("reaching state \'S69\'");
                int temp109;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp110 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp109);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp109, "messageIdIndex of SaveChangesMessage, state S73");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp110, "return of SaveChangesMessage, state S73");
                this.Manager.Comment("reaching state \'S77\'");
                int temp111;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode|P" +
                        "artialItem,Unicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                temp112 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(25)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp111);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S81\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp111, "downloadcontextHandleIndex of SynchronizationConfigure, state S81");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of SynchronizationConfigure, state S81");
                this.Manager.Comment("reaching state \'S85\'");
                bool temp113;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp113);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp113);
                this.Manager.Comment("reaching state \'S89\'");
                int temp188 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker3)));
                if ((temp188 == 0)) {
                    this.Manager.Comment("reaching state \'S94\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp114 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S102\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp114, "return of SynchronizationUploadState, state S102");
                    this.Manager.Comment("reaching state \'S110\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp115 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S118\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of SynchronizationUploadState, state S118");
                    this.Manager.Comment("reaching state \'S126\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp116 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S134\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of SynchronizationUploadState, state S134");
                    this.Manager.Comment("reaching state \'S142\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp117 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S150\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of SynchronizationUploadState, state S150");
                    this.Manager.Comment("reaching state \'S158\'");
                    int temp118;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp119;
                    bool temp120;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp121 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp118, out temp119, out temp120);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S166\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp118, "transferBufferIndex of FastTransferSourceGetBuffer, state S166");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp119, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S166");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp120, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S166");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of FastTransferSourceGetBuffer, state S166");
                    this.Manager.Comment("reaching state \'S174\'");
                    int temp122;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp123 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp122);
                    this.Manager.Comment("reaching state \'S182\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp122, "openMessageHandleIndex of OpenMessage, state S182");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of OpenMessage, state S182");
                    this.Manager.Comment("reaching state \'S190\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp124;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp124 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S198\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp124, "return of SetProperties, state S198");
                    this.Manager.Comment("reaching state \'S206\'");
                    int temp125;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp126;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp126 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp125);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S214\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp125, "messageIdIndex of SaveChangesMessage, state S214");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp126, "return of SaveChangesMessage, state S214");
                    this.Manager.Comment("reaching state \'S222\'");
                    int temp127;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                            "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp128 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp127);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S230\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp127, "downloadcontextHandleIndex of SynchronizationConfigure, state S230");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of SynchronizationConfigure, state S230");
                    this.Manager.Comment("reaching state \'S238\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp129 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Comment("reaching state \'S246\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp129, "return of SynchronizationUploadState, state S246");
                    this.Manager.Comment("reaching state \'S254\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp130 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S262\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of SynchronizationUploadState, state S262");
                    this.Manager.Comment("reaching state \'S270\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp131 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S278\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of SynchronizationUploadState, state S278");
                    this.Manager.Comment("reaching state \'S286\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp132 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S294\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of SynchronizationUploadState, state S294");
                    this.Manager.Comment("reaching state \'S302\'");
                    bool temp133;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp133);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp133);
                    this.Manager.Comment("reaching state \'S310\'");
                    int temp150 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker2)));
                    if ((temp150 == 0)) {
                        this.Manager.Comment("reaching state \'S320\'");
                        int temp134;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp135;
                        bool temp136;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp137;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp137 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp134, out temp135, out temp136);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S336\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp134, "transferBufferIndex of FastTransferSourceGetBuffer, state S336");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp135, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S336");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp136, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S336");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp137, "return of FastTransferSourceGetBuffer, state S336");
                        this.Manager.Comment("reaching state \'S352\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp138;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp138 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S368\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp138, "return of SetLocalReplicaMidsetDeleted, state S368");
                        this.Manager.Comment("reaching state \'S384\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp139;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp139 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S400\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp139, "return of Release, state S400");
                        this.Manager.Comment("reaching state \'S416\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp140 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S432\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of Release, state S432");
                        this.Manager.Comment("reaching state \'S448\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp141 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S464\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of Release, state S464");
                        this.Manager.Comment("reaching state \'S480\'");
                        goto label4;
                    }
                    if ((temp150 == 1)) {
                        this.Manager.Comment("reaching state \'S321\'");
                        int temp142;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp143;
                        bool temp144;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp145;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp145 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp142, out temp143, out temp144);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S337\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp142, "transferBufferIndex of FastTransferSourceGetBuffer, state S337");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp143, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S337");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp144, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S337");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp145, "return of FastTransferSourceGetBuffer, state S337");
                        this.Manager.Comment("reaching state \'S353\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp146 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S369\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of SetLocalReplicaMidsetDeleted, state S369");
                        this.Manager.Comment("reaching state \'S385\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp147;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp147 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S401\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp147, "return of Release, state S401");
                        this.Manager.Comment("reaching state \'S417\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp148;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp148 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S433\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp148, "return of Release, state S433");
                        this.Manager.Comment("reaching state \'S449\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp149 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S465\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp149, "return of Release, state S465");
                        this.Manager.Comment("reaching state \'S481\'");
                        goto label4;
                    }
                    throw new InvalidOperationException("never reached");
                label4:
;
                    goto label6;
                }
                if ((temp188 == 1)) {
                    this.Manager.Comment("reaching state \'S95\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp151 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S103\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of SynchronizationUploadState, state S103");
                    this.Manager.Comment("reaching state \'S111\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp152 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S119\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of SynchronizationUploadState, state S119");
                    this.Manager.Comment("reaching state \'S127\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp153;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp153 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S135\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp153, "return of SynchronizationUploadState, state S135");
                    this.Manager.Comment("reaching state \'S143\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp154;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp154 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S151\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp154, "return of SynchronizationUploadState, state S151");
                    this.Manager.Comment("reaching state \'S159\'");
                    int temp155;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp156;
                    bool temp157;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp158;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp158 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp155, out temp156, out temp157);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S167\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp155, "transferBufferIndex of FastTransferSourceGetBuffer, state S167");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp156, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S167");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp157, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S167");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp158, "return of FastTransferSourceGetBuffer, state S167");
                    this.Manager.Comment("reaching state \'S175\'");
                    int temp159;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp160;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp160 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp159);
                    this.Manager.Comment("reaching state \'S183\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp159, "openMessageHandleIndex of OpenMessage, state S183");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp160, "return of OpenMessage, state S183");
                    this.Manager.Comment("reaching state \'S191\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp161;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp161 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S199\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp161, "return of SetProperties, state S199");
                    this.Manager.Comment("reaching state \'S207\'");
                    int temp162;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp163 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp162);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S215\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp162, "messageIdIndex of SaveChangesMessage, state S215");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of SaveChangesMessage, state S215");
                    this.Manager.Comment("reaching state \'S223\'");
                    int temp164;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp165;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                            "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp165 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp164);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S231\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp164, "downloadcontextHandleIndex of SynchronizationConfigure, state S231");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp165, "return of SynchronizationConfigure, state S231");
                    this.Manager.Comment("reaching state \'S239\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp166;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp166 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S247\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp166, "return of SynchronizationUploadState, state S247");
                    this.Manager.Comment("reaching state \'S255\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp167 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S263\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of SynchronizationUploadState, state S263");
                    this.Manager.Comment("reaching state \'S271\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp168 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S279\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of SynchronizationUploadState, state S279");
                    this.Manager.Comment("reaching state \'S287\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp169 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S295\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of SynchronizationUploadState, state S295");
                    this.Manager.Comment("reaching state \'S303\'");
                    bool temp170;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp170);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp170);
                    this.Manager.Comment("reaching state \'S311\'");
                    int temp187 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker5)));
                    if ((temp187 == 0)) {
                        this.Manager.Comment("reaching state \'S322\'");
                        int temp171;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp172;
                        bool temp173;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp174;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp174 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp171, out temp172, out temp173);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S338\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp171, "transferBufferIndex of FastTransferSourceGetBuffer, state S338");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp172, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S338");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp173, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S338");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp174, "return of FastTransferSourceGetBuffer, state S338");
                        this.Manager.Comment("reaching state \'S354\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp175 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S370\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of SetLocalReplicaMidsetDeleted, state S370");
                        this.Manager.Comment("reaching state \'S386\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp176;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp176 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S402\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp176, "return of Release, state S402");
                        this.Manager.Comment("reaching state \'S418\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp177 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S434\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of Release, state S434");
                        this.Manager.Comment("reaching state \'S450\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp178 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S466\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of Release, state S466");
                        this.Manager.Comment("reaching state \'S482\'");
                        goto label5;
                    }
                    if ((temp187 == 1)) {
                        this.Manager.Comment("reaching state \'S323\'");
                        int temp179;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp180;
                        bool temp181;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp182 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp179, out temp180, out temp181);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S339\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp179, "transferBufferIndex of FastTransferSourceGetBuffer, state S339");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp180, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S339");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp181, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S339");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of FastTransferSourceGetBuffer, state S339");
                        this.Manager.Comment("reaching state \'S355\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp183;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp183 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S371\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp183, "return of SetLocalReplicaMidsetDeleted, state S371");
                        this.Manager.Comment("reaching state \'S387\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp184 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S403\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp184, "return of Release, state S403");
                        this.Manager.Comment("reaching state \'S419\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp185;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp185 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S435\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp185, "return of Release, state S435");
                        this.Manager.Comment("reaching state \'S451\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp186;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp186 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S467\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp186, "return of Release, state S467");
                        this.Manager.Comment("reaching state \'S483\'");
                        goto label5;
                    }
                    throw new InvalidOperationException("never reached");
                label5:
;
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp189 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S89");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S310");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S310");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S89");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S311");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S311");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp190;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp190);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp190);
            this.Manager.Comment("reaching state \'S5\'");
            int temp284 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp284 == 0)) {
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S22\'");
                int temp191;
                int temp192;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp193 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp191, out temp192);
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp191, "logonHandleIndex of Logon, state S26");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp192, "inboxFolderIdIndex of Logon, state S26");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of Logon, state S26");
                this.Manager.Comment("reaching state \'S30\'");
                int temp194;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp195;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp195 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp194);
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp194, "folderHandleIndex of OpenFolder, state S34");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp195, "return of OpenFolder, state S34");
                this.Manager.Comment("reaching state \'S38\'");
                int temp196;
                int temp197;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp198;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp198 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp196, out temp197);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp196, "folderIdIndex of CreateFolder, state S42");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp197, "folderHandleIndex of CreateFolder, state S42");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp198, "return of CreateFolder, state S42");
                this.Manager.Comment("reaching state \'S46\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp199;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp199 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp199, "return of GetLocalReplicaIds, state S50");
                this.Manager.Comment("reaching state \'S54\'");
                int temp200;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp201 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp200);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S58\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp200, "synchronizationHandleIndex of SynchronizationOpenCollector, state S58");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of SynchronizationOpenCollector, state S58");
                this.Manager.Comment("reaching state \'S62\'");
                int temp202;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp203 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp202);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S66\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp202, "importMessageHandleIndex of SynchronizationImportMessageChange, state S66");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of SynchronizationImportMessageChange, state S66");
                this.Manager.Comment("reaching state \'S70\'");
                int temp204;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp205;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp205 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp204);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp204, "messageIdIndex of SaveChangesMessage, state S74");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp205, "return of SaveChangesMessage, state S74");
                this.Manager.Comment("reaching state \'S78\'");
                int temp206;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp207;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                temp207 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp206);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S82\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp206, "downloadcontextHandleIndex of SynchronizationConfigure, state S82");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp207, "return of SynchronizationConfigure, state S82");
                this.Manager.Comment("reaching state \'S86\'");
                bool temp208;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp208);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp208);
                this.Manager.Comment("reaching state \'S90\'");
                int temp283 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker3)));
                if ((temp283 == 0)) {
                    this.Manager.Comment("reaching state \'S96\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp209;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp209 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S104\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp209, "return of SynchronizationUploadState, state S104");
                    this.Manager.Comment("reaching state \'S112\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp210;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp210 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S120\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp210, "return of SynchronizationUploadState, state S120");
                    this.Manager.Comment("reaching state \'S128\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp211;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp211 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S136\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp211, "return of SynchronizationUploadState, state S136");
                    this.Manager.Comment("reaching state \'S144\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp212;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp212 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S152\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp212, "return of SynchronizationUploadState, state S152");
                    this.Manager.Comment("reaching state \'S160\'");
                    int temp213;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp214;
                    bool temp215;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp216 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp213, out temp214, out temp215);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S168\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp213, "transferBufferIndex of FastTransferSourceGetBuffer, state S168");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp214, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S168");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp215, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S168");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of FastTransferSourceGetBuffer, state S168");
                    this.Manager.Comment("reaching state \'S176\'");
                    int temp217;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp218;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp218 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp217);
                    this.Manager.Comment("reaching state \'S184\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp217, "openMessageHandleIndex of OpenMessage, state S184");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp218, "return of OpenMessage, state S184");
                    this.Manager.Comment("reaching state \'S192\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp219;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp219 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S200\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp219, "return of SetProperties, state S200");
                    this.Manager.Comment("reaching state \'S208\'");
                    int temp220;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp221;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp221 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp220);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S216\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp220, "messageIdIndex of SaveChangesMessage, state S216");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp221, "return of SaveChangesMessage, state S216");
                    this.Manager.Comment("reaching state \'S224\'");
                    int temp222;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp223;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                            "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp223 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp222);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S232\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp222, "downloadcontextHandleIndex of SynchronizationConfigure, state S232");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp223, "return of SynchronizationConfigure, state S232");
                    this.Manager.Comment("reaching state \'S240\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp224;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp224 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Comment("reaching state \'S248\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp224, "return of SynchronizationUploadState, state S248");
                    this.Manager.Comment("reaching state \'S256\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp225;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp225 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S264\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp225, "return of SynchronizationUploadState, state S264");
                    this.Manager.Comment("reaching state \'S272\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp226;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp226 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S280\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp226, "return of SynchronizationUploadState, state S280");
                    this.Manager.Comment("reaching state \'S288\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp227;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp227 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S296\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp227, "return of SynchronizationUploadState, state S296");
                    this.Manager.Comment("reaching state \'S304\'");
                    bool temp228;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp228);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp228);
                    this.Manager.Comment("reaching state \'S312\'");
                    int temp245 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker2)));
                    if ((temp245 == 0)) {
                        this.Manager.Comment("reaching state \'S324\'");
                        int temp229;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp230;
                        bool temp231;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp232;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp232 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp229, out temp230, out temp231);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S340\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp229, "transferBufferIndex of FastTransferSourceGetBuffer, state S340");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp230, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S340");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp231, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S340");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp232, "return of FastTransferSourceGetBuffer, state S340");
                        this.Manager.Comment("reaching state \'S356\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp233;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp233 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S372\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp233, "return of SetLocalReplicaMidsetDeleted, state S372");
                        this.Manager.Comment("reaching state \'S388\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp234;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp234 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S404\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp234, "return of Release, state S404");
                        this.Manager.Comment("reaching state \'S420\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp235;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp235 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S436\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp235, "return of Release, state S436");
                        this.Manager.Comment("reaching state \'S452\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp236;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp236 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S468\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp236, "return of Release, state S468");
                        this.Manager.Comment("reaching state \'S484\'");
                        goto label8;
                    }
                    if ((temp245 == 1)) {
                        this.Manager.Comment("reaching state \'S325\'");
                        int temp237;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp238;
                        bool temp239;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp240;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp240 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp237, out temp238, out temp239);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S341\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp237, "transferBufferIndex of FastTransferSourceGetBuffer, state S341");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp238, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S341");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp239, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S341");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp240, "return of FastTransferSourceGetBuffer, state S341");
                        this.Manager.Comment("reaching state \'S357\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp241;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp241 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S373\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp241, "return of SetLocalReplicaMidsetDeleted, state S373");
                        this.Manager.Comment("reaching state \'S389\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp242;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp242 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S405\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp242, "return of Release, state S405");
                        this.Manager.Comment("reaching state \'S421\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp243;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp243 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S437\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp243, "return of Release, state S437");
                        this.Manager.Comment("reaching state \'S453\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp244;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp244 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S469\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp244, "return of Release, state S469");
                        this.Manager.Comment("reaching state \'S485\'");
                        goto label8;
                    }
                    throw new InvalidOperationException("never reached");
                label8:
;
                    goto label10;
                }
                if ((temp283 == 1)) {
                    this.Manager.Comment("reaching state \'S97\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp246;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp246 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S105\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp246, "return of SynchronizationUploadState, state S105");
                    this.Manager.Comment("reaching state \'S113\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp247;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp247 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S121\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp247, "return of SynchronizationUploadState, state S121");
                    this.Manager.Comment("reaching state \'S129\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp248;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp248 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S137\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp248, "return of SynchronizationUploadState, state S137");
                    this.Manager.Comment("reaching state \'S145\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp249;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp249 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S153\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp249, "return of SynchronizationUploadState, state S153");
                    this.Manager.Comment("reaching state \'S161\'");
                    int temp250;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp251;
                    bool temp252;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp253;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp253 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp250, out temp251, out temp252);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S169\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp250, "transferBufferIndex of FastTransferSourceGetBuffer, state S169");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp251, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S169");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp252, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S169");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp253, "return of FastTransferSourceGetBuffer, state S169");
                    this.Manager.Comment("reaching state \'S177\'");
                    int temp254;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp255;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp255 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp254);
                    this.Manager.Comment("reaching state \'S185\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp254, "openMessageHandleIndex of OpenMessage, state S185");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp255, "return of OpenMessage, state S185");
                    this.Manager.Comment("reaching state \'S193\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp256;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp256 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S201\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp256, "return of SetProperties, state S201");
                    this.Manager.Comment("reaching state \'S209\'");
                    int temp257;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp258;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp258 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp257);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S217\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp257, "messageIdIndex of SaveChangesMessage, state S217");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp258, "return of SaveChangesMessage, state S217");
                    this.Manager.Comment("reaching state \'S225\'");
                    int temp259;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp260;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode|P" +
                            "artialItem,Unicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp260 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(25)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp259);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S233\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp259, "downloadcontextHandleIndex of SynchronizationConfigure, state S233");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp260, "return of SynchronizationConfigure, state S233");
                    this.Manager.Comment("reaching state \'S241\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp261;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp261 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S249\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp261, "return of SynchronizationUploadState, state S249");
                    this.Manager.Comment("reaching state \'S257\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp262;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp262 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S265\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp262, "return of SynchronizationUploadState, state S265");
                    this.Manager.Comment("reaching state \'S273\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp263;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp263 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S281\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp263, "return of SynchronizationUploadState, state S281");
                    this.Manager.Comment("reaching state \'S289\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp264;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp264 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S297\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp264, "return of SynchronizationUploadState, state S297");
                    this.Manager.Comment("reaching state \'S305\'");
                    bool temp265;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp265);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp265);
                    this.Manager.Comment("reaching state \'S313\'");
                    int temp282 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker5)));
                    if ((temp282 == 0)) {
                        this.Manager.Comment("reaching state \'S326\'");
                        int temp266;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp267;
                        bool temp268;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp269;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp269 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp266, out temp267, out temp268);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S342\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp266, "transferBufferIndex of FastTransferSourceGetBuffer, state S342");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp267, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S342");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp268, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S342");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp269, "return of FastTransferSourceGetBuffer, state S342");
                        this.Manager.Comment("reaching state \'S358\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp270;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp270 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S374\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp270, "return of SetLocalReplicaMidsetDeleted, state S374");
                        this.Manager.Comment("reaching state \'S390\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp271;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp271 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S406\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp271, "return of Release, state S406");
                        this.Manager.Comment("reaching state \'S422\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp272;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp272 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S438\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp272, "return of Release, state S438");
                        this.Manager.Comment("reaching state \'S454\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp273;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp273 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S470\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp273, "return of Release, state S470");
                        this.Manager.Comment("reaching state \'S486\'");
                        goto label9;
                    }
                    if ((temp282 == 1)) {
                        this.Manager.Comment("reaching state \'S327\'");
                        int temp274;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp275;
                        bool temp276;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp277;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp277 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp274, out temp275, out temp276);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S343\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp274, "transferBufferIndex of FastTransferSourceGetBuffer, state S343");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp275, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S343");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp276, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S343");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp277, "return of FastTransferSourceGetBuffer, state S343");
                        this.Manager.Comment("reaching state \'S359\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp278;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp278 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S375\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp278, "return of SetLocalReplicaMidsetDeleted, state S375");
                        this.Manager.Comment("reaching state \'S391\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp279;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp279 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S407\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp279, "return of Release, state S407");
                        this.Manager.Comment("reaching state \'S423\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp280;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp280 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S439\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp280, "return of Release, state S439");
                        this.Manager.Comment("reaching state \'S455\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp281;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp281 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S471\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp281, "return of Release, state S471");
                        this.Manager.Comment("reaching state \'S487\'");
                        goto label9;
                    }
                    throw new InvalidOperationException("never reached");
                label9:
;
                    goto label10;
                }
                throw new InvalidOperationException("never reached");
            label10:
;
                goto label11;
            }
            if ((temp284 == 1)) {
                this.Manager.Comment("reaching state \'S13\'");
                goto label11;
            }
            throw new InvalidOperationException("never reached");
        label11:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S90");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S312");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S312");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S90");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S313");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S313");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp285;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp285);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp285);
            this.Manager.Comment("reaching state \'S7\'");
            int temp379 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp379 == 0)) {
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S23\'");
                int temp286;
                int temp287;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp288;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp288 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp286, out temp287);
                this.Manager.Comment("reaching state \'S27\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp286, "logonHandleIndex of Logon, state S27");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp287, "inboxFolderIdIndex of Logon, state S27");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp288, "return of Logon, state S27");
                this.Manager.Comment("reaching state \'S31\'");
                int temp289;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp290;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp290 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp289);
                this.Manager.Comment("reaching state \'S35\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp289, "folderHandleIndex of OpenFolder, state S35");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp290, "return of OpenFolder, state S35");
                this.Manager.Comment("reaching state \'S39\'");
                int temp291;
                int temp292;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp293;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp293 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp291, out temp292);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp291, "folderIdIndex of CreateFolder, state S43");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp292, "folderHandleIndex of CreateFolder, state S43");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp293, "return of CreateFolder, state S43");
                this.Manager.Comment("reaching state \'S47\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp294;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp294 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S51\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp294, "return of GetLocalReplicaIds, state S51");
                this.Manager.Comment("reaching state \'S55\'");
                int temp295;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp296;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp296 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp295);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S59\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp295, "synchronizationHandleIndex of SynchronizationOpenCollector, state S59");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp296, "return of SynchronizationOpenCollector, state S59");
                this.Manager.Comment("reaching state \'S63\'");
                int temp297;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp298;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Normal,out _)\'");
                temp298 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp297);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S67\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp297, "importMessageHandleIndex of SynchronizationImportMessageChange, state S67");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp298, "return of SynchronizationImportMessageChange, state S67");
                this.Manager.Comment("reaching state \'S71\'");
                int temp299;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp300;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp300 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp299);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp299, "messageIdIndex of SaveChangesMessage, state S75");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp300, "return of SaveChangesMessage, state S75");
                this.Manager.Comment("reaching state \'S79\'");
                int temp301;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp302;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                        "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                temp302 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagCreationTime",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp301);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S83\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp301, "downloadcontextHandleIndex of SynchronizationConfigure, state S83");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp302, "return of SynchronizationConfigure, state S83");
                this.Manager.Comment("reaching state \'S87\'");
                bool temp303;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp303);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp303);
                this.Manager.Comment("reaching state \'S91\'");
                int temp378 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker3)));
                if ((temp378 == 0)) {
                    this.Manager.Comment("reaching state \'S98\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp304;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp304 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S106\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp304, "return of SynchronizationUploadState, state S106");
                    this.Manager.Comment("reaching state \'S114\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp305;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp305 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S122\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp305, "return of SynchronizationUploadState, state S122");
                    this.Manager.Comment("reaching state \'S130\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp306;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp306 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S138\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp306, "return of SynchronizationUploadState, state S138");
                    this.Manager.Comment("reaching state \'S146\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp307;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp307 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S154\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp307, "return of SynchronizationUploadState, state S154");
                    this.Manager.Comment("reaching state \'S162\'");
                    int temp308;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp309;
                    bool temp310;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp311;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp311 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp308, out temp309, out temp310);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S170\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp308, "transferBufferIndex of FastTransferSourceGetBuffer, state S170");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp309, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S170");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp310, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S170");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp311, "return of FastTransferSourceGetBuffer, state S170");
                    this.Manager.Comment("reaching state \'S178\'");
                    int temp312;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp313;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp313 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp312);
                    this.Manager.Comment("reaching state \'S186\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp312, "openMessageHandleIndex of OpenMessage, state S186");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp313, "return of OpenMessage, state S186");
                    this.Manager.Comment("reaching state \'S194\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp314;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp314 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S202\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp314, "return of SetProperties, state S202");
                    this.Manager.Comment("reaching state \'S210\'");
                    int temp315;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp316;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp316 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp315);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S218\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp315, "messageIdIndex of SaveChangesMessage, state S218");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp316, "return of SaveChangesMessage, state S218");
                    this.Manager.Comment("reaching state \'S226\'");
                    int temp317;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp318;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode|P" +
                            "artialItem,Unicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp318 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(25)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp317);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S234\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp317, "downloadcontextHandleIndex of SynchronizationConfigure, state S234");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp318, "return of SynchronizationConfigure, state S234");
                    this.Manager.Comment("reaching state \'S242\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp319;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp319 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Comment("reaching state \'S250\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp319, "return of SynchronizationUploadState, state S250");
                    this.Manager.Comment("reaching state \'S258\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp320;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp320 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S266\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp320, "return of SynchronizationUploadState, state S266");
                    this.Manager.Comment("reaching state \'S274\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp321;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp321 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S282\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp321, "return of SynchronizationUploadState, state S282");
                    this.Manager.Comment("reaching state \'S290\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp322;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp322 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S298\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp322, "return of SynchronizationUploadState, state S298");
                    this.Manager.Comment("reaching state \'S306\'");
                    bool temp323;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp323);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp323);
                    this.Manager.Comment("reaching state \'S314\'");
                    int temp340 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker2)));
                    if ((temp340 == 0)) {
                        this.Manager.Comment("reaching state \'S328\'");
                        int temp324;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp325;
                        bool temp326;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp327;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp327 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp324, out temp325, out temp326);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S344\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp324, "transferBufferIndex of FastTransferSourceGetBuffer, state S344");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp325, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S344");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp326, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S344");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp327, "return of FastTransferSourceGetBuffer, state S344");
                        this.Manager.Comment("reaching state \'S360\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp328;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp328 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S376\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp328, "return of SetLocalReplicaMidsetDeleted, state S376");
                        this.Manager.Comment("reaching state \'S392\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp329;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp329 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S408\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp329, "return of Release, state S408");
                        this.Manager.Comment("reaching state \'S424\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp330;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp330 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S440\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp330, "return of Release, state S440");
                        this.Manager.Comment("reaching state \'S456\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp331;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp331 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S472\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp331, "return of Release, state S472");
                        this.Manager.Comment("reaching state \'S488\'");
                        goto label12;
                    }
                    if ((temp340 == 1)) {
                        this.Manager.Comment("reaching state \'S329\'");
                        int temp332;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp333;
                        bool temp334;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp335;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp335 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp332, out temp333, out temp334);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S345\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=False,IsPidTagMidExist=True,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp332, "transferBufferIndex of FastTransferSourceGetBuffer, state S345");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp333, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S345");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp334, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S345");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp335, "return of FastTransferSourceGetBuffer, state S345");
                        this.Manager.Comment("reaching state \'S361\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp336;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp336 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S377\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp336, "return of SetLocalReplicaMidsetDeleted, state S377");
                        this.Manager.Comment("reaching state \'S393\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp337;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp337 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S409\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp337, "return of Release, state S409");
                        this.Manager.Comment("reaching state \'S425\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp338;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp338 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S441\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp338, "return of Release, state S441");
                        this.Manager.Comment("reaching state \'S457\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp339;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp339 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S473\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp339, "return of Release, state S473");
                        this.Manager.Comment("reaching state \'S489\'");
                        goto label12;
                    }
                    throw new InvalidOperationException("never reached");
                label12:
;
                    goto label14;
                }
                if ((temp378 == 1)) {
                    this.Manager.Comment("reaching state \'S99\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp341;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagIdsetGiven,True,0)\'");
                    temp341 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S107\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp341, "return of SynchronizationUploadState, state S107");
                    this.Manager.Comment("reaching state \'S115\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp342;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeen,False,0)\'");
                    temp342 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S123\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp342, "return of SynchronizationUploadState, state S123");
                    this.Manager.Comment("reaching state \'S131\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp343;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetRead,False,0)\'");
                    temp343 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S139\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp343, "return of SynchronizationUploadState, state S139");
                    this.Manager.Comment("reaching state \'S147\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp344;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,6,PidTagCnsetSeenFAI,False,0)\'");
                    temp344 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S155\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp344, "return of SynchronizationUploadState, state S155");
                    this.Manager.Comment("reaching state \'S163\'");
                    int temp345;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp346;
                    bool temp347;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp348;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp348 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp345, out temp346, out temp347);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1136");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3501");
                    this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S171\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                            "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                            "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                            "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                            "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},Is" +
                            "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                            "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                            "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                            "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                            "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                            "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                            "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                            "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                            "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                            "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                            "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                            "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                            "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                            "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                            "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                            "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                            "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                            "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                            "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                            "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                            "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                            "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                            "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                            "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                            "ccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp345, "transferBufferIndex of FastTransferSourceGetBuffer, state S171");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            false,
                                                            true}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp346, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S171");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp347, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S171");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp348, "return of FastTransferSourceGetBuffer, state S171");
                    this.Manager.Comment("reaching state \'S179\'");
                    int temp349;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp350;
                    this.Manager.Comment("executing step \'call OpenMessage(1,3,2,3,out _)\'");
                    temp350 = this.IMS_OXCFXICSAdapterInstance.OpenMessage(1, 3, 2, 3, out temp349);
                    this.Manager.Comment("reaching state \'S187\'");
                    this.Manager.Comment("checking step \'return OpenMessage/[out 7]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp349, "openMessageHandleIndex of OpenMessage, state S187");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp350, "return of OpenMessage, state S187");
                    this.Manager.Comment("reaching state \'S195\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp351;
                    this.Manager.Comment("executing step \'call SetProperties(1,7,[\"PidTagDisplayName\"])\'");
                    temp351 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 7, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagDisplayName",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                    this.Manager.Comment("reaching state \'S203\'");
                    this.Manager.Comment("checking step \'return SetProperties/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp351, "return of SetProperties, state S203");
                    this.Manager.Comment("reaching state \'S211\'");
                    int temp352;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp353;
                    this.Manager.Comment("executing step \'call SaveChangesMessage(1,7,out _)\'");
                    temp353 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 7, out temp352);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                    this.Manager.Comment("reaching state \'S219\'");
                    this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp352, "messageIdIndex of SaveChangesMessage, state S219");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp353, "return of SaveChangesMessage, state S219");
                    this.Manager.Comment("reaching state \'S227\'");
                    int temp354;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp355;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,U" +
                            "nicode|Normal,Eid,[\"PidTagCreationTime\"],out _)\'");
                    temp355 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(33)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagCreationTime",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp354);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S235\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp354, "downloadcontextHandleIndex of SynchronizationConfigure, state S235");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp355, "return of SynchronizationConfigure, state S235");
                    this.Manager.Comment("reaching state \'S243\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp356;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,1)\'");
                    temp356 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 1);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S251\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp356, "return of SynchronizationUploadState, state S251");
                    this.Manager.Comment("reaching state \'S259\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp357;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,1)\'");
                    temp357 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 1);
                    this.Manager.Comment("reaching state \'S267\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp357, "return of SynchronizationUploadState, state S267");
                    this.Manager.Comment("reaching state \'S275\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp358;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,1)\'");
                    temp358 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 1);
                    this.Manager.Comment("reaching state \'S283\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp358, "return of SynchronizationUploadState, state S283");
                    this.Manager.Comment("reaching state \'S291\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp359;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,1)\'");
                    temp359 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 1);
                    this.Manager.Comment("reaching state \'S299\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp359, "return of SynchronizationUploadState, state S299");
                    this.Manager.Comment("reaching state \'S307\'");
                    bool temp360;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(2172,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2172, out temp360);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp360);
                    this.Manager.Comment("reaching state \'S315\'");
                    int temp377 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSContentsPartialItem_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker5)));
                    if ((temp377 == 0)) {
                        this.Manager.Comment("reaching state \'S330\'");
                        int temp361;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp362;
                        bool temp363;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp364;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp364 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp361, out temp362, out temp363);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S346\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp361, "transferBufferIndex of FastTransferSourceGetBuffer, state S346");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp362, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S346");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp363, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S346");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp364, "return of FastTransferSourceGetBuffer, state S346");
                        this.Manager.Comment("reaching state \'S362\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp365;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp365 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S378\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp365, "return of SetLocalReplicaMidsetDeleted, state S378");
                        this.Manager.Comment("reaching state \'S394\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp366;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp366 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S410\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp366, "return of Release, state S410");
                        this.Manager.Comment("reaching state \'S426\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp367;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp367 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S442\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp367, "return of Release, state S442");
                        this.Manager.Comment("reaching state \'S458\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp368;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp368 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S474\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp368, "return of Release, state S474");
                        this.Manager.Comment("reaching state \'S490\'");
                        goto label13;
                    }
                    if ((temp377 == 1)) {
                        this.Manager.Comment("reaching state \'S331\'");
                        int temp369;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp370;
                        bool temp371;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp372;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp372 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp369, out temp370, out temp371);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2191");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2761");
                        this.Manager.Checkpoint("MS-OXCFXICS_R718001");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2174");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2043");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2246");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1907");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S347\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=True,IsPidTagMessageSizeExist=F" +
                                "alse,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstra" +
                                "ctDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIdse" +
                                "tNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChangesE" +
                                "xist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},Is" +
                                "NewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fal" +
                                "se,IsNewCnsetSeenPropertyChangeNumber=True),IsSortByMessageDeliveryTime=False,Is" +
                                "SortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(Is" +
                                "PidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=Fa" +
                                "lse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPreced" +
                                "edByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessage" +
                                "sPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarni" +
                                "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                                "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                                "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                                "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                                "tiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopFo" +
                                "lder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPermi" +
                                "ssionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,Is" +
                                "FolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolde" +
                                "rMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False,M" +
                                "essageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(" +
                                "AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSSt" +
                                "ateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSe" +
                                "enFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstra" +
                                "ctMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMes" +
                                "sageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False,R" +
                                "ecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,StringP" +
                                "ropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFForm" +
                                "at=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Abs" +
                                "Message=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessag" +
                                "eNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPid" +
                                "TagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInU" +
                                "nicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCode" +
                                "Page=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:Su" +
                                "ccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp369, "transferBufferIndex of FastTransferSourceGetBuffer, state S347");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                true}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp370, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S347");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp371, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S347");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp372, "return of FastTransferSourceGetBuffer, state S347");
                        this.Manager.Comment("reaching state \'S363\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp373;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp373 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S379\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp373, "return of SetLocalReplicaMidsetDeleted, state S379");
                        this.Manager.Comment("reaching state \'S395\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp374;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp374 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S411\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp374, "return of Release, state S411");
                        this.Manager.Comment("reaching state \'S427\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp375;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp375 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S443\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp375, "return of Release, state S443");
                        this.Manager.Comment("reaching state \'S459\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp376;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp376 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S475\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp376, "return of Release, state S475");
                        this.Manager.Comment("reaching state \'S491\'");
                        goto label13;
                    }
                    throw new InvalidOperationException("never reached");
                label13:
;
                    goto label14;
                }
                throw new InvalidOperationException("never reached");
            label14:
;
                goto label15;
            }
            if ((temp379 == 1)) {
                this.Manager.Comment("reaching state \'S15\'");
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S91");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S314");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S314");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S91");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S315");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S315");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsPartialItem_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
    }
}