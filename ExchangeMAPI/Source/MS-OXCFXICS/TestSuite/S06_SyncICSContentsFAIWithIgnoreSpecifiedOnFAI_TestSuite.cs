//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite : PtfTestClassBase {
        
        public S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp131 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp131 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S5\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S6");
                this.Manager.Comment("reaching state \'S7\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S8");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S8");
                this.Manager.Comment("reaching state \'S9\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S10");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S10");
                this.Manager.Comment("reaching state \'S11\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of GetLocalReplicaIds, state S12");
                this.Manager.Comment("reaching state \'S13\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "synchronizationHandleIndex of SynchronizationOpenCollector, state S14");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of SynchronizationOpenCollector, state S14");
                this.Manager.Comment("reaching state \'S15\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,4,0,Associated,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 4, 0, Microsoft.Protocols.TestSuites.Common.ImportFlag.Associated, out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R813");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "importMessageHandleIndex of SynchronizationImportMessageChange, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SynchronizationImportMessageChange, state S16");
                this.Manager.Comment("reaching state \'S17\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp14, "messageIdIndex of SaveChangesMessage, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S18");
                this.Manager.Comment("reaching state \'S19\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call CreateAttachment(1,5,out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 5, out temp16);
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return CreateAttachment/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "attachmentHandleIndex of CreateAttachment, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of CreateAttachment, state S20");
                this.Manager.Comment("reaching state \'S21\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                this.Manager.Comment("executing step \'call SaveChangesAttachment(1,6)\'");
                temp18 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 6);
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of SaveChangesAttachment, state S22");
                this.Manager.Comment("reaching state \'S23\'");
                int temp19;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                        "AI,OrderByDeliveryTime,[\"PidTagAccess\",\"PidTagDisplayName\"],out _)\'");
                temp20 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), Microsoft.Protocols.TestSuites.Common.SynchronizationFlag.FAI, Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAccess",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagDisplayName",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp19);
                this.Manager.Checkpoint("MS-OXCFXICS_R669");
                this.Manager.Checkpoint("MS-OXCFXICS_R641");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp19, "downloadcontextHandleIndex of SynchronizationConfigure, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of SynchronizationConfigure, state S24");
                this.Manager.Comment("reaching state \'S25\'");
                bool temp21;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(2657,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(2657, out temp21);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp21);
                this.Manager.Comment("reaching state \'S26\'");
                int temp130 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp130 == 0)) {
                    this.Manager.Comment("reaching state \'S27\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp22 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S29\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp22, "return of SynchronizationUploadState, state S29");
                    this.Manager.Comment("reaching state \'S31\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp23 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S33\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of SynchronizationUploadState, state S33");
                    this.Manager.Comment("reaching state \'S35\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp24 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S37\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of SynchronizationUploadState, state S37");
                    this.Manager.Comment("reaching state \'S39\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp25 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S41\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of SynchronizationUploadState, state S41");
                    this.Manager.Comment("reaching state \'S43\'");
                    int temp26;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp27;
                    bool temp28;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp29 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp26, out temp27, out temp28);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                    this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S45\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                            "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                            "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                            "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                            "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},I" +
                            "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Tr" +
                            "ue,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False,I" +
                            "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                            "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                            "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                            "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                            "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                            "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                            "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                            "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                            "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                            "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                            "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                            "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                            "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                            "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                            "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                            "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                            "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                            ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                            "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                            "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                            "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                            "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                            "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                            "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                            "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                            "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                            "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                            "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                            "uccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp26, "transferBufferIndex of FastTransferSourceGetBuffer, state S45");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            true,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp27, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S45");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp28, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S45");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of FastTransferSourceGetBuffer, state S45");
                    this.Manager.Comment("reaching state \'S47\'");
                    int temp30;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                            "AI|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagAccess\",\"PidTagDisplayName\"]" +
                            ",out _)\'");
                    temp31 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16400)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagDisplayName",
                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp30);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S49\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp30, "downloadcontextHandleIndex of SynchronizationConfigure, state S49");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of SynchronizationConfigure, state S49");
                    this.Manager.Comment("reaching state \'S51\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,0)\'");
                    temp32 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Comment("reaching state \'S53\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp32, "return of SynchronizationUploadState, state S53");
                    this.Manager.Comment("reaching state \'S55\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,0)\'");
                    temp33 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S57\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of SynchronizationUploadState, state S57");
                    this.Manager.Comment("reaching state \'S59\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,0)\'");
                    temp34 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S61\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of SynchronizationUploadState, state S61");
                    this.Manager.Comment("reaching state \'S63\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,0)\'");
                    temp35 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S65\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of SynchronizationUploadState, state S65");
                    this.Manager.Comment("reaching state \'S67\'");
                    bool temp36;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(218300301,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(218300301, out temp36);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp36);
                    this.Manager.Comment("reaching state \'S69\'");
                    int temp75 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp75 == 0)) {
                        this.Manager.Comment("reaching state \'S71\'");
                        int temp37;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp38;
                        bool temp39;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp40 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp37, out temp38, out temp39);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S75\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Tr" +
                                "ue,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp37, "transferBufferIndex of FastTransferSourceGetBuffer, state S75");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp38, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S75");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp39, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S75");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of FastTransferSourceGetBuffer, state S75");
                        this.Manager.Comment("reaching state \'S79\'");
                        int temp41;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagAcce" +
                                "ss\",\"PidTagDisplayName\"],out _)\'");
                        temp42 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16528)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagDisplayName",
                                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp41);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S83\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp41, "downloadcontextHandleIndex of SynchronizationConfigure, state S83");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of SynchronizationConfigure, state S83");
                        this.Manager.Comment("reaching state \'S87\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp43 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S91\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp43, "return of SynchronizationUploadState, state S91");
                        this.Manager.Comment("reaching state \'S95\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp44 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S99\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of SynchronizationUploadState, state S99");
                        this.Manager.Comment("reaching state \'S103\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp45 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S107\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of SynchronizationUploadState, state S107");
                        this.Manager.Comment("reaching state \'S111\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp46 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S115\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of SynchronizationUploadState, state S115");
                        this.Manager.Comment("reaching state \'S119\'");
                        int temp47;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp48;
                        bool temp49;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp50 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp47, out temp48, out temp49);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S123\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Tr" +
                                "ue,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp47, "transferBufferIndex of FastTransferSourceGetBuffer, state S123");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp48, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S123");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp49, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S123");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of FastTransferSourceGetBuffer, state S123");
                        this.Manager.Comment("reaching state \'S127\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp51 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S131\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of SetLocalReplicaMidsetDeleted, state S131");
                        this.Manager.Comment("reaching state \'S135\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp52 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S139\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of Release, state S139");
                        this.Manager.Comment("reaching state \'S143\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp53 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S147\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of Release, state S147");
                        this.Manager.Comment("reaching state \'S151\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp54 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S155\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of Release, state S155");
                        this.Manager.Comment("reaching state \'S159\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp55 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S163\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of Release, state S163");
                        this.Manager.Comment("reaching state \'S167\'");
                        goto label0;
                    }
                    if ((temp75 == 1)) {
                        this.Manager.Comment("reaching state \'S72\'");
                        int temp56;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp57;
                        bool temp58;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp59 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp56, out temp57, out temp58);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S76\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False," +
                                "IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(" +
                                "IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=" +
                                "False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrec" +
                                "ededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessa" +
                                "gesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWar" +
                                "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                                "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                                "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                                "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                                "ertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTop" +
                                "Folder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPer" +
                                "missionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False," +
                                "IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFol" +
                                "derMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False" +
                                ",MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessag" +
                                "e(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,Abs" +
                                "MessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=Fals" +
                                "e,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Stri" +
                                "ngPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFF" +
                                "ormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICS" +
                                "StateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnset" +
                                "SeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abst" +
                                "ractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,A" +
                                "bsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                                "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                                "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                                "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                                "dePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:" +
                                "Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp56, "transferBufferIndex of FastTransferSourceGetBuffer, state S76");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp57, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S76");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp58, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S76");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of FastTransferSourceGetBuffer, state S76");
                        this.Manager.Comment("reaching state \'S80\'");
                        int temp60;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagAcce" +
                                "ss\",\"PidTagDisplayName\"],out _)\'");
                        temp61 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16528)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagDisplayName",
                                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp60);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S84\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp60, "downloadcontextHandleIndex of SynchronizationConfigure, state S84");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of SynchronizationConfigure, state S84");
                        this.Manager.Comment("reaching state \'S88\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp62 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Comment("reaching state \'S92\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp62, "return of SynchronizationUploadState, state S92");
                        this.Manager.Comment("reaching state \'S96\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp63 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S100\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of SynchronizationUploadState, state S100");
                        this.Manager.Comment("reaching state \'S104\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp64 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S108\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of SynchronizationUploadState, state S108");
                        this.Manager.Comment("reaching state \'S112\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp65 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S116\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of SynchronizationUploadState, state S116");
                        this.Manager.Comment("reaching state \'S120\'");
                        int temp66;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp67;
                        bool temp68;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp69 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp66, out temp67, out temp68);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S124\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False," +
                                "IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(" +
                                "IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=" +
                                "False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrec" +
                                "ededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessa" +
                                "gesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWar" +
                                "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                                "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                                "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                                "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                                "ertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTop" +
                                "Folder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPer" +
                                "missionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False," +
                                "IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFol" +
                                "derMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False" +
                                ",MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessag" +
                                "e(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,Abs" +
                                "MessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=Fals" +
                                "e,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Stri" +
                                "ngPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFF" +
                                "ormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICS" +
                                "StateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnset" +
                                "SeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abst" +
                                "ractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,A" +
                                "bsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                                "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                                "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                                "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                                "dePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:" +
                                "Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp66, "transferBufferIndex of FastTransferSourceGetBuffer, state S124");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp67, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S124");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp68, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S124");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of FastTransferSourceGetBuffer, state S124");
                        this.Manager.Comment("reaching state \'S128\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp70 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S132\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of SetLocalReplicaMidsetDeleted, state S132");
                        this.Manager.Comment("reaching state \'S136\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp71 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S140\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of Release, state S140");
                        this.Manager.Comment("reaching state \'S144\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp72 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S148\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of Release, state S148");
                        this.Manager.Comment("reaching state \'S152\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp73 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S156\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of Release, state S156");
                        this.Manager.Comment("reaching state \'S160\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S164\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S164");
                        this.Manager.Comment("reaching state \'S168\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp130 == 1)) {
                    this.Manager.Comment("reaching state \'S28\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagIdsetGiven,True,0)\'");
                    temp76 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S30\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of SynchronizationUploadState, state S30");
                    this.Manager.Comment("reaching state \'S32\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeen,False,0)\'");
                    temp77 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S34\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of SynchronizationUploadState, state S34");
                    this.Manager.Comment("reaching state \'S36\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetSeenFAI,False,0)\'");
                    temp78 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S38\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp78, "return of SynchronizationUploadState, state S38");
                    this.Manager.Comment("reaching state \'S40\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,7,PidTagCnsetRead,False,0)\'");
                    temp79 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S42\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of SynchronizationUploadState, state S42");
                    this.Manager.Comment("reaching state \'S44\'");
                    int temp80;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp81;
                    bool temp82;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,7,Normal,out _,out _,out _)\'");
                    temp83 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 7, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp80, out temp81, out temp82);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                    this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S46\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                            "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                            "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                            "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                            "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                            "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                            "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                            "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                            "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                            "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                            "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                            "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                            "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=1,IdSetGiven={3},I" +
                            "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Tr" +
                            "ue,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False,I" +
                            "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                            "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                            "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                            "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                            "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                            "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                            "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                            "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                            "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                            "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                            "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                            "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                            "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                            "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                            "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                            "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                            "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                            ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                            "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                            "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                            "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                            "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                            "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                            "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                            "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                            "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                            "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                            "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                            "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                            "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                            "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                            "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                            "uccess\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp80, "transferBufferIndex of FastTransferSourceGetBuffer, state S46");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                            "Rep"}, new object[] {
                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                            "IsProgressPerMessagePresent",
                                                                            "FollowedFAIMessage",
                                                                            "IsMessageChangeFull",
                                                                            "IsPidTagMidExist",
                                                                            "IsPidTagMessageSizeExist",
                                                                            "IsPidTagChangeNumberExist",
                                                                            "MessageIdIndex",
                                                                            "IsRTFformat"}, new object[] {
                                                                            false,
                                                                            false,
                                                                            true,
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            3,
                                                                            false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                            "Element"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            1,
                                                            this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                        "Rep"}, new object[] {
                                                                        Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                        "Element"}, new object[] {
                                                                                        Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                            false,
                                                            true,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp81, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S46");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp82, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S46");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of FastTransferSourceGetBuffer, state S46");
                    this.Manager.Comment("reaching state \'S48\'");
                    int temp84;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp85;
                    this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                            "AI|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagAccess\",\"PidTagDisplayName\"]" +
                            ",out _)\'");
                    temp85 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16400)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagDisplayName",
                                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp84);
                    this.Manager.Checkpoint("MS-OXCFXICS_R669");
                    this.Manager.Checkpoint("MS-OXCFXICS_R641");
                    this.Manager.Comment("reaching state \'S50\'");
                    this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 8]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp84, "downloadcontextHandleIndex of SynchronizationConfigure, state S50");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp85, "return of SynchronizationConfigure, state S50");
                    this.Manager.Comment("reaching state \'S52\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagIdsetGiven,True,0)\'");
                    temp86 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                    this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                    this.Manager.Comment("reaching state \'S54\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of SynchronizationUploadState, state S54");
                    this.Manager.Comment("reaching state \'S56\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeen,False,0)\'");
                    temp87 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                    this.Manager.Comment("reaching state \'S58\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of SynchronizationUploadState, state S58");
                    this.Manager.Comment("reaching state \'S60\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetSeenFAI,False,0)\'");
                    temp88 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                    this.Manager.Comment("reaching state \'S62\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of SynchronizationUploadState, state S62");
                    this.Manager.Comment("reaching state \'S64\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                    this.Manager.Comment("executing step \'call SynchronizationUploadState(1,8,PidTagCnsetRead,False,0)\'");
                    temp89 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                    this.Manager.Comment("reaching state \'S66\'");
                    this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of SynchronizationUploadState, state S66");
                    this.Manager.Comment("reaching state \'S68\'");
                    bool temp90;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(218300301,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(218300301, out temp90);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp90);
                    this.Manager.Comment("reaching state \'S70\'");
                    int temp129 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp129 == 0)) {
                        this.Manager.Comment("reaching state \'S73\'");
                        int temp91;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp92;
                        bool temp93;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp94;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp94 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp91, out temp92, out temp93);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S77\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Tr" +
                                "ue,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp91, "transferBufferIndex of FastTransferSourceGetBuffer, state S77");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp92, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S77");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp93, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S77");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp94, "return of FastTransferSourceGetBuffer, state S77");
                        this.Manager.Comment("reaching state \'S81\'");
                        int temp95;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagAcce" +
                                "ss\",\"PidTagDisplayName\"],out _)\'");
                        temp96 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16528)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagDisplayName",
                                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp95);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S85\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp95, "downloadcontextHandleIndex of SynchronizationConfigure, state S85");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of SynchronizationConfigure, state S85");
                        this.Manager.Comment("reaching state \'S89\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp97 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S93\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of SynchronizationUploadState, state S93");
                        this.Manager.Comment("reaching state \'S97\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp98;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp98 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S101\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp98, "return of SynchronizationUploadState, state S101");
                        this.Manager.Comment("reaching state \'S105\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp99 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S109\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of SynchronizationUploadState, state S109");
                        this.Manager.Comment("reaching state \'S113\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp100 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S117\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of SynchronizationUploadState, state S117");
                        this.Manager.Comment("reaching state \'S121\'");
                        int temp101;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp102;
                        bool temp103;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp104 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp101, out temp102, out temp103);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S125\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Tr" +
                                "ue,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False,I" +
                                "sSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(I" +
                                "sPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=F" +
                                "alse,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrece" +
                                "dedByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessag" +
                                "esPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarn" +
                                "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                "rtiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTopF" +
                                "older(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPerm" +
                                "issionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False,I" +
                                "sFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFold" +
                                "erMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False," +
                                "MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage" +
                                "(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICSS" +
                                "tateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetS" +
                                "eenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abstr" +
                                "actMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsMe" +
                                "ssageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False," +
                                "RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,String" +
                                "PropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFor" +
                                "mat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,Ab" +
                                "sMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                                "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                                "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                                "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                                "ePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:S" +
                                "uccess\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp101, "transferBufferIndex of FastTransferSourceGetBuffer, state S125");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                true,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp102, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S125");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp103, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S125");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of FastTransferSourceGetBuffer, state S125");
                        this.Manager.Comment("reaching state \'S129\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp105;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp105 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S133\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp105, "return of SetLocalReplicaMidsetDeleted, state S133");
                        this.Manager.Comment("reaching state \'S137\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp106 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S141\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp106, "return of Release, state S141");
                        this.Manager.Comment("reaching state \'S145\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp107 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S149\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp107, "return of Release, state S149");
                        this.Manager.Comment("reaching state \'S153\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp108;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp108 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S157\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp108, "return of Release, state S157");
                        this.Manager.Comment("reaching state \'S161\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp109 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S165\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp109, "return of Release, state S165");
                        this.Manager.Comment("reaching state \'S169\'");
                        goto label1;
                    }
                    if ((temp129 == 1)) {
                        this.Manager.Comment("reaching state \'S74\'");
                        int temp110;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp111;
                        bool temp112;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,8,Normal,out _,out _,out _)\'");
                        temp113 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 8, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp110, out temp111, out temp112);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S78\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=2,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False," +
                                "IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(" +
                                "IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=" +
                                "False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrec" +
                                "ededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessa" +
                                "gesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWar" +
                                "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                                "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                                "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                                "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                                "ertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTop" +
                                "Folder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPer" +
                                "missionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False," +
                                "IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFol" +
                                "derMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False" +
                                ",MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessag" +
                                "e(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,Abs" +
                                "MessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=Fals" +
                                "e,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Stri" +
                                "ngPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFF" +
                                "ormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICS" +
                                "StateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnset" +
                                "SeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abst" +
                                "ractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,A" +
                                "bsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                                "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                                "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                                "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                                "dePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:" +
                                "Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp110, "transferBufferIndex of FastTransferSourceGetBuffer, state S78");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                2,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp111, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S78");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp112, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S78");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of FastTransferSourceGetBuffer, state S78");
                        this.Manager.Comment("reaching state \'S82\'");
                        int temp114;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                        this.Manager.Comment("executing step \'call SynchronizationConfigure(1,3,Contents,Unicode|ForceUnicode,F" +
                                "AI|OnlySpecifiedProperties|IgnoreSpecifiedOnFAI,OrderByDeliveryTime,[\"PidTagAcce" +
                                "ss\",\"PidTagDisplayName\"],out _)\'");
                        temp115 = this.IMS_OXCFXICSAdapterInstance.SynchronizationConfigure(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), ((Microsoft.Protocols.TestSuites.Common.SynchronizationFlag)(16528)), Microsoft.Protocols.TestSuites.Common.SynchronizationExtraFlag.OrderByDeliveryTime, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagDisplayName",
                                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp114);
                        this.Manager.Checkpoint("MS-OXCFXICS_R669");
                        this.Manager.Checkpoint("MS-OXCFXICS_R641");
                        this.Manager.Comment("reaching state \'S86\'");
                        this.Manager.Comment("checking step \'return SynchronizationConfigure/[out 9]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp114, "downloadcontextHandleIndex of SynchronizationConfigure, state S86");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of SynchronizationConfigure, state S86");
                        this.Manager.Comment("reaching state \'S90\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagIdsetGiven,True,0)\'");
                        temp116 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(0)), true, 0);
                        this.Manager.Checkpoint("MS-OXCFXICS_R2657");
                        this.Manager.Comment("reaching state \'S94\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of SynchronizationUploadState, state S94");
                        this.Manager.Comment("reaching state \'S98\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeen,False,0)\'");
                        temp117 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties)(1)), false, 0);
                        this.Manager.Comment("reaching state \'S102\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of SynchronizationUploadState, state S102");
                        this.Manager.Comment("reaching state \'S106\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp118;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetSeenFAI,False,0)\'");
                        temp118 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetSeenFAI, false, 0);
                        this.Manager.Comment("reaching state \'S110\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp118, "return of SynchronizationUploadState, state S110");
                        this.Manager.Comment("reaching state \'S114\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp119;
                        this.Manager.Comment("executing step \'call SynchronizationUploadState(1,9,PidTagCnsetRead,False,0)\'");
                        temp119 = this.IMS_OXCFXICSAdapterInstance.SynchronizationUploadState(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.ICSStateProperties.PidTagCnsetRead, false, 0);
                        this.Manager.Comment("reaching state \'S118\'");
                        this.Manager.Comment("checking step \'return SynchronizationUploadState/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp119, "return of SynchronizationUploadState, state S118");
                        this.Manager.Comment("reaching state \'S122\'");
                        int temp120;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp121;
                        bool temp122;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,9,Normal,out _,out _,out _)\'");
                        temp123 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 9, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp120, out temp121, out temp122);
                        this.Manager.Checkpoint("MS-OXCFXICS_R384");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3321");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2188");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1180");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1135");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1137");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2197");
                        this.Manager.Checkpoint("MS-OXCFXICS_R1172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2172");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2044");
                        this.Manager.Checkpoint("MS-OXCFXICS_R2247");
                        this.Manager.Checkpoint("MS-OXCFXICS_R190701");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S126\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 3,out AbstractFastTransfer" +
                                "Stream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Folde" +
                                "rchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolde" +
                                "rIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero" +
                                "=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChi" +
                                "ld=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=" +
                                "null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),A" +
                                "bstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo" +
                                "={AbstractMessageChangeInfo(IsProgressPerMessagePresent=False,FollowedFAIMessage" +
                                "=False,IsMessageChangeFull=True,IsPidTagMidExist=False,IsPidTagMessageSizeExist=" +
                                "False,IsPidTagChangeNumberExist=False,MessageIdIndex=3,IsRTFformat=False)},Abstr" +
                                "actDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted={},IsPidTagIds" +
                                "etNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadStateChanges" +
                                "Exist=False,FinalICSState=AbstractState(AbstractICSStateIndex=3,IdSetGiven={3},I" +
                                "sNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeNumber=Fa" +
                                "lse,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeliveryTime=False," +
                                "IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFolderContent(" +
                                "IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=" +
                                "False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrec" +
                                "ededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessa" +
                                "gesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWar" +
                                "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                                "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                                "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                                "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                                "ertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=AbstractTop" +
                                "Folder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=False,IsNoPer" +
                                "missionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNotOut=False," +
                                "IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFol" +
                                "derMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDelProp=False" +
                                ",MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessag" +
                                "e(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,Abs" +
                                "MessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=Fals" +
                                "e,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Stri" +
                                "ngPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFF" +
                                "ormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(AbstractICS" +
                                "StateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnset" +
                                "SeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),Abst" +
                                "ractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=False,AbsM" +
                                "essageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDelProp=False" +
                                ",RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=False,Strin" +
                                "gPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=False,IsRTFFo" +
                                "rmat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningOut=False,A" +
                                "bsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                                "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                                "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                                "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                                "dePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),out False]:" +
                                "Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp120, "transferBufferIndex of FastTransferSourceGetBuffer, state S126");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>>(new string[] {
                                                                "Rep"}, new object[] {
                                                                Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo, Microsoft.Xrt.Runtime.Singleton>(), this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>(new string[] {
                                                                                "IsProgressPerMessagePresent",
                                                                                "FollowedFAIMessage",
                                                                                "IsMessageChangeFull",
                                                                                "IsPidTagMidExist",
                                                                                "IsPidTagMessageSizeExist",
                                                                                "IsPidTagChangeNumberExist",
                                                                                "MessageIdIndex",
                                                                                "IsRTFformat"}, new object[] {
                                                                                false,
                                                                                false,
                                                                                true,
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                3,
                                                                                false}), this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                "Element"}, new object[] {
                                                                                Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>()}),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                3,
                                                                this.Make<Microsoft.Modeling.Set<int>>(new string[] {
                                                                            "Rep"}, new object[] {
                                                                            Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                                                                            "Element"}, new object[] {
                                                                                            Microsoft.Xrt.Runtime.Singleton.Single}))}),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp121, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S126");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp122, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S126");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of FastTransferSourceGetBuffer, state S126");
                        this.Manager.Comment("reaching state \'S130\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp124;
                        this.Manager.Comment("executing step \'call SetLocalReplicaMidsetDeleted(1,3,[0])\'");
                        temp124 = this.IMS_OXCFXICSAdapterInstance.SetLocalReplicaMidsetDeleted(1, 3, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    0,
                                                    ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}));
                        this.Manager.Checkpoint("MS-OXCFXICS_R2269");
                        this.Manager.Checkpoint("MS-OXCFXICS_R940");
                        this.Manager.Comment("reaching state \'S134\'");
                        this.Manager.Comment("checking step \'return SetLocalReplicaMidsetDeleted/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp124, "return of SetLocalReplicaMidsetDeleted, state S134");
                        this.Manager.Comment("reaching state \'S138\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp125;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp125 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S142\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp125, "return of Release, state S142");
                        this.Manager.Comment("reaching state \'S146\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp126;
                        this.Manager.Comment("executing step \'call Release(1,7)\'");
                        temp126 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                        this.Manager.Comment("reaching state \'S150\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp126, "return of Release, state S150");
                        this.Manager.Comment("reaching state \'S154\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                        this.Manager.Comment("executing step \'call Release(1,8)\'");
                        temp127 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                        this.Manager.Comment("reaching state \'S158\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp127, "return of Release, state S158");
                        this.Manager.Comment("reaching state \'S162\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                        this.Manager.Comment("executing step \'call Release(1,9)\'");
                        temp128 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                        this.Manager.Comment("reaching state \'S166\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of Release, state S166");
                        this.Manager.Comment("reaching state \'S170\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp131 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S26");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S69");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S69");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S26");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S70");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S70");
        }
        
        private void MSOXCFXICS_S06_SyncICSContentsFAIWithIgnoreSpecifiedOnFAI_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}