//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S03_SyncFastTransferAttachment_TestSuite : PtfTestClassBase {
        
        public S03_SyncFastTransferAttachment_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp23 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_SyncFastTransferAttachment_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_SyncFastTransferAttachment_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp23 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S15\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S18");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S18");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S18");
                this.Manager.Comment("reaching state \'S21\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S24");
                this.Manager.Comment("reaching state \'S27\'");
                int temp6;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp7;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp7 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp6);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp6, "messageHandleIndex of CreateMessage, state S30");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp7, "return of CreateMessage, state S30");
                this.Manager.Comment("reaching state \'S33\'");
                int temp8;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp9 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp8);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp8, "messageIdIndex of SaveChangesMessage, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of SaveChangesMessage, state S36");
                this.Manager.Comment("reaching state \'S39\'");
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp10);
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "attachmentHandleIndex of CreateAttachment, state S42");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateAttachment, state S42");
                this.Manager.Comment("reaching state \'S45\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagDisplayName\"])\'");
                temp12 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagDisplayName",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of SetProperties, state S48");
                this.Manager.Comment("reaching state \'S51\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of SaveChangesAttachment, state S54");
                this.Manager.Comment("reaching state \'S57\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,4,AttachmentHandle,False,None,Uni" +
                        "code|ForceUnicode,[\"PidTagAccess\",\"PidTagDisplayName\"],out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType.AttachmentHandle, false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAccess",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagDisplayName",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R361");
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp14, "copyToHandleIndex of FastTransferSourceCopyTo, state S60");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of FastTransferSourceCopyTo, state S60");
                this.Manager.Comment("reaching state \'S63\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp17;
                bool temp18;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                temp19 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp16, out temp17, out temp18);
                this.Manager.Checkpoint("MS-OXCFXICS_R384");
                this.Manager.Checkpoint("MS-OXCFXICS_R3328");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S66\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=attachmentContent,AbstractHierarchySync=AbstractHierarchySync(" +
                        "FolderchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParent" +
                        "FolderIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValu" +
                        "eZero=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBefo" +
                        "reChild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDel" +
                        "eted=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=Fals" +
                        "e)),AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,Messag" +
                        "eInfo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)," +
                        "IsReadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=" +
                        "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                        "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessage" +
                        "DeliveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abs" +
                        "tractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPi" +
                        "dTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=Fa" +
                        "lse,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMe" +
                        "ssage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessag" +
                        "eList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=Abstrac" +
                        "tMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMes" +
                        "sageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTag" +
                        "FXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePa" +
                        "ge=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTo" +
                        "pFolder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarni" +
                        "ngOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderC" +
                        "ontentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXD" +
                        "elProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPi" +
                        "dTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,A" +
                        "bsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                        "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                        "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                        "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                        "dePage=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=Abstra" +
                        "ctState(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumb" +
                        "er=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChang" +
                        "eNumber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                        "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                        "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                        "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                        "ePage=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagE" +
                        "cWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent" +
                        "(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(At" +
                        "tachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False" +
                        "),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,String" +
                        "PropertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber" +
                        "=False),out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp16, "transferBufferIndex of FastTransferSourceGetBuffer, state S66");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.attachmentContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp17, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S66");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp18, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S66");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of FastTransferSourceGetBuffer, state S66");
                this.Manager.Comment("reaching state \'S69\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp20 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of Release, state S72");
                this.Manager.Comment("reaching state \'S75\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp21 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S78\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of Release, state S78");
                this.Manager.Comment("reaching state \'S81\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp22 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of Release, state S84");
                this.Manager.Comment("reaching state \'S87\'");
                goto label0;
            }
            if ((temp23 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp24;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp24);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp24);
            this.Manager.Comment("reaching state \'S3\'");
            int temp47 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_SyncFastTransferAttachment_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_SyncFastTransferAttachment_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp47 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S16\'");
                int temp25;
                int temp26;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp27 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp25, out temp26);
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp25, "logonHandleIndex of Logon, state S19");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp26, "inboxFolderIdIndex of Logon, state S19");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of Logon, state S19");
                this.Manager.Comment("reaching state \'S22\'");
                int temp28;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp29 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp28);
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp28, "folderHandleIndex of OpenFolder, state S25");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of OpenFolder, state S25");
                this.Manager.Comment("reaching state \'S28\'");
                int temp30;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp31 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp30);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S31\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp30, "messageHandleIndex of CreateMessage, state S31");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of CreateMessage, state S31");
                this.Manager.Comment("reaching state \'S34\'");
                int temp32;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp33 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp32);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp32, "messageIdIndex of SaveChangesMessage, state S37");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of SaveChangesMessage, state S37");
                this.Manager.Comment("reaching state \'S40\'");
                int temp34;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                temp35 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp34);
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp34, "attachmentHandleIndex of CreateAttachment, state S43");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of CreateAttachment, state S43");
                this.Manager.Comment("reaching state \'S46\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagDisplayName\"])\'");
                temp36 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagDisplayName",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of SetProperties, state S49");
                this.Manager.Comment("reaching state \'S52\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                temp37 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                this.Manager.Comment("reaching state \'S55\'");
                this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of SaveChangesAttachment, state S55");
                this.Manager.Comment("reaching state \'S58\'");
                int temp38;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,4,AttachmentHandle,False,None,Uni" +
                        "code,[\"PidTagAccess\",\"PidTagDisplayName\"],out _)\'");
                temp39 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType.AttachmentHandle, false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAccess",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagDisplayName",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp38);
                this.Manager.Checkpoint("MS-OXCFXICS_R361");
                this.Manager.Comment("reaching state \'S61\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp38, "copyToHandleIndex of FastTransferSourceCopyTo, state S61");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of FastTransferSourceCopyTo, state S61");
                this.Manager.Comment("reaching state \'S64\'");
                int temp40;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp41;
                bool temp42;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                temp43 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp40, out temp41, out temp42);
                this.Manager.Checkpoint("MS-OXCFXICS_R384");
                this.Manager.Checkpoint("MS-OXCFXICS_R3328");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S67\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=attachmentContent,AbstractHierarchySync=AbstractHierarchySync(" +
                        "FolderchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParent" +
                        "FolderIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValu" +
                        "eZero=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBefo" +
                        "reChild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDel" +
                        "eted=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=Fals" +
                        "e)),AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,Messag" +
                        "eInfo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)," +
                        "IsReadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=" +
                        "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                        "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessage" +
                        "DeliveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abs" +
                        "tractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPi" +
                        "dTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=Fa" +
                        "lse,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMe" +
                        "ssage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessag" +
                        "eList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=Abstrac" +
                        "tMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMes" +
                        "sageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTag" +
                        "FXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePa" +
                        "ge=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTo" +
                        "pFolder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarni" +
                        "ngOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderC" +
                        "ontentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXD" +
                        "elProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPi" +
                        "dTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,A" +
                        "bsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                        "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                        "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                        "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                        "dePage=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=Abstra" +
                        "ctState(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumb" +
                        "er=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChang" +
                        "eNumber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                        "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                        "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                        "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                        "ePage=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagE" +
                        "cWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent" +
                        "(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(At" +
                        "tachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False" +
                        "),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,String" +
                        "PropertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber" +
                        "=False),out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp40, "transferBufferIndex of FastTransferSourceGetBuffer, state S67");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.attachmentContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp41, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S67");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp42, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S67");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of FastTransferSourceGetBuffer, state S67");
                this.Manager.Comment("reaching state \'S70\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp44 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of Release, state S73");
                this.Manager.Comment("reaching state \'S76\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp45;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp45 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S79\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp45, "return of Release, state S79");
                this.Manager.Comment("reaching state \'S82\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp46 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S85\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of Release, state S85");
                this.Manager.Comment("reaching state \'S88\'");
                goto label1;
            }
            if ((temp47 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp48;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp48);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp48);
            this.Manager.Comment("reaching state \'S5\'");
            int temp71 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_SyncFastTransferAttachment_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_SyncFastTransferAttachment_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp71 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S17\'");
                int temp49;
                int temp50;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp51 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp49, out temp50);
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp49, "logonHandleIndex of Logon, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp50, "inboxFolderIdIndex of Logon, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of Logon, state S20");
                this.Manager.Comment("reaching state \'S23\'");
                int temp52;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp53 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp52);
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp52, "folderHandleIndex of OpenFolder, state S26");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of OpenFolder, state S26");
                this.Manager.Comment("reaching state \'S29\'");
                int temp54;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                this.Manager.Comment("executing step \'call CreateMessage(1,2,1,False,out _)\'");
                temp55 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 2, 1, false, out temp54);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp54, "messageHandleIndex of CreateMessage, state S32");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of CreateMessage, state S32");
                this.Manager.Comment("reaching state \'S35\'");
                int temp56;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,3,out _)\'");
                temp57 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 3, out temp56);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp56, "messageIdIndex of SaveChangesMessage, state S38");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of SaveChangesMessage, state S38");
                this.Manager.Comment("reaching state \'S41\'");
                int temp58;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                this.Manager.Comment("executing step \'call CreateAttachment(1,3,out _)\'");
                temp59 = this.IMS_OXCFXICSAdapterInstance.CreateAttachment(1, 3, out temp58);
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return CreateAttachment/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp58, "attachmentHandleIndex of CreateAttachment, state S44");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of CreateAttachment, state S44");
                this.Manager.Comment("reaching state \'S47\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                this.Manager.Comment("executing step \'call SetProperties(1,3,[\"PidTagDisplayName\"])\'");
                temp60 = this.IMS_OXCFXICSAdapterInstance.SetProperties(1, 3, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagDisplayName",
                                            ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}));
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("checking step \'return SetProperties/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp60, "return of SetProperties, state S50");
                this.Manager.Comment("reaching state \'S53\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                this.Manager.Comment("executing step \'call SaveChangesAttachment(1,4)\'");
                temp61 = this.IMS_OXCFXICSAdapterInstance.SaveChangesAttachment(1, 4);
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return SaveChangesAttachment/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of SaveChangesAttachment, state S56");
                this.Manager.Comment("reaching state \'S59\'");
                int temp62;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,4,AttachmentHandle,False,None,Rec" +
                        "overMode,[\"PidTagAccess\",\"PidTagDisplayName\"],out _)\'");
                temp63 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType.AttachmentHandle, false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagAccess",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagDisplayName",
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})}), out temp62);
                this.Manager.Checkpoint("MS-OXCFXICS_R361");
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp62, "copyToHandleIndex of FastTransferSourceCopyTo, state S62");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of FastTransferSourceCopyTo, state S62");
                this.Manager.Comment("reaching state \'S65\'");
                int temp64;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp65;
                bool temp66;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                temp67 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp64, out temp65, out temp66);
                this.Manager.Checkpoint("MS-OXCFXICS_R384");
                this.Manager.Checkpoint("MS-OXCFXICS_R3328");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=attachmentContent,AbstractHierarchySync=AbstractHierarchySync(" +
                        "FolderchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParent" +
                        "FolderIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValu" +
                        "eZero=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,I" +
                        "dSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropert" +
                        "yChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBefo" +
                        "reChild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDel" +
                        "eted=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=Fals" +
                        "e)),AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,Messag" +
                        "eInfo=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDelete" +
                        "d=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)," +
                        "IsReadStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=" +
                        "0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProp" +
                        "ertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessage" +
                        "DeliveryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abs" +
                        "tractFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPi" +
                        "dTagNewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=Fa" +
                        "lse,IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMe" +
                        "ssage(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessag" +
                        "eList(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=Abstrac" +
                        "tMessageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMes" +
                        "sageChildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTag" +
                        "FXDelProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePa" +
                        "ge=False,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTo" +
                        "pFolder=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarni" +
                        "ngOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderC" +
                        "ontentNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXD" +
                        "elProp=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPi" +
                        "dTagFXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,A" +
                        "bsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMess" +
                        "ageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByP" +
                        "idTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesI" +
                        "nUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCo" +
                        "dePage=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=Abstra" +
                        "ctState(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumb" +
                        "er=False,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChang" +
                        "eNumber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessa" +
                        "geNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPi" +
                        "dTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesIn" +
                        "Unicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCod" +
                        "ePage=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagE" +
                        "cWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent" +
                        "(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(At" +
                        "tachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False" +
                        "),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,String" +
                        "PropertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber" +
                        "=False),out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp64, "transferBufferIndex of FastTransferSourceGetBuffer, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.attachmentContent,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp65, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S68");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp66, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of FastTransferSourceGetBuffer, state S68");
                this.Manager.Comment("reaching state \'S71\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp68 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of Release, state S74");
                this.Manager.Comment("reaching state \'S77\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp69 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of Release, state S80");
                this.Manager.Comment("reaching state \'S83\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp70 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S86\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of Release, state S86");
                this.Manager.Comment("reaching state \'S89\'");
                goto label2;
            }
            if ((temp71 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S03_SyncFastTransferAttachment_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
    }
}