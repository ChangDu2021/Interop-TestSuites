//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S01_SyncFastTransferReplica_TestSuite : PtfTestClassBase {
        
        public S01_SyncFastTransferReplica_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        
        public delegate void CheckSecondSUTOnlineDelegate1(bool isSecondSUTOnline);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckSecondSUTOnlineInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckSecondSUTOnline", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferReplica_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp29 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp29 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                bool temp1;
                this.Manager.Comment("executing step \'call CheckSecondSUTOnline(out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckSecondSUTOnline(out temp1);
                this.Manager.AddReturn(CheckSecondSUTOnlineInfo, null, temp1);
                this.Manager.Comment("reaching state \'S4\'");
                int temp28 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckSecondSUTOnlineChecker)), new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckSecondSUTOnlineInfo, null, new CheckSecondSUTOnlineDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckSecondSUTOnlineChecker1)));
                if ((temp28 == 0)) {
                    S01_SyncFastTransferReplica_TestSuiteS3();
                    goto label2;
                }
                if ((temp28 == 1)) {
                    this.Manager.Comment("reaching state \'S5\'");
                    bool temp2;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(1111,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1111, out temp2);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp2);
                    this.Manager.Comment("reaching state \'S6\'");
                    int temp27 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker1)));
                    if ((temp27 == 0)) {
                        this.Manager.Comment("reaching state \'S7\'");
                        goto label1;
                    }
                    if ((temp27 == 1)) {
                        this.Manager.Comment("reaching state \'S8\'");
                        this.Manager.Comment("executing step \'call Connect(1,PublicFolderServer)\'");
                        this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(0)));
                        this.Manager.Comment("reaching state \'S9\'");
                        this.Manager.Comment("checking step \'return Connect\'");
                        this.Manager.Comment("reaching state \'S10\'");
                        int temp3;
                        int temp4;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                        this.Manager.Comment("executing step \'call Logon(1,Ghosted,out _,out _)\'");
                        temp5 = this.IMS_OXCFXICSAdapterInstance.Logon(1, Microsoft.Protocols.TestSuites.Common.LogonFlags.Ghosted, out temp3, out temp4);
                        this.Manager.Comment("reaching state \'S11\'");
                        this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp3, "logonHandleIndex of Logon, state S11");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp4, "inboxFolderIdIndex of Logon, state S11");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of Logon, state S11");
                        this.Manager.Comment("reaching state \'S12\'");
                        int temp6;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp7;
                        this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                        temp7 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp6);
                        this.Manager.Comment("reaching state \'S13\'");
                        this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderHandleIndex of OpenFolder, state S13");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp7, "return of OpenFolder, state S13");
                        this.Manager.Comment("reaching state \'S14\'");
                        int temp8;
                        int temp9;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp10;
                        this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                        temp10 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp8, out temp9);
                        this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                        this.Manager.Comment("reaching state \'S15\'");
                        this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp8, "folderIdIndex of CreateFolder, state S15");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderHandleIndex of CreateFolder, state S15");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp10, "return of CreateFolder, state S15");
                        this.Manager.Comment("reaching state \'S16\'");
                        int temp11;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Unicode" +
                                "|RecoverMode|ForceUnicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidT" +
                                "agDisplayName\",\"PidTagEcWarning\"],out _)\'");
                        temp12 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(13)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                    "Head",
                                                                                                    "Tail"}, new object[] {
                                                                                                    "PidTagEcWarning",
                                                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})}), out temp11);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S17\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 4]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp11, "copyToHandleIndex of FastTransferSourceCopyTo, state S17");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of FastTransferSourceCopyTo, state S17");
                        this.Manager.Comment("reaching state \'S18\'");
                        bool temp13;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(1113,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(1113, out temp13);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp13);
                        this.Manager.Comment("reaching state \'S19\'");
                        int temp26 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S01_SyncFastTransferReplica_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker3)));
                        if ((temp26 == 0)) {
                            this.Manager.Comment("reaching state \'S20\'");
                            int temp14;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp15;
                            bool temp16;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Normal,out _,out _,out _)\'");
                            temp17 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp14, out temp15, out temp16);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3324");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S22\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                                    "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                    "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                                    "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                                    "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                                    "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                                    "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                                    "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                                    "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                                    "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                                    "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                                    "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                                    "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                                    "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                                    "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                                    "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                                    "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                                    "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                                    "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                                    "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                                    "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                                    "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                                    "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                                    "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                                    "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                                    "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                                    "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                    "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                    "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                                    "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                                    "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                                    "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                                    "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                                    "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                                    "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                                    "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                                    "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                                    "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                                    "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                                    "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                                    "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                                    "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                                    "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                                    "se),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp14, "transferBufferIndex of FastTransferSourceGetBuffer, state S22");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp15, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S22");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp16, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S22");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of FastTransferSourceGetBuffer, state S22");
                            this.Manager.Comment("reaching state \'S24\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                            this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                            temp18 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                            this.Manager.Comment("reaching state \'S26\'");
                            this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of DeleteFolder, state S26");
                            this.Manager.Comment("reaching state \'S28\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp19 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S30\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of Release, state S30");
                            this.Manager.Comment("reaching state \'S32\'");
                            goto label0;
                        }
                        if ((temp26 == 1)) {
                            this.Manager.Comment("reaching state \'S21\'");
                            int temp20;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp21;
                            bool temp22;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                            this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Normal,out _,out _,out _)\'");
                            temp23 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp20, out temp21, out temp22);
                            this.Manager.Checkpoint("MS-OXCFXICS_R384");
                            this.Manager.Checkpoint("MS-OXCFXICS_R3324");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                            this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                            this.Manager.Checkpoint("MS-OXCFXICS_R532");
                            this.Manager.Comment("reaching state \'S23\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                                    "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                    "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                    "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                    "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                                    "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                    "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                                    "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                                    "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                                    "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                                    "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                                    "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                                    "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                                    "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                                    "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                                    "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                                    "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                                    "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                                    "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                                    "(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList" +
                                    "(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMess" +
                                    "ageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageC" +
                                    "hildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDel" +
                                    "Prop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fa" +
                                    "lse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFold" +
                                    "er=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut" +
                                    "=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConten" +
                                    "tNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPro" +
                                    "p=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagF" +
                                    "XDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMes" +
                                    "sage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                                    "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                                    "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                                    "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                                    "e=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSta" +
                                    "te(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fa" +
                                    "lse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumb" +
                                    "er=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                                    "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                                    "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                                    "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                                    "=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarn" +
                                    "ingOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNo" +
                                    "PermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachm" +
                                    "entPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Str" +
                                    "ingPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPrope" +
                                    "rtiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fals" +
                                    "e),out False]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp20, "transferBufferIndex of FastTransferSourceGetBuffer, state S23");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                            "StreamType",
                                            "AbstractHierarchySync",
                                            "AbstractContentsSync",
                                            "AbstractFolderContent",
                                            "AbstractTopFolder",
                                            "AbstractState",
                                            "AbstractMessageContent",
                                            "AbstractMessageList",
                                            "IsSameReadstateChangeNumber"}, new object[] {
                                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                        "FolderchangeInfo",
                                                        "FolderCount",
                                                        "FinalICSState",
                                                        "IsParentFolderBeforeChild",
                                                        "AbstractDeletion"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                    "IsPidTagFolderIdExist",
                                                                    "IsPidTagParentFolderIdExist",
                                                                    "IsPidTagSourceKeyValueZero",
                                                                    "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        0,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                        "IsprogessTotalPresent",
                                                        "MessageInfo",
                                                        "AbstractDeletion",
                                                        "IsReadStateChangesExist",
                                                        "FinalICSState",
                                                        "IsSortByMessageDeliveryTime",
                                                        "IsSortByLastModificationTime"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                    "IsDeletionPresent",
                                                                    "IdSetDeleted",
                                                                    "IsPidTagIdsetNoLongerInScopeExist",
                                                                    "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                    false,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false}),
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                    "AbstractICSStateIndex",
                                                                    "IdSetGiven",
                                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                    0,
                                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                                    false,
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        true,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                        "AbsFolderContent",
                                                        "SubFolderInScope"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "IsNoPermissionObjNotOut",
                                                                    "IsPidTagNewFXFolderOut",
                                                                    "IsFolderContentNotOut",
                                                                    "IsFolderPropertiesNotOut",
                                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                                    "AbsFolderMessage"}, new object[] {
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                                "MessageList"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                            "IsPidTagEcWarningOut",
                                                                                            "AbsMessage"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                        "AbsMessageContent"}, new object[] {
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                                    "AbsMessageChildren",
                                                                                                                    "StringPropertiesInUnicode",
                                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                                    false,
                                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                                false,
                                                                                                                                false}),
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false,
                                                                                                                    false})})})})}),
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                        "IsNoPermissionMessageNotOut",
                                                        "AbsMessageChildren",
                                                        "StringPropertiesInUnicode",
                                                        "StringPropertiesInUnicodeCodePage",
                                                        "StringPropertiesInOtherCodePage",
                                                        "IsRTFFormat"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                    false,
                                                                    false}),
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "AbsMessage"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                    "AbsMessageContent"}, new object[] {
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                "IsNoPermissionMessageNotOut",
                                                                                "AbsMessageChildren",
                                                                                "StringPropertiesInUnicode",
                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                "StringPropertiesInOtherCodePage",
                                                                                "IsRTFFormat"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                            false,
                                                                                            false}),
                                                                                false,
                                                                                false,
                                                                                false,
                                                                                false})})}),
                                            false}), temp21, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S23");
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp22, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S23");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of FastTransferSourceGetBuffer, state S23");
                            this.Manager.Comment("reaching state \'S25\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                            this.Manager.Comment("executing step \'call DeleteFolder(1,2,2)\'");
                            temp24 = this.IMS_OXCFXICSAdapterInstance.DeleteFolder(1, 2, 2);
                            this.Manager.Comment("reaching state \'S27\'");
                            this.Manager.Comment("checking step \'return DeleteFolder/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of DeleteFolder, state S27");
                            this.Manager.Comment("reaching state \'S29\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp25 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S31\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of Release, state S31");
                            this.Manager.Comment("reaching state \'S33\'");
                            goto label0;
                        }
                        throw new InvalidOperationException("never reached");
                    label0:
;
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp29 == 1)) {
                S01_SyncFastTransferReplica_TestSuiteS3();
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckSecondSUTOnlineChecker(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S4");
        }
        
        private void S01_SyncFastTransferReplica_TestSuiteS3() {
            this.Manager.Comment("reaching state \'S3\'");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckSecondSUTOnlineChecker1(bool isSecondSUTOnline) {
            this.Manager.Comment("checking step \'return CheckSecondSUTOnline/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSecondSUTOnline, "isSecondSUTOnline of CheckSecondSUTOnline, state S4");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S6");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S6");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S19");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S19");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferReplica_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}