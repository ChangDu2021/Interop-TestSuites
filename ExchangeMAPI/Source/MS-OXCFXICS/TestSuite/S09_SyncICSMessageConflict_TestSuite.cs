//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S09_SyncICSMessageConflict_TestSuite : PtfTestClassBase {
        
        public S09_SyncICSMessageConflict_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp40 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S09_SyncICSMessageConflict_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S09_SyncICSMessageConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S09_SyncICSMessageConflict_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S09_SyncICSMessageConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp40 == 0)) {
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S10\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S12");
                this.Manager.Comment("reaching state \'S14\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S16");
                this.Manager.Comment("reaching state \'S18\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S20");
                this.Manager.Comment("reaching state \'S22\'");
                int temp9;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp10;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp10 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp9);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp9, "messageHandleIndex of CreateMessage, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp10, "return of CreateMessage, state S24");
                this.Manager.Comment("reaching state \'S26\'");
                int temp11;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp12;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,4,out _)\'");
                temp12 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 4, out temp11);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp11, "messageIdIndex of SaveChangesMessage, state S28");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp12, "return of SaveChangesMessage, state S28");
                this.Manager.Comment("reaching state \'S30\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of GetLocalReplicaIds, state S32");
                this.Manager.Comment("reaching state \'S34\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp14, "synchronizationHandleIndex of SynchronizationOpenCollector, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SynchronizationOpenCollector, state S36");
                this.Manager.Comment("reaching state \'S38\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp16;
                this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,4,[\"PidTagPredecessorChangeList\",\"Pi" +
                        "dTagChangeKey\",\"PidTagResolveMethod\"])\'");
                temp16 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 4, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagPredecessorChangeList",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeKey",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagResolveMethod",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}));
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp16, "return of GetPropertiesSpecific, state S40");
                this.Manager.Comment("reaching state \'S42\'");
                int temp17;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,5,-1,FailOnConflict,out" +
                        " _)\'");
                temp18 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 5, -1, Microsoft.Protocols.TestSuites.Common.ImportFlag.FailOnConflict, out temp17);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp17, "importMessageHandleIndex of SynchronizationImportMessageChange, state S44");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp18, "return of SynchronizationImportMessageChange, state S44");
                this.Manager.Comment("reaching state \'S46\'");
                int temp19;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp20 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp19);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp19, "messageIdIndex of SaveChangesMessage, state S48");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of SaveChangesMessage, state S48");
                this.Manager.Comment("reaching state \'S50\'");
                int temp21;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp22 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp21);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S52\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp21, "synchronizationHandleIndex of SynchronizationOpenCollector, state S52");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of SynchronizationOpenCollector, state S52");
                this.Manager.Comment("reaching state \'S54\'");
                int temp23;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,7,-2,FailOnConflict,out" +
                        " _)\'");
                temp24 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 7, -2, Microsoft.Protocols.TestSuites.Common.ImportFlag.FailOnConflict, out temp23);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 8]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp23, "importMessageHandleIndex of SynchronizationImportMessageChange, state S56");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of SynchronizationImportMessageChange, state S56");
                this.Manager.Comment("reaching state \'S58\'");
                int temp25;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,8,out _)\'");
                temp26 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 8, out temp25);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp25, "messageIdIndex of SaveChangesMessage, state S60");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of SaveChangesMessage, state S60");
                this.Manager.Comment("reaching state \'S62\'");
                int temp27;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp28 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp27);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 9]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp27, "synchronizationHandleIndex of SynchronizationOpenCollector, state S64");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of SynchronizationOpenCollector, state S64");
                this.Manager.Comment("reaching state \'S66\'");
                int temp29;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,9,-2,FailOnConflict,out" +
                        " _)\'");
                temp30 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 9, -2, Microsoft.Protocols.TestSuites.Common.ImportFlag.FailOnConflict, out temp29);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 10]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp29, "importMessageHandleIndex of SynchronizationImportMessageChange, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of SynchronizationImportMessageChange, state S68");
                this.Manager.Comment("reaching state \'S70\'");
                int temp31;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,10,out _)\'");
                temp32 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 10, out temp31);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp31, "messageIdIndex of SaveChangesMessage, state S72");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of SaveChangesMessage, state S72");
                this.Manager.Comment("reaching state \'S74\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp33 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of Release, state S76");
                this.Manager.Comment("reaching state \'S78\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                this.Manager.Comment("executing step \'call Release(1,7)\'");
                temp34 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of Release, state S80");
                this.Manager.Comment("reaching state \'S82\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                this.Manager.Comment("executing step \'call Release(1,9)\'");
                temp35 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of Release, state S84");
                this.Manager.Comment("reaching state \'S86\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp36 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S88\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of Release, state S88");
                this.Manager.Comment("reaching state \'S90\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                this.Manager.Comment("executing step \'call Release(1,6)\'");
                temp37 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                this.Manager.Comment("reaching state \'S92\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of Release, state S92");
                this.Manager.Comment("reaching state \'S94\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                this.Manager.Comment("executing step \'call Release(1,8)\'");
                temp38 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                this.Manager.Comment("reaching state \'S96\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of Release, state S96");
                this.Manager.Comment("reaching state \'S98\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                this.Manager.Comment("executing step \'call Release(1,10)\'");
                temp39 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                this.Manager.Comment("reaching state \'S100\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of Release, state S100");
                this.Manager.Comment("reaching state \'S102\'");
                goto label0;
            }
            if ((temp40 == 1)) {
                this.Manager.Comment("reaching state \'S5\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S09_SyncICSMessageConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S09_SyncICSMessageConflict_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp41;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp41);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp41);
            this.Manager.Comment("reaching state \'S3\'");
            int temp81 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S09_SyncICSMessageConflict_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S09_SyncICSMessageConflict_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp81 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S9\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S11\'");
                int temp42;
                int temp43;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp44 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp42, out temp43);
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp42, "logonHandleIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp43, "inboxFolderIdIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of Logon, state S13");
                this.Manager.Comment("reaching state \'S15\'");
                int temp45;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp46;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp46 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp45);
                this.Manager.Comment("reaching state \'S17\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp45, "folderHandleIndex of OpenFolder, state S17");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp46, "return of OpenFolder, state S17");
                this.Manager.Comment("reaching state \'S19\'");
                int temp47;
                int temp48;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"test\",out _,out _)\'");
                temp49 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "test", out temp47, out temp48);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S21\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp47, "folderIdIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp48, "folderHandleIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of CreateFolder, state S21");
                this.Manager.Comment("reaching state \'S23\'");
                int temp50;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp51 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp50);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp50, "messageHandleIndex of CreateMessage, state S25");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of CreateMessage, state S25");
                this.Manager.Comment("reaching state \'S27\'");
                int temp52;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp53;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,4,out _)\'");
                temp53 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 4, out temp52);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S29\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp52, "messageIdIndex of SaveChangesMessage, state S29");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp53, "return of SaveChangesMessage, state S29");
                this.Manager.Comment("reaching state \'S31\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                this.Manager.Comment("executing step \'call GetLocalReplicaIds(1,1,3)\'");
                temp54 = this.IMS_OXCFXICSAdapterInstance.GetLocalReplicaIds(1, 1, 3u);
                this.Manager.Checkpoint("MS-OXCFXICS_R925");
                this.Manager.Comment("reaching state \'S33\'");
                this.Manager.Comment("checking step \'return GetLocalReplicaIds/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of GetLocalReplicaIds, state S33");
                this.Manager.Comment("reaching state \'S35\'");
                int temp55;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp56;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp56 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp55);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp55, "synchronizationHandleIndex of SynchronizationOpenCollector, state S37");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp56, "return of SynchronizationOpenCollector, state S37");
                this.Manager.Comment("reaching state \'S39\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                this.Manager.Comment("executing step \'call GetPropertiesSpecific(1,4,[\"PidTagPredecessorChangeList\",\"Pi" +
                        "dTagChangeKey\",\"PidTagResolveMethod\"])\'");
                temp57 = this.IMS_OXCFXICSAdapterInstance.GetPropertiesSpecific(1, 4, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                "Rep"}, new object[] {
                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                            "Head",
                                            "Tail"}, new object[] {
                                            "PidTagPredecessorChangeList",
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        "PidTagChangeKey",
                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                    "Head",
                                                                    "Tail"}, new object[] {
                                                                    "PidTagResolveMethod",
                                                                    ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})}));
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return GetPropertiesSpecific/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of GetPropertiesSpecific, state S41");
                this.Manager.Comment("reaching state \'S43\'");
                int temp58;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp59;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,5,-1,Normal,out _)\'");
                temp59 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 5, -1, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp58);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S45\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp58, "importMessageHandleIndex of SynchronizationImportMessageChange, state S45");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp59, "return of SynchronizationImportMessageChange, state S45");
                this.Manager.Comment("reaching state \'S47\'");
                int temp60;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,6,out _)\'");
                temp61 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 6, out temp60);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp60, "messageIdIndex of SaveChangesMessage, state S49");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of SaveChangesMessage, state S49");
                this.Manager.Comment("reaching state \'S51\'");
                int temp62;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp63 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp62);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S53\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 7]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 7, temp62, "synchronizationHandleIndex of SynchronizationOpenCollector, state S53");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of SynchronizationOpenCollector, state S53");
                this.Manager.Comment("reaching state \'S55\'");
                int temp64;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,7,-2,Normal,out _)\'");
                temp65 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 7, -2, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp64);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S57\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 8]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 8, temp64, "importMessageHandleIndex of SynchronizationImportMessageChange, state S57");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of SynchronizationImportMessageChange, state S57");
                this.Manager.Comment("reaching state \'S59\'");
                int temp66;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,8,out _)\'");
                temp67 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 8, out temp66);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S61\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp66, "messageIdIndex of SaveChangesMessage, state S61");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of SaveChangesMessage, state S61");
                this.Manager.Comment("reaching state \'S63\'");
                int temp68;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                this.Manager.Comment("executing step \'call SynchronizationOpenCollector(1,3,Contents,out _)\'");
                temp69 = this.IMS_OXCFXICSAdapterInstance.SynchronizationOpenCollector(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SynchronizationTypes)(1)), out temp68);
                this.Manager.Checkpoint("MS-OXCFXICS_R778");
                this.Manager.Checkpoint("MS-OXCFXICS_R769");
                this.Manager.Comment("reaching state \'S65\'");
                this.Manager.Comment("checking step \'return SynchronizationOpenCollector/[out 9]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 9, temp68, "synchronizationHandleIndex of SynchronizationOpenCollector, state S65");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of SynchronizationOpenCollector, state S65");
                this.Manager.Comment("reaching state \'S67\'");
                int temp70;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                this.Manager.Comment("executing step \'call SynchronizationImportMessageChange(1,9,-2,Normal,out _)\'");
                temp71 = this.IMS_OXCFXICSAdapterInstance.SynchronizationImportMessageChange(1, 9, -2, ((Microsoft.Protocols.TestSuites.Common.ImportFlag)(0)), out temp70);
                this.Manager.Checkpoint("MS-OXCFXICS_R814");
                this.Manager.Checkpoint("MS-OXCFXICS_R805");
                this.Manager.Checkpoint("MS-OXCFXICS_R1897");
                this.Manager.Checkpoint("MS-OXCFXICS_R2449");
                this.Manager.Checkpoint("MS-OXCFXICS_R782");
                this.Manager.Comment("reaching state \'S69\'");
                this.Manager.Comment("checking step \'return SynchronizationImportMessageChange/[out 10]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 10, temp70, "importMessageHandleIndex of SynchronizationImportMessageChange, state S69");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp71, "return of SynchronizationImportMessageChange, state S69");
                this.Manager.Comment("reaching state \'S71\'");
                int temp72;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,10,out _)\'");
                temp73 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 10, out temp72);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp72, "messageIdIndex of SaveChangesMessage, state S73");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of SaveChangesMessage, state S73");
                this.Manager.Comment("reaching state \'S75\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S77\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S77");
                this.Manager.Comment("reaching state \'S79\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                this.Manager.Comment("executing step \'call Release(1,7)\'");
                temp75 = this.IMS_OXCFXICSAdapterInstance.Release(1, 7);
                this.Manager.Comment("reaching state \'S81\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of Release, state S81");
                this.Manager.Comment("reaching state \'S83\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                this.Manager.Comment("executing step \'call Release(1,9)\'");
                temp76 = this.IMS_OXCFXICSAdapterInstance.Release(1, 9);
                this.Manager.Comment("reaching state \'S85\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of Release, state S85");
                this.Manager.Comment("reaching state \'S87\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp77;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp77 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S89\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp77, "return of Release, state S89");
                this.Manager.Comment("reaching state \'S91\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp78;
                this.Manager.Comment("executing step \'call Release(1,6)\'");
                temp78 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                this.Manager.Comment("reaching state \'S93\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp78, "return of Release, state S93");
                this.Manager.Comment("reaching state \'S95\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp79;
                this.Manager.Comment("executing step \'call Release(1,8)\'");
                temp79 = this.IMS_OXCFXICSAdapterInstance.Release(1, 8);
                this.Manager.Comment("reaching state \'S97\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp79, "return of Release, state S97");
                this.Manager.Comment("reaching state \'S99\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                this.Manager.Comment("executing step \'call Release(1,10)\'");
                temp80 = this.IMS_OXCFXICSAdapterInstance.Release(1, 10);
                this.Manager.Comment("reaching state \'S101\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp80, "return of Release, state S101");
                this.Manager.Comment("reaching state \'S103\'");
                goto label1;
            }
            if ((temp81 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S09_SyncICSMessageConflict_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
    }
}