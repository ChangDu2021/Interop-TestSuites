//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S01_SyncFastTransferInvalidParameter_TestSuite : PtfTestClassBase {
        
        public S01_SyncFastTransferInvalidParameter_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp46 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp46 == 0)) {
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S50\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S60");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S60");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S60");
                this.Manager.Comment("reaching state \'S70\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S80");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S80");
                this.Manager.Comment("reaching state \'S90\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S100\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S100");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S100");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S100");
                this.Manager.Comment("reaching state \'S110\'");
                int temp9;
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp9, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S120\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderIdIndex of CreateFolder, state S120");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of CreateFolder, state S120");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateFolder, state S120");
                this.Manager.Comment("reaching state \'S130\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S140\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "messageHandleIndex of CreateMessage, state S140");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of CreateMessage, state S140");
                this.Manager.Comment("reaching state \'S150\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S160\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp14, "messageIdIndex of SaveChangesMessage, state S160");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S160");
                this.Manager.Comment("reaching state \'S170\'");
                bool temp16;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3483,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3483, out temp16);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp16);
                this.Manager.Comment("reaching state \'S180\'");
                int temp45 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp45 == 0)) {
                    this.Manager.Comment("reaching state \'S190\'");
                    bool temp17;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3487,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3487, out temp17);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp17);
                    this.Manager.Comment("reaching state \'S210\'");
                    int temp30 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp30 == 0)) {
                        this.Manager.Comment("reaching state \'S230\'");
                        int temp18;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp19;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,RecoverMode," +
                                "out _)\'");
                        temp19 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp18);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S270\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp18, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S270");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp19, "return of FastTransferSourceCopyFolder, state S270");
                        this.Manager.Comment("reaching state \'S310\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp20;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp20 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S354\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp20, "return of Release, state S354");
                        this.Manager.Comment("reaching state \'S398\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp21 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S442\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of Release, state S442");
                        this.Manager.Comment("reaching state \'S486\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp22 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S530\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of Release, state S530");
                        this.Manager.Comment("reaching state \'S574\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp23 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S618\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of Release, state S618");
                        this.Manager.Comment("reaching state \'S662\'");
                        goto label0;
                    }
                    if ((temp30 == 1)) {
                        this.Manager.Comment("reaching state \'S231\'");
                        int temp24;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,RecoverMode," +
                                "out _)\'");
                        temp25 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp24);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S271\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp24, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S271");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of FastTransferSourceCopyFolder, state S271");
                        this.Manager.Comment("reaching state \'S311\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp26 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S355\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of Release, state S355");
                        this.Manager.Comment("reaching state \'S399\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp27 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S443\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of Release, state S443");
                        this.Manager.Comment("reaching state \'S487\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp28 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S531\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of Release, state S531");
                        this.Manager.Comment("reaching state \'S575\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp29;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp29 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S619\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp29, "return of Release, state S619");
                        this.Manager.Comment("reaching state \'S663\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp45 == 1)) {
                    this.Manager.Comment("reaching state \'S191\'");
                    bool temp31;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3487,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3487, out temp31);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp31);
                    this.Manager.Comment("reaching state \'S211\'");
                    int temp44 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp44 == 0)) {
                        this.Manager.Comment("reaching state \'S232\'");
                        int temp32;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,RecoverMode," +
                                "out _)\'");
                        temp33 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp32);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S272\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp32, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S272");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of FastTransferSourceCopyFolder, state S272");
                        this.Manager.Comment("reaching state \'S312\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp34 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S356\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of Release, state S356");
                        this.Manager.Comment("reaching state \'S400\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp35 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S444\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of Release, state S444");
                        this.Manager.Comment("reaching state \'S488\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp36 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S532\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of Release, state S532");
                        this.Manager.Comment("reaching state \'S576\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp37;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp37 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S620\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp37, "return of Release, state S620");
                        this.Manager.Comment("reaching state \'S664\'");
                        goto label1;
                    }
                    if ((temp44 == 1)) {
                        this.Manager.Comment("reaching state \'S233\'");
                        int temp38;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp39;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,RecoverMode," +
                                "out _)\'");
                        temp39 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp38);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S273\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp38, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S273");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp39, "return of FastTransferSourceCopyFolder, state S273");
                        this.Manager.Comment("reaching state \'S313\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp40 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S357\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of Release, state S357");
                        this.Manager.Comment("reaching state \'S401\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp41;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp41 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S445\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp41, "return of Release, state S445");
                        this.Manager.Comment("reaching state \'S489\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp42 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S533\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of Release, state S533");
                        this.Manager.Comment("reaching state \'S577\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp43;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp43 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S621\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp43, "return of Release, state S621");
                        this.Manager.Comment("reaching state \'S665\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp46 == 1)) {
                this.Manager.Comment("reaching state \'S21\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S180");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S210");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S210");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S180");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S211");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S211");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1");
            this.Manager.Comment("reaching state \'S10\'");
            bool temp47;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp47);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp47);
            this.Manager.Comment("reaching state \'S11\'");
            int temp93 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp93 == 0)) {
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S45\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S55\'");
                int temp48;
                int temp49;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp50 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp48, out temp49);
                this.Manager.Comment("reaching state \'S65\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp48, "logonHandleIndex of Logon, state S65");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp49, "inboxFolderIdIndex of Logon, state S65");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of Logon, state S65");
                this.Manager.Comment("reaching state \'S75\'");
                int temp51;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp52 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp51);
                this.Manager.Comment("reaching state \'S85\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp51, "folderHandleIndex of OpenFolder, state S85");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of OpenFolder, state S85");
                this.Manager.Comment("reaching state \'S95\'");
                int temp53;
                int temp54;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp55;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp55 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp53, out temp54);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S105\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp53, "folderIdIndex of CreateFolder, state S105");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp54, "folderHandleIndex of CreateFolder, state S105");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp55, "return of CreateFolder, state S105");
                this.Manager.Comment("reaching state \'S115\'");
                int temp56;
                int temp57;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp58;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp58 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp56, out temp57);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S125\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp56, "folderIdIndex of CreateFolder, state S125");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp57, "folderHandleIndex of CreateFolder, state S125");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp58, "return of CreateFolder, state S125");
                this.Manager.Comment("reaching state \'S135\'");
                int temp59;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp60;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp60 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp59);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S145\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp59, "messageHandleIndex of CreateMessage, state S145");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp60, "return of CreateMessage, state S145");
                this.Manager.Comment("reaching state \'S155\'");
                int temp61;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp62 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp61);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S165\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp61, "messageIdIndex of SaveChangesMessage, state S165");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of SaveChangesMessage, state S165");
                this.Manager.Comment("reaching state \'S175\'");
                bool temp63;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp63);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp63);
                this.Manager.Comment("reaching state \'S185\'");
                int temp92 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker3)));
                if ((temp92 == 0)) {
                    this.Manager.Comment("reaching state \'S200\'");
                    bool temp64;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3470,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3470, out temp64);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp64);
                    this.Manager.Comment("reaching state \'S220\'");
                    int temp77 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker2)));
                    if ((temp77 == 0)) {
                        this.Manager.Comment("reaching state \'S250\'");
                        int temp65;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp66;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,Inva" +
                                "lid,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayN" +
                                "ame\"],out _)\'");
                        temp66 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp65);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S290\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp65, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S290");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp66, "return of FastTransferSourceCopyProperties, state S290");
                        this.Manager.Comment("reaching state \'S334\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp67 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S378\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp67, "return of Release, state S378");
                        this.Manager.Comment("reaching state \'S422\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp68;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp68 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S466\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp68, "return of Release, state S466");
                        this.Manager.Comment("reaching state \'S510\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp69;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp69 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S554\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp69, "return of Release, state S554");
                        this.Manager.Comment("reaching state \'S598\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp70;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp70 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S642\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp70, "return of Release, state S642");
                        this.Manager.Comment("reaching state \'S686\'");
                        goto label4;
                    }
                    if ((temp77 == 1)) {
                        this.Manager.Comment("reaching state \'S251\'");
                        int temp71;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,Inva" +
                                "lid,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayN" +
                                "ame\"],out _)\'");
                        temp72 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp71);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S291\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp71, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S291");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of FastTransferSourceCopyProperties, state S291");
                        this.Manager.Comment("reaching state \'S335\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp73 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S379\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of Release, state S379");
                        this.Manager.Comment("reaching state \'S423\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S467\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S467");
                        this.Manager.Comment("reaching state \'S511\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp75 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S555\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of Release, state S555");
                        this.Manager.Comment("reaching state \'S599\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp76;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp76 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S643\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp76, "return of Release, state S643");
                        this.Manager.Comment("reaching state \'S687\'");
                        goto label4;
                    }
                    throw new InvalidOperationException("never reached");
                label4:
;
                    goto label6;
                }
                if ((temp92 == 1)) {
                    this.Manager.Comment("reaching state \'S201\'");
                    bool temp78;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3470,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3470, out temp78);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp78);
                    this.Manager.Comment("reaching state \'S221\'");
                    int temp91 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker5)));
                    if ((temp91 == 0)) {
                        this.Manager.Comment("reaching state \'S252\'");
                        int temp79;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp80;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,Inva" +
                                "lid,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayN" +
                                "ame\"],out _)\'");
                        temp80 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp79);
                        this.Manager.Comment("reaching state \'S292\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:InvalidParameter\'" +
                                "");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp79, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S292");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp80, "return of FastTransferSourceCopyProperties, state S292");
                        this.Manager.Comment("reaching state \'S336\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp81 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S380\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of Release, state S380");
                        this.Manager.Comment("reaching state \'S424\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp82;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp82 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S468\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp82, "return of Release, state S468");
                        this.Manager.Comment("reaching state \'S512\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp83 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S556\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of Release, state S556");
                        this.Manager.Comment("reaching state \'S600\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp84;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp84 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S644\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp84, "return of Release, state S644");
                        this.Manager.Comment("reaching state \'S688\'");
                        goto label5;
                    }
                    if ((temp91 == 1)) {
                        this.Manager.Comment("reaching state \'S253\'");
                        int temp85;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,Inva" +
                                "lid,RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayN" +
                                "ame\"],out _)\'");
                        temp86 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp85);
                        this.Manager.Comment("reaching state \'S293\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:InvalidParameter\'" +
                                "");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp85, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S293");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp86, "return of FastTransferSourceCopyProperties, state S293");
                        this.Manager.Comment("reaching state \'S337\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp87;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp87 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S381\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp87, "return of Release, state S381");
                        this.Manager.Comment("reaching state \'S425\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp88;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp88 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S469\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp88, "return of Release, state S469");
                        this.Manager.Comment("reaching state \'S513\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp89 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S557\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of Release, state S557");
                        this.Manager.Comment("reaching state \'S601\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp90;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp90 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S645\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp90, "return of Release, state S645");
                        this.Manager.Comment("reaching state \'S689\'");
                        goto label5;
                    }
                    throw new InvalidOperationException("never reached");
                label5:
;
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp93 == 1)) {
                this.Manager.Comment("reaching state \'S31\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S185");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S220");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S220");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S185");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S221");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S221");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2");
            this.Manager.Comment("reaching state \'S12\'");
            bool temp94;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp94);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp94);
            this.Manager.Comment("reaching state \'S13\'");
            int temp140 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp140 == 0)) {
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S46\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S56\'");
                int temp95;
                int temp96;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp97;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp97 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp95, out temp96);
                this.Manager.Comment("reaching state \'S66\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp95, "logonHandleIndex of Logon, state S66");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp96, "inboxFolderIdIndex of Logon, state S66");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp97, "return of Logon, state S66");
                this.Manager.Comment("reaching state \'S76\'");
                int temp98;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp99;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp99 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp98);
                this.Manager.Comment("reaching state \'S86\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp98, "folderHandleIndex of OpenFolder, state S86");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp99, "return of OpenFolder, state S86");
                this.Manager.Comment("reaching state \'S96\'");
                int temp100;
                int temp101;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp102;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp102 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp100, out temp101);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S106\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp100, "folderIdIndex of CreateFolder, state S106");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp101, "folderHandleIndex of CreateFolder, state S106");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp102, "return of CreateFolder, state S106");
                this.Manager.Comment("reaching state \'S116\'");
                int temp103;
                int temp104;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp105;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp105 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp103, out temp104);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S126\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp103, "folderIdIndex of CreateFolder, state S126");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp104, "folderHandleIndex of CreateFolder, state S126");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp105, "return of CreateFolder, state S126");
                this.Manager.Comment("reaching state \'S136\'");
                int temp106;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp107;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp107 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp106);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S146\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp106, "messageHandleIndex of CreateMessage, state S146");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp107, "return of CreateMessage, state S146");
                this.Manager.Comment("reaching state \'S156\'");
                int temp108;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp109;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp109 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp108);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S166\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp108, "messageIdIndex of SaveChangesMessage, state S166");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp109, "return of SaveChangesMessage, state S166");
                this.Manager.Comment("reaching state \'S176\'");
                bool temp110;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp110);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp110);
                this.Manager.Comment("reaching state \'S186\'");
                int temp139 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker3)));
                if ((temp139 == 0)) {
                    this.Manager.Comment("reaching state \'S202\'");
                    bool temp111;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3470,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3470, out temp111);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp111);
                    this.Manager.Comment("reaching state \'S222\'");
                    int temp124 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker2)));
                    if ((temp124 == 0)) {
                        this.Manager.Comment("reaching state \'S254\'");
                        int temp112;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",Invalid,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],o" +
                                "ut _)\'");
                        temp113 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp112);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S294\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp112, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S294");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of FastTransferSourceCopyProperties, state S294");
                        this.Manager.Comment("reaching state \'S338\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp114 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S382\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp114, "return of Release, state S382");
                        this.Manager.Comment("reaching state \'S426\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp115;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp115 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S470\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp115, "return of Release, state S470");
                        this.Manager.Comment("reaching state \'S514\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp116;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp116 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S558\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp116, "return of Release, state S558");
                        this.Manager.Comment("reaching state \'S602\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp117;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp117 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S646\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp117, "return of Release, state S646");
                        this.Manager.Comment("reaching state \'S690\'");
                        goto label8;
                    }
                    if ((temp124 == 1)) {
                        this.Manager.Comment("reaching state \'S255\'");
                        int temp118;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp119;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",Invalid,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],o" +
                                "ut _)\'");
                        temp119 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp118);
                        this.Manager.Comment("reaching state \'S295\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:InvalidParameter\'" +
                                "");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp118, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S295");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp119, "return of FastTransferSourceCopyProperties, state S295");
                        this.Manager.Comment("reaching state \'S339\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp120 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S383\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of Release, state S383");
                        this.Manager.Comment("reaching state \'S427\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp121;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp121 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S471\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp121, "return of Release, state S471");
                        this.Manager.Comment("reaching state \'S515\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp122 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S559\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of Release, state S559");
                        this.Manager.Comment("reaching state \'S603\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp123;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp123 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S647\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp123, "return of Release, state S647");
                        this.Manager.Comment("reaching state \'S691\'");
                        goto label8;
                    }
                    throw new InvalidOperationException("never reached");
                label8:
;
                    goto label10;
                }
                if ((temp139 == 1)) {
                    this.Manager.Comment("reaching state \'S203\'");
                    bool temp125;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3470,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3470, out temp125);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp125);
                    this.Manager.Comment("reaching state \'S223\'");
                    int temp138 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker5)));
                    if ((temp138 == 0)) {
                        this.Manager.Comment("reaching state \'S256\'");
                        int temp126;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp127;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",Invalid,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],o" +
                                "ut _)\'");
                        temp127 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp126);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S296\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp126, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S296");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp127, "return of FastTransferSourceCopyProperties, state S296");
                        this.Manager.Comment("reaching state \'S340\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp128 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S384\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of Release, state S384");
                        this.Manager.Comment("reaching state \'S428\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp129;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp129 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S472\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp129, "return of Release, state S472");
                        this.Manager.Comment("reaching state \'S516\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp130 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S560\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of Release, state S560");
                        this.Manager.Comment("reaching state \'S604\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp131;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp131 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S648\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp131, "return of Release, state S648");
                        this.Manager.Comment("reaching state \'S692\'");
                        goto label9;
                    }
                    if ((temp138 == 1)) {
                        this.Manager.Comment("reaching state \'S257\'");
                        int temp132;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp133;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",Invalid,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],o" +
                                "ut _)\'");
                        temp133 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp132);
                        this.Manager.Comment("reaching state \'S297\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:InvalidParameter\'" +
                                "");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp132, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S297");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp133, "return of FastTransferSourceCopyProperties, state S297");
                        this.Manager.Comment("reaching state \'S341\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp134;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp134 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S385\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp134, "return of Release, state S385");
                        this.Manager.Comment("reaching state \'S429\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp135;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp135 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S473\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp135, "return of Release, state S473");
                        this.Manager.Comment("reaching state \'S517\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp136;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp136 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S561\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp136, "return of Release, state S561");
                        this.Manager.Comment("reaching state \'S605\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp137;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp137 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S649\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp137, "return of Release, state S649");
                        this.Manager.Comment("reaching state \'S693\'");
                        goto label9;
                    }
                    throw new InvalidOperationException("never reached");
                label9:
;
                    goto label10;
                }
                throw new InvalidOperationException("never reached");
            label10:
;
                goto label11;
            }
            if ((temp140 == 1)) {
                this.Manager.Comment("reaching state \'S33\'");
                goto label11;
            }
            throw new InvalidOperationException("never reached");
        label11:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S186");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S222");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S222");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S186");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S223");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S223");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3");
            this.Manager.Comment("reaching state \'S14\'");
            bool temp141;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp141);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp141);
            this.Manager.Comment("reaching state \'S15\'");
            int temp187 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp187 == 0)) {
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S47\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S57\'");
                int temp142;
                int temp143;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp144;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp144 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp142, out temp143);
                this.Manager.Comment("reaching state \'S67\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp142, "logonHandleIndex of Logon, state S67");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp143, "inboxFolderIdIndex of Logon, state S67");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp144, "return of Logon, state S67");
                this.Manager.Comment("reaching state \'S77\'");
                int temp145;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp146;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp146 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp145);
                this.Manager.Comment("reaching state \'S87\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp145, "folderHandleIndex of OpenFolder, state S87");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp146, "return of OpenFolder, state S87");
                this.Manager.Comment("reaching state \'S97\'");
                int temp147;
                int temp148;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp149 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp147, out temp148);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S107\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp147, "folderIdIndex of CreateFolder, state S107");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp148, "folderHandleIndex of CreateFolder, state S107");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp149, "return of CreateFolder, state S107");
                this.Manager.Comment("reaching state \'S117\'");
                int temp150;
                int temp151;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp152 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp150, out temp151);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S127\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp150, "folderIdIndex of CreateFolder, state S127");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp151, "folderHandleIndex of CreateFolder, state S127");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of CreateFolder, state S127");
                this.Manager.Comment("reaching state \'S137\'");
                int temp153;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp154;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp154 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp153);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S147\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp153, "messageHandleIndex of CreateMessage, state S147");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp154, "return of CreateMessage, state S147");
                this.Manager.Comment("reaching state \'S157\'");
                int temp155;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp156;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp156 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp155);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S167\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp155, "messageIdIndex of SaveChangesMessage, state S167");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp156, "return of SaveChangesMessage, state S167");
                this.Manager.Comment("reaching state \'S177\'");
                bool temp157;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3445,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3445, out temp157);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp157);
                this.Manager.Comment("reaching state \'S187\'");
                int temp186 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker3)));
                if ((temp186 == 0)) {
                    this.Manager.Comment("reaching state \'S204\'");
                    bool temp158;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3463,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3463, out temp158);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp158);
                    this.Manager.Comment("reaching state \'S224\'");
                    int temp171 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker2)));
                    if ((temp171 == 0)) {
                        this.Manager.Comment("reaching state \'S258\'");
                        int temp159;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp160;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Recover" +
                                "Mode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _" +
                                ")\'");
                        temp160 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp159);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S298\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp159, "copyToHandleIndex of FastTransferSourceCopyTo, state S298");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp160, "return of FastTransferSourceCopyTo, state S298");
                        this.Manager.Comment("reaching state \'S342\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp161;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp161 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S386\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp161, "return of Release, state S386");
                        this.Manager.Comment("reaching state \'S430\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp162;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp162 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S474\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp162, "return of Release, state S474");
                        this.Manager.Comment("reaching state \'S518\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp163;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp163 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S562\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp163, "return of Release, state S562");
                        this.Manager.Comment("reaching state \'S606\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp164 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S650\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp164, "return of Release, state S650");
                        this.Manager.Comment("reaching state \'S694\'");
                        goto label12;
                    }
                    if ((temp171 == 1)) {
                        this.Manager.Comment("reaching state \'S259\'");
                        int temp165;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp166;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Recover" +
                                "Mode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _" +
                                ")\'");
                        temp166 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp165);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S299\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp165, "copyToHandleIndex of FastTransferSourceCopyTo, state S299");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp166, "return of FastTransferSourceCopyTo, state S299");
                        this.Manager.Comment("reaching state \'S343\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp167 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S387\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of Release, state S387");
                        this.Manager.Comment("reaching state \'S431\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp168;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp168 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S475\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp168, "return of Release, state S475");
                        this.Manager.Comment("reaching state \'S519\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp169 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S563\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of Release, state S563");
                        this.Manager.Comment("reaching state \'S607\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp170;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp170 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S651\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp170, "return of Release, state S651");
                        this.Manager.Comment("reaching state \'S695\'");
                        goto label12;
                    }
                    throw new InvalidOperationException("never reached");
                label12:
;
                    goto label14;
                }
                if ((temp186 == 1)) {
                    this.Manager.Comment("reaching state \'S205\'");
                    bool temp172;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3463,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3463, out temp172);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp172);
                    this.Manager.Comment("reaching state \'S225\'");
                    int temp185 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker5)));
                    if ((temp185 == 0)) {
                        this.Manager.Comment("reaching state \'S260\'");
                        int temp173;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp174;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Recover" +
                                "Mode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _" +
                                ")\'");
                        temp174 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp173);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S300\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp173, "copyToHandleIndex of FastTransferSourceCopyTo, state S300");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp174, "return of FastTransferSourceCopyTo, state S300");
                        this.Manager.Comment("reaching state \'S344\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp175;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp175 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S388\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp175, "return of Release, state S388");
                        this.Manager.Comment("reaching state \'S432\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp176;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp176 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S476\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp176, "return of Release, state S476");
                        this.Manager.Comment("reaching state \'S520\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp177;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp177 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S564\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp177, "return of Release, state S564");
                        this.Manager.Comment("reaching state \'S608\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp178 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S652\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of Release, state S652");
                        this.Manager.Comment("reaching state \'S696\'");
                        goto label13;
                    }
                    if ((temp185 == 1)) {
                        this.Manager.Comment("reaching state \'S261\'");
                        int temp179;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp180;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Recover" +
                                "Mode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _" +
                                ")\'");
                        temp180 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp179);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S301\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp179, "copyToHandleIndex of FastTransferSourceCopyTo, state S301");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp180, "return of FastTransferSourceCopyTo, state S301");
                        this.Manager.Comment("reaching state \'S345\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp181;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp181 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S389\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp181, "return of Release, state S389");
                        this.Manager.Comment("reaching state \'S433\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp182 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S477\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of Release, state S477");
                        this.Manager.Comment("reaching state \'S521\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp183;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp183 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S565\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp183, "return of Release, state S565");
                        this.Manager.Comment("reaching state \'S609\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp184 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S653\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp184, "return of Release, state S653");
                        this.Manager.Comment("reaching state \'S697\'");
                        goto label13;
                    }
                    throw new InvalidOperationException("never reached");
                label13:
;
                    goto label14;
                }
                throw new InvalidOperationException("never reached");
            label14:
;
                goto label15;
            }
            if ((temp187 == 1)) {
                this.Manager.Comment("reaching state \'S35\'");
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S187");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S224");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S224");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S187");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S225");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S225");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        #endregion
        
        #region Test Starting in S16
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4");
            this.Manager.Comment("reaching state \'S16\'");
            bool temp188;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp188);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp188);
            this.Manager.Comment("reaching state \'S17\'");
            int temp234 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp234 == 0)) {
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S58\'");
                int temp189;
                int temp190;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp191;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp191 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp189, out temp190);
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp189, "logonHandleIndex of Logon, state S68");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp190, "inboxFolderIdIndex of Logon, state S68");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp191, "return of Logon, state S68");
                this.Manager.Comment("reaching state \'S78\'");
                int temp192;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp193;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp193 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp192);
                this.Manager.Comment("reaching state \'S88\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp192, "folderHandleIndex of OpenFolder, state S88");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp193, "return of OpenFolder, state S88");
                this.Manager.Comment("reaching state \'S98\'");
                int temp194;
                int temp195;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp196;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp196 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp194, out temp195);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S108\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp194, "folderIdIndex of CreateFolder, state S108");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp195, "folderHandleIndex of CreateFolder, state S108");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp196, "return of CreateFolder, state S108");
                this.Manager.Comment("reaching state \'S118\'");
                int temp197;
                int temp198;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp199;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp199 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp197, out temp198);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S128\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp197, "folderIdIndex of CreateFolder, state S128");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp198, "folderHandleIndex of CreateFolder, state S128");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp199, "return of CreateFolder, state S128");
                this.Manager.Comment("reaching state \'S138\'");
                int temp200;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp201;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp201 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp200);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S148\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp200, "messageHandleIndex of CreateMessage, state S148");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp201, "return of CreateMessage, state S148");
                this.Manager.Comment("reaching state \'S158\'");
                int temp202;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp203 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp202);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S168\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp202, "messageIdIndex of SaveChangesMessage, state S168");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of SaveChangesMessage, state S168");
                this.Manager.Comment("reaching state \'S178\'");
                bool temp204;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3445,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3445, out temp204);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp204);
                this.Manager.Comment("reaching state \'S188\'");
                int temp233 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker3)));
                if ((temp233 == 0)) {
                    this.Manager.Comment("reaching state \'S206\'");
                    bool temp205;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3463,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3463, out temp205);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp205);
                    this.Manager.Comment("reaching state \'S226\'");
                    int temp218 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker2)));
                    if ((temp218 == 0)) {
                        this.Manager.Comment("reaching state \'S262\'");
                        int temp206;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp207;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,Invalid,Reco" +
                                "verMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],ou" +
                                "t _)\'");
                        temp207 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp206);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S302\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp206, "copyToHandleIndex of FastTransferSourceCopyTo, state S302");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp207, "return of FastTransferSourceCopyTo, state S302");
                        this.Manager.Comment("reaching state \'S346\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp208;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp208 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S390\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp208, "return of Release, state S390");
                        this.Manager.Comment("reaching state \'S434\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp209;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp209 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S478\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp209, "return of Release, state S478");
                        this.Manager.Comment("reaching state \'S522\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp210;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp210 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S566\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp210, "return of Release, state S566");
                        this.Manager.Comment("reaching state \'S610\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp211;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp211 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S654\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp211, "return of Release, state S654");
                        this.Manager.Comment("reaching state \'S698\'");
                        goto label16;
                    }
                    if ((temp218 == 1)) {
                        this.Manager.Comment("reaching state \'S263\'");
                        int temp212;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,Invalid,Reco" +
                                "verMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],ou" +
                                "t _)\'");
                        temp213 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp212);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S303\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp212, "copyToHandleIndex of FastTransferSourceCopyTo, state S303");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of FastTransferSourceCopyTo, state S303");
                        this.Manager.Comment("reaching state \'S347\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp214;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp214 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S391\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp214, "return of Release, state S391");
                        this.Manager.Comment("reaching state \'S435\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp215;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp215 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S479\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp215, "return of Release, state S479");
                        this.Manager.Comment("reaching state \'S523\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp216;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp216 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S567\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp216, "return of Release, state S567");
                        this.Manager.Comment("reaching state \'S611\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp217;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp217 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S655\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp217, "return of Release, state S655");
                        this.Manager.Comment("reaching state \'S699\'");
                        goto label16;
                    }
                    throw new InvalidOperationException("never reached");
                label16:
;
                    goto label18;
                }
                if ((temp233 == 1)) {
                    this.Manager.Comment("reaching state \'S207\'");
                    bool temp219;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3463,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3463, out temp219);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp219);
                    this.Manager.Comment("reaching state \'S227\'");
                    int temp232 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker5)));
                    if ((temp232 == 0)) {
                        this.Manager.Comment("reaching state \'S264\'");
                        int temp220;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp221;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,Invalid,Reco" +
                                "verMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],ou" +
                                "t _)\'");
                        temp221 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp220);
                        this.Manager.Comment("reaching state \'S304\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp220, "copyToHandleIndex of FastTransferSourceCopyTo, state S304");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp221, "return of FastTransferSourceCopyTo, state S304");
                        this.Manager.Comment("reaching state \'S348\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp222;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp222 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S392\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp222, "return of Release, state S392");
                        this.Manager.Comment("reaching state \'S436\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp223;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp223 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S480\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp223, "return of Release, state S480");
                        this.Manager.Comment("reaching state \'S524\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp224;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp224 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S568\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp224, "return of Release, state S568");
                        this.Manager.Comment("reaching state \'S612\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp225;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp225 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S656\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp225, "return of Release, state S656");
                        this.Manager.Comment("reaching state \'S700\'");
                        goto label17;
                    }
                    if ((temp232 == 1)) {
                        this.Manager.Comment("reaching state \'S265\'");
                        int temp226;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp227;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,Invalid,Reco" +
                                "verMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],ou" +
                                "t _)\'");
                        temp227 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp226);
                        this.Manager.Comment("reaching state \'S305\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp226, "copyToHandleIndex of FastTransferSourceCopyTo, state S305");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp227, "return of FastTransferSourceCopyTo, state S305");
                        this.Manager.Comment("reaching state \'S349\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp228;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp228 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S393\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp228, "return of Release, state S393");
                        this.Manager.Comment("reaching state \'S437\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp229;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp229 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S481\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp229, "return of Release, state S481");
                        this.Manager.Comment("reaching state \'S525\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp230;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp230 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S569\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp230, "return of Release, state S569");
                        this.Manager.Comment("reaching state \'S613\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp231;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp231 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S657\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp231, "return of Release, state S657");
                        this.Manager.Comment("reaching state \'S701\'");
                        goto label17;
                    }
                    throw new InvalidOperationException("never reached");
                label17:
;
                    goto label18;
                }
                throw new InvalidOperationException("never reached");
            label18:
;
                goto label19;
            }
            if ((temp234 == 1)) {
                this.Manager.Comment("reaching state \'S37\'");
                goto label19;
            }
            throw new InvalidOperationException("never reached");
        label19:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S188");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S226");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S226");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S188");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S227");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S227");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite4CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        #endregion
        
        #region Test Starting in S18
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5");
            this.Manager.Comment("reaching state \'S18\'");
            bool temp235;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp235);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp235);
            this.Manager.Comment("reaching state \'S19\'");
            int temp281 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp281 == 0)) {
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S59\'");
                int temp236;
                int temp237;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp238;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp238 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp236, out temp237);
                this.Manager.Comment("reaching state \'S69\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp236, "logonHandleIndex of Logon, state S69");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp237, "inboxFolderIdIndex of Logon, state S69");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp238, "return of Logon, state S69");
                this.Manager.Comment("reaching state \'S79\'");
                int temp239;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp240;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp240 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp239);
                this.Manager.Comment("reaching state \'S89\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp239, "folderHandleIndex of OpenFolder, state S89");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp240, "return of OpenFolder, state S89");
                this.Manager.Comment("reaching state \'S99\'");
                int temp241;
                int temp242;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp243;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp243 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp241, out temp242);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S109\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp241, "folderIdIndex of CreateFolder, state S109");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp242, "folderHandleIndex of CreateFolder, state S109");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp243, "return of CreateFolder, state S109");
                this.Manager.Comment("reaching state \'S119\'");
                int temp244;
                int temp245;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp246;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp246 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp244, out temp245);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S129\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp244, "folderIdIndex of CreateFolder, state S129");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp245, "folderHandleIndex of CreateFolder, state S129");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp246, "return of CreateFolder, state S129");
                this.Manager.Comment("reaching state \'S139\'");
                int temp247;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp248;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp248 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp247);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S149\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp247, "messageHandleIndex of CreateMessage, state S149");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp248, "return of CreateMessage, state S149");
                this.Manager.Comment("reaching state \'S159\'");
                int temp249;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp250;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp250 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp249);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S169\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp249, "messageIdIndex of SaveChangesMessage, state S169");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp250, "return of SaveChangesMessage, state S169");
                this.Manager.Comment("reaching state \'S179\'");
                bool temp251;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3445,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3445, out temp251);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp251);
                this.Manager.Comment("reaching state \'S189\'");
                int temp280 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker3)));
                if ((temp280 == 0)) {
                    this.Manager.Comment("reaching state \'S208\'");
                    bool temp252;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3463,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3463, out temp252);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp252);
                    this.Manager.Comment("reaching state \'S228\'");
                    int temp265 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker2)));
                    if ((temp265 == 0)) {
                        this.Manager.Comment("reaching state \'S266\'");
                        int temp253;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp254;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Invalid" +
                                ",[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _)\'");
                        temp254 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp253);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S306\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp253, "copyToHandleIndex of FastTransferSourceCopyTo, state S306");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp254, "return of FastTransferSourceCopyTo, state S306");
                        this.Manager.Comment("reaching state \'S350\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp255;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp255 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S394\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp255, "return of Release, state S394");
                        this.Manager.Comment("reaching state \'S438\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp256;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp256 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S482\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp256, "return of Release, state S482");
                        this.Manager.Comment("reaching state \'S526\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp257;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp257 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S570\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp257, "return of Release, state S570");
                        this.Manager.Comment("reaching state \'S614\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp258;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp258 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S658\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp258, "return of Release, state S658");
                        this.Manager.Comment("reaching state \'S702\'");
                        goto label20;
                    }
                    if ((temp265 == 1)) {
                        this.Manager.Comment("reaching state \'S267\'");
                        int temp259;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp260;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Invalid" +
                                ",[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _)\'");
                        temp260 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp259);
                        this.Manager.Comment("reaching state \'S307\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp259, "copyToHandleIndex of FastTransferSourceCopyTo, state S307");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp260, "return of FastTransferSourceCopyTo, state S307");
                        this.Manager.Comment("reaching state \'S351\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp261;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp261 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S395\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp261, "return of Release, state S395");
                        this.Manager.Comment("reaching state \'S439\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp262;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp262 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S483\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp262, "return of Release, state S483");
                        this.Manager.Comment("reaching state \'S527\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp263;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp263 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S571\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp263, "return of Release, state S571");
                        this.Manager.Comment("reaching state \'S615\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp264;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp264 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S659\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp264, "return of Release, state S659");
                        this.Manager.Comment("reaching state \'S703\'");
                        goto label20;
                    }
                    throw new InvalidOperationException("never reached");
                label20:
;
                    goto label22;
                }
                if ((temp280 == 1)) {
                    this.Manager.Comment("reaching state \'S209\'");
                    bool temp266;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3463,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3463, out temp266);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp266);
                    this.Manager.Comment("reaching state \'S229\'");
                    int temp279 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker5)));
                    if ((temp279 == 0)) {
                        this.Manager.Comment("reaching state \'S268\'");
                        int temp267;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp268;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Invalid" +
                                ",[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _)\'");
                        temp268 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp267);
                        this.Manager.Checkpoint("MS-OXCFXICS_R361");
                        this.Manager.Comment("reaching state \'S308\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp267, "copyToHandleIndex of FastTransferSourceCopyTo, state S308");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp268, "return of FastTransferSourceCopyTo, state S308");
                        this.Manager.Comment("reaching state \'S352\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp269;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp269 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S396\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp269, "return of Release, state S396");
                        this.Manager.Comment("reaching state \'S440\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp270;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp270 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S484\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp270, "return of Release, state S484");
                        this.Manager.Comment("reaching state \'S528\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp271;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp271 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S572\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp271, "return of Release, state S572");
                        this.Manager.Comment("reaching state \'S616\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp272;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp272 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S660\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp272, "return of Release, state S660");
                        this.Manager.Comment("reaching state \'S704\'");
                        goto label21;
                    }
                    if ((temp279 == 1)) {
                        this.Manager.Comment("reaching state \'S269\'");
                        int temp273;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp274;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,2,FolderHandle,False,None,Invalid" +
                                ",[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\"],out _)\'");
                        temp274 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp273);
                        this.Manager.Comment("reaching state \'S309\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp273, "copyToHandleIndex of FastTransferSourceCopyTo, state S309");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp274, "return of FastTransferSourceCopyTo, state S309");
                        this.Manager.Comment("reaching state \'S353\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp275;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp275 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S397\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp275, "return of Release, state S397");
                        this.Manager.Comment("reaching state \'S441\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp276;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp276 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S485\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp276, "return of Release, state S485");
                        this.Manager.Comment("reaching state \'S529\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp277;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp277 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S573\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp277, "return of Release, state S573");
                        this.Manager.Comment("reaching state \'S617\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp278;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp278 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S661\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp278, "return of Release, state S661");
                        this.Manager.Comment("reaching state \'S705\'");
                        goto label21;
                    }
                    throw new InvalidOperationException("never reached");
                label21:
;
                    goto label22;
                }
                throw new InvalidOperationException("never reached");
            label22:
;
                goto label23;
            }
            if ((temp281 == 1)) {
                this.Manager.Comment("reaching state \'S39\'");
                goto label23;
            }
            throw new InvalidOperationException("never reached");
        label23:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S19");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S189");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S228");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S228");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S189");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S229");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S229");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite5CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S19");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp282;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp282);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp282);
            this.Manager.Comment("reaching state \'S3\'");
            int temp328 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp328 == 0)) {
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S51\'");
                int temp283;
                int temp284;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp285;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp285 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp283, out temp284);
                this.Manager.Comment("reaching state \'S61\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp283, "logonHandleIndex of Logon, state S61");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp284, "inboxFolderIdIndex of Logon, state S61");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp285, "return of Logon, state S61");
                this.Manager.Comment("reaching state \'S71\'");
                int temp286;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp287;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp287 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp286);
                this.Manager.Comment("reaching state \'S81\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp286, "folderHandleIndex of OpenFolder, state S81");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp287, "return of OpenFolder, state S81");
                this.Manager.Comment("reaching state \'S91\'");
                int temp288;
                int temp289;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp290;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp290 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp288, out temp289);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S101\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp288, "folderIdIndex of CreateFolder, state S101");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp289, "folderHandleIndex of CreateFolder, state S101");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp290, "return of CreateFolder, state S101");
                this.Manager.Comment("reaching state \'S111\'");
                int temp291;
                int temp292;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp293;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp293 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp291, out temp292);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S121\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp291, "folderIdIndex of CreateFolder, state S121");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp292, "folderHandleIndex of CreateFolder, state S121");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp293, "return of CreateFolder, state S121");
                this.Manager.Comment("reaching state \'S131\'");
                int temp294;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp295;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp295 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp294);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S141\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp294, "messageHandleIndex of CreateMessage, state S141");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp295, "return of CreateMessage, state S141");
                this.Manager.Comment("reaching state \'S151\'");
                int temp296;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp297;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp297 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp296);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S161\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp296, "messageIdIndex of SaveChangesMessage, state S161");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp297, "return of SaveChangesMessage, state S161");
                this.Manager.Comment("reaching state \'S171\'");
                bool temp298;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3483,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3483, out temp298);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp298);
                this.Manager.Comment("reaching state \'S181\'");
                int temp327 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker3)));
                if ((temp327 == 0)) {
                    this.Manager.Comment("reaching state \'S192\'");
                    bool temp299;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3487,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3487, out temp299);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp299);
                    this.Manager.Comment("reaching state \'S212\'");
                    int temp312 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker2)));
                    if ((temp312 == 0)) {
                        this.Manager.Comment("reaching state \'S234\'");
                        int temp300;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp301;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,Invalid,RecoverMode,out _)\'" +
                                "");
                        temp301 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp300);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S274\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp300, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S274");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp301, "return of FastTransferSourceCopyFolder, state S274");
                        this.Manager.Comment("reaching state \'S314\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp302;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp302 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S358\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp302, "return of Release, state S358");
                        this.Manager.Comment("reaching state \'S402\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp303;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp303 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S446\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp303, "return of Release, state S446");
                        this.Manager.Comment("reaching state \'S490\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp304;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp304 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S534\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp304, "return of Release, state S534");
                        this.Manager.Comment("reaching state \'S578\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp305;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp305 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S622\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp305, "return of Release, state S622");
                        this.Manager.Comment("reaching state \'S666\'");
                        goto label24;
                    }
                    if ((temp312 == 1)) {
                        this.Manager.Comment("reaching state \'S235\'");
                        int temp306;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp307;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,Invalid,RecoverMode,out _)\'" +
                                "");
                        temp307 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp306);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S275\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp306, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S275");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp307, "return of FastTransferSourceCopyFolder, state S275");
                        this.Manager.Comment("reaching state \'S315\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp308;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp308 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S359\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp308, "return of Release, state S359");
                        this.Manager.Comment("reaching state \'S403\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp309;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp309 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S447\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp309, "return of Release, state S447");
                        this.Manager.Comment("reaching state \'S491\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp310;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp310 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S535\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp310, "return of Release, state S535");
                        this.Manager.Comment("reaching state \'S579\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp311;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp311 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S623\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp311, "return of Release, state S623");
                        this.Manager.Comment("reaching state \'S667\'");
                        goto label24;
                    }
                    throw new InvalidOperationException("never reached");
                label24:
;
                    goto label26;
                }
                if ((temp327 == 1)) {
                    this.Manager.Comment("reaching state \'S193\'");
                    bool temp313;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3487,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3487, out temp313);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp313);
                    this.Manager.Comment("reaching state \'S213\'");
                    int temp326 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker5)));
                    if ((temp326 == 0)) {
                        this.Manager.Comment("reaching state \'S236\'");
                        int temp314;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp315;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,Invalid,RecoverMode,out _)\'" +
                                "");
                        temp315 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp314);
                        this.Manager.Comment("reaching state \'S276\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp314, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S276");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp315, "return of FastTransferSourceCopyFolder, state S276");
                        this.Manager.Comment("reaching state \'S316\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp316;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp316 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S360\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp316, "return of Release, state S360");
                        this.Manager.Comment("reaching state \'S404\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp317;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp317 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S448\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp317, "return of Release, state S448");
                        this.Manager.Comment("reaching state \'S492\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp318;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp318 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S536\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp318, "return of Release, state S536");
                        this.Manager.Comment("reaching state \'S580\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp319;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp319 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S624\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp319, "return of Release, state S624");
                        this.Manager.Comment("reaching state \'S668\'");
                        goto label25;
                    }
                    if ((temp326 == 1)) {
                        this.Manager.Comment("reaching state \'S237\'");
                        int temp320;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp321;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,Invalid,RecoverMode,out _)\'" +
                                "");
                        temp321 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.Invalid, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp320);
                        this.Manager.Comment("reaching state \'S277\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp320, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S277");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp321, "return of FastTransferSourceCopyFolder, state S277");
                        this.Manager.Comment("reaching state \'S317\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp322;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp322 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S361\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp322, "return of Release, state S361");
                        this.Manager.Comment("reaching state \'S405\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp323;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp323 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S449\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp323, "return of Release, state S449");
                        this.Manager.Comment("reaching state \'S493\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp324;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp324 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S537\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp324, "return of Release, state S537");
                        this.Manager.Comment("reaching state \'S581\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp325;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp325 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S625\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp325, "return of Release, state S625");
                        this.Manager.Comment("reaching state \'S669\'");
                        goto label25;
                    }
                    throw new InvalidOperationException("never reached");
                label25:
;
                    goto label26;
                }
                throw new InvalidOperationException("never reached");
            label26:
;
                goto label27;
            }
            if ((temp328 == 1)) {
                this.Manager.Comment("reaching state \'S23\'");
                goto label27;
            }
            throw new InvalidOperationException("never reached");
        label27:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S181");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S212");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S212");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S181");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S213");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S213");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite6CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp329;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp329);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp329);
            this.Manager.Comment("reaching state \'S5\'");
            int temp375 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp375 == 0)) {
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S52\'");
                int temp330;
                int temp331;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp332;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp332 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp330, out temp331);
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp330, "logonHandleIndex of Logon, state S62");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp331, "inboxFolderIdIndex of Logon, state S62");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp332, "return of Logon, state S62");
                this.Manager.Comment("reaching state \'S72\'");
                int temp333;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp334;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp334 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp333);
                this.Manager.Comment("reaching state \'S82\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp333, "folderHandleIndex of OpenFolder, state S82");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp334, "return of OpenFolder, state S82");
                this.Manager.Comment("reaching state \'S92\'");
                int temp335;
                int temp336;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp337;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp337 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp335, out temp336);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S102\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp335, "folderIdIndex of CreateFolder, state S102");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp336, "folderHandleIndex of CreateFolder, state S102");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp337, "return of CreateFolder, state S102");
                this.Manager.Comment("reaching state \'S112\'");
                int temp338;
                int temp339;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp340;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp340 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp338, out temp339);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S122\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp338, "folderIdIndex of CreateFolder, state S122");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp339, "folderHandleIndex of CreateFolder, state S122");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp340, "return of CreateFolder, state S122");
                this.Manager.Comment("reaching state \'S132\'");
                int temp341;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp342;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp342 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp341);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S142\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp341, "messageHandleIndex of CreateMessage, state S142");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp342, "return of CreateMessage, state S142");
                this.Manager.Comment("reaching state \'S152\'");
                int temp343;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp344;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp344 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp343);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S162\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp343, "messageIdIndex of SaveChangesMessage, state S162");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp344, "return of SaveChangesMessage, state S162");
                this.Manager.Comment("reaching state \'S172\'");
                bool temp345;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3483,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3483, out temp345);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp345);
                this.Manager.Comment("reaching state \'S182\'");
                int temp374 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker3)));
                if ((temp374 == 0)) {
                    this.Manager.Comment("reaching state \'S194\'");
                    bool temp346;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3487,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3487, out temp346);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp346);
                    this.Manager.Comment("reaching state \'S214\'");
                    int temp359 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker2)));
                    if ((temp359 == 0)) {
                        this.Manager.Comment("reaching state \'S238\'");
                        int temp347;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp348;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,Invalid,out " +
                                "_)\'");
                        temp348 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, out temp347);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S278\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp347, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S278");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp348, "return of FastTransferSourceCopyFolder, state S278");
                        this.Manager.Comment("reaching state \'S318\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp349;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp349 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S362\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp349, "return of Release, state S362");
                        this.Manager.Comment("reaching state \'S406\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp350;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp350 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S450\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp350, "return of Release, state S450");
                        this.Manager.Comment("reaching state \'S494\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp351;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp351 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S538\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp351, "return of Release, state S538");
                        this.Manager.Comment("reaching state \'S582\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp352;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp352 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S626\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp352, "return of Release, state S626");
                        this.Manager.Comment("reaching state \'S670\'");
                        goto label28;
                    }
                    if ((temp359 == 1)) {
                        this.Manager.Comment("reaching state \'S239\'");
                        int temp353;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp354;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,Invalid,out " +
                                "_)\'");
                        temp354 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, out temp353);
                        this.Manager.Comment("reaching state \'S279\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp353, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S279");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp354, "return of FastTransferSourceCopyFolder, state S279");
                        this.Manager.Comment("reaching state \'S319\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp355;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp355 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S363\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp355, "return of Release, state S363");
                        this.Manager.Comment("reaching state \'S407\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp356;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp356 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S451\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp356, "return of Release, state S451");
                        this.Manager.Comment("reaching state \'S495\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp357;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp357 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S539\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp357, "return of Release, state S539");
                        this.Manager.Comment("reaching state \'S583\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp358;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp358 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S627\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp358, "return of Release, state S627");
                        this.Manager.Comment("reaching state \'S671\'");
                        goto label28;
                    }
                    throw new InvalidOperationException("never reached");
                label28:
;
                    goto label30;
                }
                if ((temp374 == 1)) {
                    this.Manager.Comment("reaching state \'S195\'");
                    bool temp360;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3487,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3487, out temp360);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp360);
                    this.Manager.Comment("reaching state \'S215\'");
                    int temp373 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker5)));
                    if ((temp373 == 0)) {
                        this.Manager.Comment("reaching state \'S240\'");
                        int temp361;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp362;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,Invalid,out " +
                                "_)\'");
                        temp362 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, out temp361);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S280\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp361, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S280");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp362, "return of FastTransferSourceCopyFolder, state S280");
                        this.Manager.Comment("reaching state \'S320\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp363;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp363 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S364\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp363, "return of Release, state S364");
                        this.Manager.Comment("reaching state \'S408\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp364;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp364 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S452\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp364, "return of Release, state S452");
                        this.Manager.Comment("reaching state \'S496\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp365;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp365 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S540\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp365, "return of Release, state S540");
                        this.Manager.Comment("reaching state \'S584\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp366;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp366 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S628\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp366, "return of Release, state S628");
                        this.Manager.Comment("reaching state \'S672\'");
                        goto label29;
                    }
                    if ((temp373 == 1)) {
                        this.Manager.Comment("reaching state \'S241\'");
                        int temp367;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp368;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,2,CopySubfolders,Invalid,out " +
                                "_)\'");
                        temp368 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 2, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, out temp367);
                        this.Manager.Comment("reaching state \'S281\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp367, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S281");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp368, "return of FastTransferSourceCopyFolder, state S281");
                        this.Manager.Comment("reaching state \'S321\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp369;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp369 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S365\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp369, "return of Release, state S365");
                        this.Manager.Comment("reaching state \'S409\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp370;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp370 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S453\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp370, "return of Release, state S453");
                        this.Manager.Comment("reaching state \'S497\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp371;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp371 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S541\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp371, "return of Release, state S541");
                        this.Manager.Comment("reaching state \'S585\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp372;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp372 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S629\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp372, "return of Release, state S629");
                        this.Manager.Comment("reaching state \'S673\'");
                        goto label29;
                    }
                    throw new InvalidOperationException("never reached");
                label29:
;
                    goto label30;
                }
                throw new InvalidOperationException("never reached");
            label30:
;
                goto label31;
            }
            if ((temp375 == 1)) {
                this.Manager.Comment("reaching state \'S25\'");
                goto label31;
            }
            throw new InvalidOperationException("never reached");
        label31:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S182");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S214");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S214");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S182");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S215");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S215");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite7CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp376;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp376);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp376);
            this.Manager.Comment("reaching state \'S7\'");
            int temp454 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp454 == 0)) {
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S53\'");
                int temp377;
                int temp378;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp379;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp379 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp377, out temp378);
                this.Manager.Comment("reaching state \'S63\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp377, "logonHandleIndex of Logon, state S63");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp378, "inboxFolderIdIndex of Logon, state S63");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp379, "return of Logon, state S63");
                this.Manager.Comment("reaching state \'S73\'");
                int temp380;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp381;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp381 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp380);
                this.Manager.Comment("reaching state \'S83\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp380, "folderHandleIndex of OpenFolder, state S83");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp381, "return of OpenFolder, state S83");
                this.Manager.Comment("reaching state \'S93\'");
                int temp382;
                int temp383;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp384;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp384 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp382, out temp383);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S103\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp382, "folderIdIndex of CreateFolder, state S103");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp383, "folderHandleIndex of CreateFolder, state S103");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp384, "return of CreateFolder, state S103");
                this.Manager.Comment("reaching state \'S113\'");
                int temp385;
                int temp386;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp387;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp387 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp385, out temp386);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S123\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp385, "folderIdIndex of CreateFolder, state S123");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp386, "folderHandleIndex of CreateFolder, state S123");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp387, "return of CreateFolder, state S123");
                this.Manager.Comment("reaching state \'S133\'");
                int temp388;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp389;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp389 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp388);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S143\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp388, "messageHandleIndex of CreateMessage, state S143");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp389, "return of CreateMessage, state S143");
                this.Manager.Comment("reaching state \'S153\'");
                int temp390;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp391;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp391 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp390);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S163\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp390, "messageIdIndex of SaveChangesMessage, state S163");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp391, "return of SaveChangesMessage, state S163");
                this.Manager.Comment("reaching state \'S173\'");
                bool temp392;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3479,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3479, out temp392);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp392);
                this.Manager.Comment("reaching state \'S183\'");
                int temp453 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker7)));
                if ((temp453 == 0)) {
                    this.Manager.Comment("reaching state \'S196\'");
                    bool temp393;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(211601,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211601, out temp393);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp393);
                    this.Manager.Comment("reaching state \'S216\'");
                    int temp422 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker4)));
                    if ((temp422 == 0)) {
                        this.Manager.Comment("reaching state \'S242\'");
                        bool temp394;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(499003,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499003, out temp394);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp394);
                        this.Manager.Comment("reaching state \'S282\'");
                        int temp407 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker2)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker3)));
                        if ((temp407 == 0)) {
                            this.Manager.Comment("reaching state \'S322\'");
                            int temp395;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp396;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp396 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp395);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S366\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 6]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp395, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S366");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp396, "return of FastTransferSourceCopyMessages, state S366");
                            this.Manager.Comment("reaching state \'S410\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp397;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp397 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S454\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp397, "return of Release, state S454");
                            this.Manager.Comment("reaching state \'S498\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp398;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp398 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S542\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp398, "return of Release, state S542");
                            this.Manager.Comment("reaching state \'S586\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp399;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp399 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S630\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp399, "return of Release, state S630");
                            this.Manager.Comment("reaching state \'S674\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp400;
                            this.Manager.Comment("executing step \'call Release(1,6)\'");
                            temp400 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                            this.Manager.Comment("reaching state \'S706\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp400, "return of Release, state S706");
                            this.Manager.Comment("reaching state \'S714\'");
                            goto label32;
                        }
                        if ((temp407 == 1)) {
                            this.Manager.Comment("reaching state \'S323\'");
                            int temp401;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp402;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp402 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp401);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S367\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 6]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp401, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S367");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp402, "return of FastTransferSourceCopyMessages, state S367");
                            this.Manager.Comment("reaching state \'S411\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp403;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp403 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S455\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp403, "return of Release, state S455");
                            this.Manager.Comment("reaching state \'S499\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp404;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp404 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S543\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp404, "return of Release, state S543");
                            this.Manager.Comment("reaching state \'S587\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp405;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp405 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S631\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp405, "return of Release, state S631");
                            this.Manager.Comment("reaching state \'S675\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp406;
                            this.Manager.Comment("executing step \'call Release(1,6)\'");
                            temp406 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                            this.Manager.Comment("reaching state \'S707\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp406, "return of Release, state S707");
                            this.Manager.Comment("reaching state \'S715\'");
                            goto label32;
                        }
                        throw new InvalidOperationException("never reached");
                    label32:
;
                        goto label34;
                    }
                    if ((temp422 == 1)) {
                        this.Manager.Comment("reaching state \'S243\'");
                        bool temp408;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(499003,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499003, out temp408);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp408);
                        this.Manager.Comment("reaching state \'S283\'");
                        int temp421 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker5)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker6)));
                        if ((temp421 == 0)) {
                            this.Manager.Comment("reaching state \'S324\'");
                            int temp409;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp410;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp410 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp409);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S368\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 6]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp409, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S368");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp410, "return of FastTransferSourceCopyMessages, state S368");
                            this.Manager.Comment("reaching state \'S412\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp411;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp411 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S456\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp411, "return of Release, state S456");
                            this.Manager.Comment("reaching state \'S500\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp412;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp412 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S544\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp412, "return of Release, state S544");
                            this.Manager.Comment("reaching state \'S588\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp413;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp413 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S632\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp413, "return of Release, state S632");
                            this.Manager.Comment("reaching state \'S676\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp414;
                            this.Manager.Comment("executing step \'call Release(1,6)\'");
                            temp414 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                            this.Manager.Comment("reaching state \'S708\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp414, "return of Release, state S708");
                            this.Manager.Comment("reaching state \'S716\'");
                            goto label33;
                        }
                        if ((temp421 == 1)) {
                            this.Manager.Comment("reaching state \'S325\'");
                            int temp415;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp416;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp416 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp415);
                            this.Manager.Checkpoint("MS-OXCFXICS_R3125");
                            this.Manager.Comment("reaching state \'S369\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out 6]:Success\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp415, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S369");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp416, "return of FastTransferSourceCopyMessages, state S369");
                            this.Manager.Comment("reaching state \'S413\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp417;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp417 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S457\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp417, "return of Release, state S457");
                            this.Manager.Comment("reaching state \'S501\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp418;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp418 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S545\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp418, "return of Release, state S545");
                            this.Manager.Comment("reaching state \'S589\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp419;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp419 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S633\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp419, "return of Release, state S633");
                            this.Manager.Comment("reaching state \'S677\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp420;
                            this.Manager.Comment("executing step \'call Release(1,6)\'");
                            temp420 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                            this.Manager.Comment("reaching state \'S709\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp420, "return of Release, state S709");
                            this.Manager.Comment("reaching state \'S717\'");
                            goto label33;
                        }
                        throw new InvalidOperationException("never reached");
                    label33:
;
                        goto label34;
                    }
                    throw new InvalidOperationException("never reached");
                label34:
;
                    goto label38;
                }
                if ((temp453 == 1)) {
                    this.Manager.Comment("reaching state \'S197\'");
                    bool temp423;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(211601,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(211601, out temp423);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp423);
                    this.Manager.Comment("reaching state \'S217\'");
                    int temp452 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker8)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker11)));
                    if ((temp452 == 0)) {
                        this.Manager.Comment("reaching state \'S244\'");
                        bool temp424;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(499003,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499003, out temp424);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp424);
                        this.Manager.Comment("reaching state \'S284\'");
                        int temp437 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker9)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker10)));
                        if ((temp437 == 0)) {
                            this.Manager.Comment("reaching state \'S326\'");
                            int temp425;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp426;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp426 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp425);
                            this.Manager.Comment("reaching state \'S370\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out -1]:InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp425, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S370");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp426, "return of FastTransferSourceCopyMessages, state S370");
                            this.Manager.Comment("reaching state \'S414\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp427;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp427 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S458\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp427, "return of Release, state S458");
                            this.Manager.Comment("reaching state \'S502\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp428;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp428 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S546\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp428, "return of Release, state S546");
                            this.Manager.Comment("reaching state \'S590\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp429;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp429 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S634\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp429, "return of Release, state S634");
                            this.Manager.Comment("reaching state \'S678\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp430;
                            this.Manager.Comment("executing step \'call Release(1,-1)\'");
                            temp430 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                            this.Manager.Comment("reaching state \'S710\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp430, "return of Release, state S710");
                            this.Manager.Comment("reaching state \'S718\'");
                            goto label35;
                        }
                        if ((temp437 == 1)) {
                            this.Manager.Comment("reaching state \'S327\'");
                            int temp431;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp432;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp432 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp431);
                            this.Manager.Comment("reaching state \'S371\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out -1]:InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp431, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S371");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp432, "return of FastTransferSourceCopyMessages, state S371");
                            this.Manager.Comment("reaching state \'S415\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp433;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp433 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S459\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp433, "return of Release, state S459");
                            this.Manager.Comment("reaching state \'S503\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp434;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp434 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S547\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp434, "return of Release, state S547");
                            this.Manager.Comment("reaching state \'S591\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp435;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp435 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S635\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp435, "return of Release, state S635");
                            this.Manager.Comment("reaching state \'S679\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp436;
                            this.Manager.Comment("executing step \'call Release(1,-1)\'");
                            temp436 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                            this.Manager.Comment("reaching state \'S711\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp436, "return of Release, state S711");
                            this.Manager.Comment("reaching state \'S719\'");
                            goto label35;
                        }
                        throw new InvalidOperationException("never reached");
                    label35:
;
                        goto label37;
                    }
                    if ((temp452 == 1)) {
                        this.Manager.Comment("reaching state \'S245\'");
                        bool temp438;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(499003,out _)\'");
                        this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(499003, out temp438);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp438);
                        this.Manager.Comment("reaching state \'S285\'");
                        int temp451 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker12)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker13)));
                        if ((temp451 == 0)) {
                            this.Manager.Comment("reaching state \'S328\'");
                            int temp439;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp440;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp440 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp439);
                            this.Manager.Comment("reaching state \'S372\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out -1]:InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp439, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S372");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp440, "return of FastTransferSourceCopyMessages, state S372");
                            this.Manager.Comment("reaching state \'S416\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp441;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp441 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S460\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp441, "return of Release, state S460");
                            this.Manager.Comment("reaching state \'S504\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp442;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp442 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S548\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp442, "return of Release, state S548");
                            this.Manager.Comment("reaching state \'S592\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp443;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp443 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S636\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp443, "return of Release, state S636");
                            this.Manager.Comment("reaching state \'S680\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp444;
                            this.Manager.Comment("executing step \'call Release(1,-1)\'");
                            temp444 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                            this.Manager.Comment("reaching state \'S712\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp444, "return of Release, state S712");
                            this.Manager.Comment("reaching state \'S720\'");
                            goto label36;
                        }
                        if ((temp451 == 1)) {
                            this.Manager.Comment("reaching state \'S329\'");
                            int temp445;
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp446;
                            this.Manager.Comment("executing step \'call FastTransferSourceCopyMessages(1,3,BestBody,Invalid,[4],out " +
                                    "_)\'");
                            temp446 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyMessages(1, 3, Microsoft.Protocols.TestSuites.Common.RopFastTransferSourceCopyMessagesCopyFlags.BestBody, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.Invalid, this.Make<Microsoft.Modeling.Sequence<int>>(new string[] {
                                            "Rep"}, new object[] {
                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<int>>(new string[] {
                                                        "Head",
                                                        "Tail"}, new object[] {
                                                        4,
                                                        ((Microsoft.Xrt.Runtime.RuntimeList<int>)(null))})}), out temp445);
                            this.Manager.Comment("reaching state \'S373\'");
                            this.Manager.Comment("checking step \'return FastTransferSourceCopyMessages/[out -1]:InvalidParameter\'");
                            TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp445, "copyMessageHandleIndex of FastTransferSourceCopyMessages, state S373");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp446, "return of FastTransferSourceCopyMessages, state S373");
                            this.Manager.Comment("reaching state \'S417\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp447;
                            this.Manager.Comment("executing step \'call Release(1,3)\'");
                            temp447 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                            this.Manager.Comment("reaching state \'S461\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp447, "return of Release, state S461");
                            this.Manager.Comment("reaching state \'S505\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp448;
                            this.Manager.Comment("executing step \'call Release(1,4)\'");
                            temp448 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                            this.Manager.Comment("reaching state \'S549\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp448, "return of Release, state S549");
                            this.Manager.Comment("reaching state \'S593\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp449;
                            this.Manager.Comment("executing step \'call Release(1,5)\'");
                            temp449 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                            this.Manager.Comment("reaching state \'S637\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp449, "return of Release, state S637");
                            this.Manager.Comment("reaching state \'S681\'");
                            Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp450;
                            this.Manager.Comment("executing step \'call Release(1,-1)\'");
                            temp450 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                            this.Manager.Comment("reaching state \'S713\'");
                            this.Manager.Comment("checking step \'return Release/Success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp450, "return of Release, state S713");
                            this.Manager.Comment("reaching state \'S721\'");
                            goto label36;
                        }
                        throw new InvalidOperationException("never reached");
                    label36:
;
                        goto label37;
                    }
                    throw new InvalidOperationException("never reached");
                label37:
;
                    goto label38;
                }
                throw new InvalidOperationException("never reached");
            label38:
;
                goto label39;
            }
            if ((temp454 == 1)) {
                this.Manager.Comment("reaching state \'S27\'");
                goto label39;
            }
            throw new InvalidOperationException("never reached");
        label39:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S183");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S216");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S282");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S282");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S216");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S283");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S283");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S183");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S217");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S284");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S284");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S217");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S285");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S285");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite8CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9");
            this.Manager.Comment("reaching state \'S8\'");
            bool temp455;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp455);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp455);
            this.Manager.Comment("reaching state \'S9\'");
            int temp501 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp501 == 0)) {
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S54\'");
                int temp456;
                int temp457;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp458;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp458 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp456, out temp457);
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp456, "logonHandleIndex of Logon, state S64");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp457, "inboxFolderIdIndex of Logon, state S64");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp458, "return of Logon, state S64");
                this.Manager.Comment("reaching state \'S74\'");
                int temp459;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp460;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp460 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp459);
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp459, "folderHandleIndex of OpenFolder, state S84");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp460, "return of OpenFolder, state S84");
                this.Manager.Comment("reaching state \'S94\'");
                int temp461;
                int temp462;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp463;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp463 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp461, out temp462);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S104\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp461, "folderIdIndex of CreateFolder, state S104");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp462, "folderHandleIndex of CreateFolder, state S104");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp463, "return of CreateFolder, state S104");
                this.Manager.Comment("reaching state \'S114\'");
                int temp464;
                int temp465;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp466;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp466 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp464, out temp465);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S124\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp464, "folderIdIndex of CreateFolder, state S124");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp465, "folderHandleIndex of CreateFolder, state S124");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp466, "return of CreateFolder, state S124");
                this.Manager.Comment("reaching state \'S134\'");
                int temp467;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp468;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp468 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp467);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S144\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp467, "messageHandleIndex of CreateMessage, state S144");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp468, "return of CreateMessage, state S144");
                this.Manager.Comment("reaching state \'S154\'");
                int temp469;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp470;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp470 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp469);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S164\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp469, "messageIdIndex of SaveChangesMessage, state S164");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp470, "return of SaveChangesMessage, state S164");
                this.Manager.Comment("reaching state \'S174\'");
                bool temp471;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp471);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp471);
                this.Manager.Comment("reaching state \'S184\'");
                int temp500 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker3)));
                if ((temp500 == 0)) {
                    this.Manager.Comment("reaching state \'S198\'");
                    bool temp472;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3470,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3470, out temp472);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp472);
                    this.Manager.Comment("reaching state \'S218\'");
                    int temp485 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker1)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker2)));
                    if ((temp485 == 0)) {
                        this.Manager.Comment("reaching state \'S246\'");
                        int temp473;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp474;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName" +
                                "\"],out _)\'");
                        temp474 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp473);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S286\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp473, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S286");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp474, "return of FastTransferSourceCopyProperties, state S286");
                        this.Manager.Comment("reaching state \'S330\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp475;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp475 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S374\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp475, "return of Release, state S374");
                        this.Manager.Comment("reaching state \'S418\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp476;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp476 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S462\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp476, "return of Release, state S462");
                        this.Manager.Comment("reaching state \'S506\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp477;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp477 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S550\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp477, "return of Release, state S550");
                        this.Manager.Comment("reaching state \'S594\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp478;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp478 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S638\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp478, "return of Release, state S638");
                        this.Manager.Comment("reaching state \'S682\'");
                        goto label40;
                    }
                    if ((temp485 == 1)) {
                        this.Manager.Comment("reaching state \'S247\'");
                        int temp479;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp480;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName" +
                                "\"],out _)\'");
                        temp480 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp479);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S287\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp479, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S287");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp480, "return of FastTransferSourceCopyProperties, state S287");
                        this.Manager.Comment("reaching state \'S331\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp481;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp481 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S375\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp481, "return of Release, state S375");
                        this.Manager.Comment("reaching state \'S419\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp482;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp482 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S463\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp482, "return of Release, state S463");
                        this.Manager.Comment("reaching state \'S507\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp483;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp483 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S551\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp483, "return of Release, state S551");
                        this.Manager.Comment("reaching state \'S595\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp484;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp484 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S639\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp484, "return of Release, state S639");
                        this.Manager.Comment("reaching state \'S683\'");
                        goto label40;
                    }
                    throw new InvalidOperationException("never reached");
                label40:
;
                    goto label42;
                }
                if ((temp500 == 1)) {
                    this.Manager.Comment("reaching state \'S199\'");
                    bool temp486;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(3470,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3470, out temp486);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp486);
                    this.Manager.Comment("reaching state \'S219\'");
                    int temp499 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker4)), new ExpectedReturn(S01_SyncFastTransferInvalidParameter_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker5)));
                    if ((temp499 == 0)) {
                        this.Manager.Comment("reaching state \'S248\'");
                        int temp487;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp488;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName" +
                                "\"],out _)\'");
                        temp488 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp487);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S288\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp487, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S288");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp488, "return of FastTransferSourceCopyProperties, state S288");
                        this.Manager.Comment("reaching state \'S332\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp489;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp489 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S376\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp489, "return of Release, state S376");
                        this.Manager.Comment("reaching state \'S420\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp490;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp490 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S464\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp490, "return of Release, state S464");
                        this.Manager.Comment("reaching state \'S508\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp491;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp491 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S552\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp491, "return of Release, state S552");
                        this.Manager.Comment("reaching state \'S596\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp492;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp492 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S640\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp492, "return of Release, state S640");
                        this.Manager.Comment("reaching state \'S684\'");
                        goto label41;
                    }
                    if ((temp499 == 1)) {
                        this.Manager.Comment("reaching state \'S249\'");
                        int temp493;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp494;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,2,FolderHandle,False,None" +
                                ",RecoverMode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName" +
                                "\"],out _)\'");
                        temp494 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 2, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                        "Rep"}, new object[] {
                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                    "Head",
                                                    "Tail"}, new object[] {
                                                    "PidTagAccess",
                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                "Head",
                                                                "Tail"}, new object[] {
                                                                "PidTagFolderId",
                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                            "Head",
                                                                            "Tail"}, new object[] {
                                                                            "PidTagComment",
                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                        "Head",
                                                                                        "Tail"}, new object[] {
                                                                                        "PidTagDisplayName",
                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})}), out temp493);
                        this.Manager.Checkpoint("MS-OXCFXICS_R431");
                        this.Manager.Comment("reaching state \'S289\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp493, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S289");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp494, "return of FastTransferSourceCopyProperties, state S289");
                        this.Manager.Comment("reaching state \'S333\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp495;
                        this.Manager.Comment("executing step \'call Release(1,3)\'");
                        temp495 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                        this.Manager.Comment("reaching state \'S377\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp495, "return of Release, state S377");
                        this.Manager.Comment("reaching state \'S421\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp496;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp496 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S465\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp496, "return of Release, state S465");
                        this.Manager.Comment("reaching state \'S509\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp497;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp497 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S553\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp497, "return of Release, state S553");
                        this.Manager.Comment("reaching state \'S597\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp498;
                        this.Manager.Comment("executing step \'call Release(1,6)\'");
                        temp498 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                        this.Manager.Comment("reaching state \'S641\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp498, "return of Release, state S641");
                        this.Manager.Comment("reaching state \'S685\'");
                        goto label41;
                    }
                    throw new InvalidOperationException("never reached");
                label41:
;
                    goto label42;
                }
                throw new InvalidOperationException("never reached");
            label42:
;
                goto label43;
            }
            if ((temp501 == 1)) {
                this.Manager.Comment("reaching state \'S29\'");
                goto label43;
            }
            throw new InvalidOperationException("never reached");
        label43:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S184");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S218");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S218");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S184");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S219");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S219");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferInvalidParameter_TestSuite9CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        #endregion
    }
}