//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S01_SyncFastTransferCopyFolder_TestSuite : PtfTestClassBase {
        
        public S01_SyncFastTransferCopyFolder_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp26 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferCopyFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferCopyFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp26 == 0)) {
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S10\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S12");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S12");
                this.Manager.Comment("reaching state \'S14\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S16");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S16");
                this.Manager.Comment("reaching state \'S18\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S20");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S20");
                this.Manager.Comment("reaching state \'S22\'");
                int temp9;
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp9, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderIdIndex of CreateFolder, state S24");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of CreateFolder, state S24");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateFolder, state S24");
                this.Manager.Comment("reaching state \'S26\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "messageHandleIndex of CreateMessage, state S28");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of CreateMessage, state S28");
                this.Manager.Comment("reaching state \'S30\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp14, "messageIdIndex of SaveChangesMessage, state S32");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S32");
                this.Manager.Comment("reaching state \'S34\'");
                int temp16;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp17;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,None,RecoverMode,out _)\'");
                temp17 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags)(0)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp16);
                this.Manager.Checkpoint("MS-OXCFXICS_R502");
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp16, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S36");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp17, "return of FastTransferSourceCopyFolder, state S36");
                this.Manager.Comment("reaching state \'S38\'");
                int temp18;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp19;
                bool temp20;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp21;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                temp21 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp18, out temp19, out temp20);
                this.Manager.Checkpoint("MS-OXCFXICS_R511");
                this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                        "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                        "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                        "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                        "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                        "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                        "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                        "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                        "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                        "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                        "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                        "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                        "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                        "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                        "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                        "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                        "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                        "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                        "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                        "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                        "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                        "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                        "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                        ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                        "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                        "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                        "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                        "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                        "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                        "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                        "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                        "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                        "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                        "alse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(" +
                        "AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False" +
                        ",IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=" +
                        "False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                        "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                        "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                        "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                        "lse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarning" +
                        "Out=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPer" +
                        "missionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachment" +
                        "PrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),String" +
                        "PropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperti" +
                        "esInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)," +
                        "out False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp18, "transferBufferIndex of FastTransferSourceGetBuffer, state S40");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp19, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S40");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp20, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S40");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp21, "return of FastTransferSourceGetBuffer, state S40");
                this.Manager.Comment("reaching state \'S42\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp22 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp22, "return of Release, state S44");
                this.Manager.Comment("reaching state \'S46\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp23 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of Release, state S48");
                this.Manager.Comment("reaching state \'S50\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp24 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S52\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of Release, state S52");
                this.Manager.Comment("reaching state \'S54\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                this.Manager.Comment("executing step \'call Release(1,6)\'");
                temp25 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of Release, state S56");
                this.Manager.Comment("reaching state \'S58\'");
                goto label0;
            }
            if ((temp26 == 1)) {
                this.Manager.Comment("reaching state \'S5\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp27;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp27);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp27);
            this.Manager.Comment("reaching state \'S3\'");
            int temp53 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferCopyFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferCopyFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp53 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S9\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S11\'");
                int temp28;
                int temp29;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp30;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp30 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp28, out temp29);
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp28, "logonHandleIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp29, "inboxFolderIdIndex of Logon, state S13");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp30, "return of Logon, state S13");
                this.Manager.Comment("reaching state \'S15\'");
                int temp31;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp32 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp31);
                this.Manager.Comment("reaching state \'S17\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp31, "folderHandleIndex of OpenFolder, state S17");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of OpenFolder, state S17");
                this.Manager.Comment("reaching state \'S19\'");
                int temp33;
                int temp34;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp35 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp33, out temp34);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S21\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp33, "folderIdIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp34, "folderHandleIndex of CreateFolder, state S21");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of CreateFolder, state S21");
                this.Manager.Comment("reaching state \'S23\'");
                int temp36;
                int temp37;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp38;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp38 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp36, out temp37);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp36, "folderIdIndex of CreateFolder, state S25");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp37, "folderHandleIndex of CreateFolder, state S25");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp38, "return of CreateFolder, state S25");
                this.Manager.Comment("reaching state \'S27\'");
                int temp39;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp40;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp40 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp39);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S29\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp39, "messageHandleIndex of CreateMessage, state S29");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp40, "return of CreateMessage, state S29");
                this.Manager.Comment("reaching state \'S31\'");
                int temp41;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp42 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp41);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S33\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp41, "messageIdIndex of SaveChangesMessage, state S33");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of SaveChangesMessage, state S33");
                this.Manager.Comment("reaching state \'S35\'");
                int temp43;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,CopySubfolders,RecoverMode," +
                        "out _)\'");
                temp44 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp43);
                this.Manager.Checkpoint("MS-OXCFXICS_R502");
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp43, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S37");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of FastTransferSourceCopyFolder, state S37");
                this.Manager.Comment("reaching state \'S39\'");
                int temp45;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp46;
                bool temp47;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp48;
                this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                temp48 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp45, out temp46, out temp47);
                this.Manager.Checkpoint("MS-OXCFXICS_R511");
                this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                this.Manager.Checkpoint("MS-OXCFXICS_R532");
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                        "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                        "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                        "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                        "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                        "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                        "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                        "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                        "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                        "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                        "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                        "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                        "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                        "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                        "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                        "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                        "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                        "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                        "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                        "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                        "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                        "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                        "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                        "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                        ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                        "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                        "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                        "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                        "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                        "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                        "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                        "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                        "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                        "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                        "alse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(A" +
                        "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                        "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                        "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                        "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                        "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                        "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                        "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                        "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                        "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                        "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                        "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                        "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                        "ut False]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp45, "transferBufferIndex of FastTransferSourceGetBuffer, state S41");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                "StreamType",
                                "AbstractHierarchySync",
                                "AbstractContentsSync",
                                "AbstractFolderContent",
                                "AbstractTopFolder",
                                "AbstractState",
                                "AbstractMessageContent",
                                "AbstractMessageList",
                                "IsSameReadstateChangeNumber"}, new object[] {
                                Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                            "FolderchangeInfo",
                                            "FolderCount",
                                            "FinalICSState",
                                            "IsParentFolderBeforeChild",
                                            "AbstractDeletion"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                        "IsPidTagFolderIdExist",
                                                        "IsPidTagParentFolderIdExist",
                                                        "IsPidTagSourceKeyValueZero",
                                                        "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false}),
                                            0,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                            "IsprogessTotalPresent",
                                            "MessageInfo",
                                            "AbstractDeletion",
                                            "IsReadStateChangesExist",
                                            "FinalICSState",
                                            "IsSortByMessageDeliveryTime",
                                            "IsSortByLastModificationTime"}, new object[] {
                                            false,
                                            ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                        "IsDeletionPresent",
                                                        "IdSetDeleted",
                                                        "IsPidTagIdsetNoLongerInScopeExist",
                                                        "IsPidTagIdsetExpiredExist"}, new object[] {
                                                        false,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false}),
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                        "AbstractICSStateIndex",
                                                        "IdSetGiven",
                                                        "IsNewCnsetReadPropertyChangeNumber",
                                                        "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                        "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                        0,
                                                        ((Microsoft.Modeling.Set<int>)(null)),
                                                        false,
                                                        false,
                                                        false}),
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "IsNoPermissionObjNotOut",
                                            "IsPidTagNewFXFolderOut",
                                            "IsFolderContentNotOut",
                                            "IsFolderPropertiesNotOut",
                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                            "AbsFolderMessage"}, new object[] {
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                        "MessageList"}, new object[] {
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                    "IsPidTagEcWarningOut",
                                                                    "AbsMessage"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                "AbsMessageContent"}, new object[] {
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                            "IsNoPermissionMessageNotOut",
                                                                                            "AbsMessageChildren",
                                                                                            "StringPropertiesInUnicode",
                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                            "StringPropertiesInOtherCodePage",
                                                                                            "IsRTFFormat"}, new object[] {
                                                                                            false,
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                        false,
                                                                                                        false}),
                                                                                            false,
                                                                                            false,
                                                                                            false,
                                                                                            false})})})})}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                            "AbsFolderContent",
                                            "SubFolderInScope"}, new object[] {
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                        "IsPidTagEcWarningOut",
                                                        "IsNoPermissionObjNotOut",
                                                        "IsPidTagNewFXFolderOut",
                                                        "IsFolderContentNotOut",
                                                        "IsFolderPropertiesNotOut",
                                                        "IsSubFolderPrecededByPidTagFXDelProp",
                                                        "AbsFolderMessage"}, new object[] {
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                    "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                    "MessageList"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                "IsPidTagEcWarningOut",
                                                                                "AbsMessage"}, new object[] {
                                                                                false,
                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                            "AbsMessageContent"}, new object[] {
                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                        "IsNoPermissionMessageNotOut",
                                                                                                        "AbsMessageChildren",
                                                                                                        "StringPropertiesInUnicode",
                                                                                                        "StringPropertiesInUnicodeCodePage",
                                                                                                        "StringPropertiesInOtherCodePage",
                                                                                                        "IsRTFFormat"}, new object[] {
                                                                                                        false,
                                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                    false,
                                                                                                                    false}),
                                                                                                        false,
                                                                                                        false,
                                                                                                        false,
                                                                                                        false})})})})}),
                                            true}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                            "AbstractICSStateIndex",
                                            "IdSetGiven",
                                            "IsNewCnsetReadPropertyChangeNumber",
                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                            0,
                                            ((Microsoft.Modeling.Set<int>)(null)),
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                            "IsNoPermissionMessageNotOut",
                                            "AbsMessageChildren",
                                            "StringPropertiesInUnicode",
                                            "StringPropertiesInUnicodeCodePage",
                                            "StringPropertiesInOtherCodePage",
                                            "IsRTFFormat"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                        false,
                                                        false}),
                                            false,
                                            false,
                                            false,
                                            false}),
                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                            "IsPidTagEcWarningOut",
                                            "AbsMessage"}, new object[] {
                                            false,
                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                        "AbsMessageContent"}, new object[] {
                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                    "IsNoPermissionMessageNotOut",
                                                                    "AbsMessageChildren",
                                                                    "StringPropertiesInUnicode",
                                                                    "StringPropertiesInUnicodeCodePage",
                                                                    "StringPropertiesInOtherCodePage",
                                                                    "IsRTFFormat"}, new object[] {
                                                                    false,
                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                false,
                                                                                false}),
                                                                    false,
                                                                    false,
                                                                    false,
                                                                    false})})}),
                                false}), temp46, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S41");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp47, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S41");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp48, "return of FastTransferSourceGetBuffer, state S41");
                this.Manager.Comment("reaching state \'S43\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp49;
                this.Manager.Comment("executing step \'call Release(1,3)\'");
                temp49 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                this.Manager.Comment("reaching state \'S45\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp49, "return of Release, state S45");
                this.Manager.Comment("reaching state \'S47\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                this.Manager.Comment("executing step \'call Release(1,4)\'");
                temp50 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                this.Manager.Comment("reaching state \'S49\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of Release, state S49");
                this.Manager.Comment("reaching state \'S51\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp51;
                this.Manager.Comment("executing step \'call Release(1,5)\'");
                temp51 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                this.Manager.Comment("reaching state \'S53\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp51, "return of Release, state S53");
                this.Manager.Comment("reaching state \'S55\'");
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                this.Manager.Comment("executing step \'call Release(1,6)\'");
                temp52 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                this.Manager.Comment("reaching state \'S57\'");
                this.Manager.Comment("checking step \'return Release/Success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of Release, state S57");
                this.Manager.Comment("reaching state \'S59\'");
                goto label1;
            }
            if ((temp53 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferCopyFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
    }
}