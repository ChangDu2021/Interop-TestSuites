//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S01_SyncFastTransferMoveFlag_TestSuite : PtfTestClassBase {
        
        public S01_SyncFastTransferMoveFlag_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp37 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferMoveFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferMoveFlag_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp37 == 0)) {
                this.Manager.Comment("reaching state \'S2\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S5\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S6");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S6");
                this.Manager.Comment("reaching state \'S7\'");
                bool temp4;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3793001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3793001, out temp4);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp4);
                this.Manager.Comment("reaching state \'S8\'");
                int temp36 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferMoveFlag_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferMoveFlag_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker1)));
                if ((temp36 == 0)) {
                    this.Manager.Comment("reaching state \'S10\'");
                    goto label1;
                }
                if ((temp36 == 1)) {
                    this.Manager.Comment("reaching state \'S9\'");
                    int temp5;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp6;
                    this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                    temp6 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp5);
                    this.Manager.Comment("reaching state \'S11\'");
                    this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp5, "folderHandleIndex of OpenFolder, state S11");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp6, "return of OpenFolder, state S11");
                    this.Manager.Comment("reaching state \'S12\'");
                    int temp7;
                    int temp8;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp9;
                    this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                    temp9 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp7, out temp8);
                    this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                    this.Manager.Comment("reaching state \'S13\'");
                    this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp7, "folderIdIndex of CreateFolder, state S13");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp8, "folderHandleIndex of CreateFolder, state S13");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp9, "return of CreateFolder, state S13");
                    this.Manager.Comment("reaching state \'S14\'");
                    int temp10;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,None,Unicode,out _)\'");
                    temp11 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), out temp10);
                    this.Manager.Checkpoint("MS-OXCFXICS_R502");
                    this.Manager.Comment("reaching state \'S15\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 4]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S15");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of FastTransferSourceCopyFolder, state S15");
                    this.Manager.Comment("reaching state \'S16\'");
                    int temp12;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp13;
                    bool temp14;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,4,Normal,out _,out _,out _)\'");
                    temp15 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 4, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp12, out temp13, out temp14);
                    this.Manager.Checkpoint("MS-OXCFXICS_R511");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S17\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                            "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                            "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                            "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                            "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                            "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                            "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                            "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                            "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                            "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                            "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                            "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                            "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                            "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                            "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                            "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                            "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                            "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                            ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                            "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                            "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                            "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                            "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                            "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                            "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(" +
                            "AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False" +
                            ",IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=" +
                            "False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                            "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                            "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                            "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                            "lse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarning" +
                            "Out=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPer" +
                            "missionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachment" +
                            "PrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),String" +
                            "PropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperti" +
                            "esInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)," +
                            "out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp12, "transferBufferIndex of FastTransferSourceGetBuffer, state S17");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp13, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S17");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp14, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S17");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of FastTransferSourceGetBuffer, state S17");
                    this.Manager.Comment("reaching state \'S18\'");
                    bool temp16;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(526001,out _)\'");
                    this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(526001, out temp16);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp16);
                    this.Manager.Comment("reaching state \'S19\'");
                    int temp35 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferMoveFlag_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S01_SyncFastTransferMoveFlag_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker3)));
                    if ((temp35 == 0)) {
                        this.Manager.Comment("reaching state \'S20\'");
                        int temp17;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,Move,Unicode,out _)\'");
                        temp18 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), out temp17);
                        this.Manager.Checkpoint("MS-OXCFXICS_R526001");
                        this.Manager.Comment("reaching state \'S22\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out -1]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp17, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S22");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp18, "return of FastTransferSourceCopyFolder, state S22");
                        this.Manager.Comment("reaching state \'S24\'");
                        int temp19;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp20;
                        bool temp21;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                        temp22 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp19, out temp20, out temp21);
                        this.Manager.Comment("reaching state \'S26\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                                "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                                "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                                "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                                "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                                "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                                "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                                "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                                "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                                "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                                "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                                "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                                "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                                "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                                "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                                "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                                "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                                "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                                "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                                "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                                "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                                "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                                "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                                "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                                "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                                "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                                "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                                "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                                "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                                "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                                "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                                "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                                "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                                "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                                "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                                "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                                "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                                "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                                "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                                "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                                "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                                "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                                "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                                "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                                "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                                "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                                "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                                "se),out False]:InvalidParameter\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp19, "transferBufferIndex of FastTransferSourceGetBuffer, state S26");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp20, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S26");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp21, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S26");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp22, "return of FastTransferSourceGetBuffer, state S26");
                        this.Manager.Comment("reaching state \'S28\'");
                        bool temp23;
                        this.Manager.Comment("executing step \'call AreEqual(FastTransferSourceCopyProperties,1,-1)\'");
                        temp23 = this.IMS_OXCFXICSAdapterInstance.AreEqual(((Microsoft.Protocols.TestSuites.MS_OXCFXICS.EnumFastTransferOperation)(1)), 1, -1);
                        this.Manager.Comment("reaching state \'S30\'");
                        this.Manager.Comment("checking step \'return AreEqual/False\'");
                        try {
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp23, "return of AreEqual, state S30");
                        }
                        catch (TransactionFailedException ) {
                            this.Manager.Comment("This step would have covered MS-OXCFXICS_R3793001");
                            throw;
                        }
                        this.Manager.Checkpoint("MS-OXCFXICS_R3793001");
                        this.Manager.Comment("reaching state \'S32\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp24 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S34\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of Release, state S34");
                        this.Manager.Comment("reaching state \'S36\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                        this.Manager.Comment("executing step \'call Release(1,-1)\'");
                        temp25 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                        this.Manager.Comment("reaching state \'S38\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of Release, state S38");
                        this.Manager.Comment("reaching state \'S40\'");
                        goto label0;
                    }
                    if ((temp35 == 1)) {
                        this.Manager.Comment("reaching state \'S21\'");
                        int temp26;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp27;
                        this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,Move,Unicode,out _)\'");
                        temp27 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), out temp26);
                        this.Manager.Checkpoint("MS-OXCFXICS_R502");
                        this.Manager.Comment("reaching state \'S23\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 5]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp26, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S23");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp27, "return of FastTransferSourceCopyFolder, state S23");
                        this.Manager.Comment("reaching state \'S25\'");
                        int temp28;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp29;
                        bool temp30;
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp31;
                        this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,5,Normal,out _,out _,out _)\'");
                        temp31 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 5, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp28, out temp29, out temp30);
                        this.Manager.Checkpoint("MS-OXCFXICS_R511");
                        this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                        this.Manager.Checkpoint("MS-OXCFXICS_R532");
                        this.Manager.Comment("reaching state \'S27\'");
                        this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 2,out AbstractFastTransfer" +
                                "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                                "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                                "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                                "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                                "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                                "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                                "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                                "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                                "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                                "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                                "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                                "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                                "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                                "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                                "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                                "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                                "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                                "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                                "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                                "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                                "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                                "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                                "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                                ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                                "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                                "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                                "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                                "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                                "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                                "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                                "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                                "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                                "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                                "alse,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractState(" +
                                "AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False" +
                                ",IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=" +
                                "False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut" +
                                "=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDe" +
                                "lProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=" +
                                "False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fa" +
                                "lse,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarning" +
                                "Out=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPer" +
                                "missionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachment" +
                                "PrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),String" +
                                "PropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProperti" +
                                "esInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False)," +
                                "out False]:Success\'");
                        TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp28, "transferBufferIndex of FastTransferSourceGetBuffer, state S27");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                        "StreamType",
                                        "AbstractHierarchySync",
                                        "AbstractContentsSync",
                                        "AbstractFolderContent",
                                        "AbstractTopFolder",
                                        "AbstractState",
                                        "AbstractMessageContent",
                                        "AbstractMessageList",
                                        "IsSameReadstateChangeNumber"}, new object[] {
                                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                    "FolderchangeInfo",
                                                    "FolderCount",
                                                    "FinalICSState",
                                                    "IsParentFolderBeforeChild",
                                                    "AbstractDeletion"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                                "IsPidTagFolderIdExist",
                                                                "IsPidTagParentFolderIdExist",
                                                                "IsPidTagSourceKeyValueZero",
                                                                "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false}),
                                                    0,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                    "IsprogessTotalPresent",
                                                    "MessageInfo",
                                                    "AbstractDeletion",
                                                    "IsReadStateChangesExist",
                                                    "FinalICSState",
                                                    "IsSortByMessageDeliveryTime",
                                                    "IsSortByLastModificationTime"}, new object[] {
                                                    false,
                                                    ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                                "IsDeletionPresent",
                                                                "IdSetDeleted",
                                                                "IsPidTagIdsetNoLongerInScopeExist",
                                                                "IsPidTagIdsetExpiredExist"}, new object[] {
                                                                false,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false}),
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                                "AbstractICSStateIndex",
                                                                "IdSetGiven",
                                                                "IsNewCnsetReadPropertyChangeNumber",
                                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                                0,
                                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                                false,
                                                                false,
                                                                false}),
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "IsNoPermissionObjNotOut",
                                                    "IsPidTagNewFXFolderOut",
                                                    "IsFolderContentNotOut",
                                                    "IsFolderPropertiesNotOut",
                                                    "IsSubFolderPrecededByPidTagFXDelProp",
                                                    "AbsFolderMessage"}, new object[] {
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                "MessageList"}, new object[] {
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                            "IsPidTagEcWarningOut",
                                                                            "AbsMessage"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                        "AbsMessageContent"}, new object[] {
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                    "IsNoPermissionMessageNotOut",
                                                                                                    "AbsMessageChildren",
                                                                                                    "StringPropertiesInUnicode",
                                                                                                    "StringPropertiesInUnicodeCodePage",
                                                                                                    "StringPropertiesInOtherCodePage",
                                                                                                    "IsRTFFormat"}, new object[] {
                                                                                                    false,
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                false,
                                                                                                                false}),
                                                                                                    false,
                                                                                                    false,
                                                                                                    false,
                                                                                                    false})})})})}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                    "AbsFolderContent",
                                                    "SubFolderInScope"}, new object[] {
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                                "IsPidTagEcWarningOut",
                                                                "IsNoPermissionObjNotOut",
                                                                "IsPidTagNewFXFolderOut",
                                                                "IsFolderContentNotOut",
                                                                "IsFolderPropertiesNotOut",
                                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                                "AbsFolderMessage"}, new object[] {
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                            "MessageList"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                        "IsPidTagEcWarningOut",
                                                                                        "AbsMessage"}, new object[] {
                                                                                        false,
                                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                    "AbsMessageContent"}, new object[] {
                                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                                "AbsMessageChildren",
                                                                                                                "StringPropertiesInUnicode",
                                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                                false,
                                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                            false,
                                                                                                                            false}),
                                                                                                                false,
                                                                                                                false,
                                                                                                                false,
                                                                                                                false})})})})}),
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                    "AbstractICSStateIndex",
                                                    "IdSetGiven",
                                                    "IsNewCnsetReadPropertyChangeNumber",
                                                    "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                    "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                    0,
                                                    ((Microsoft.Modeling.Set<int>)(null)),
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                    "IsNoPermissionMessageNotOut",
                                                    "AbsMessageChildren",
                                                    "StringPropertiesInUnicode",
                                                    "StringPropertiesInUnicodeCodePage",
                                                    "StringPropertiesInOtherCodePage",
                                                    "IsRTFFormat"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                "AttachmentPrecededByPidTagFXDelProp",
                                                                "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                false,
                                                                false}),
                                                    false,
                                                    false,
                                                    false,
                                                    false}),
                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                    "IsPidTagEcWarningOut",
                                                    "AbsMessage"}, new object[] {
                                                    false,
                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                "AbsMessageContent"}, new object[] {
                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                            "IsNoPermissionMessageNotOut",
                                                                            "AbsMessageChildren",
                                                                            "StringPropertiesInUnicode",
                                                                            "StringPropertiesInUnicodeCodePage",
                                                                            "StringPropertiesInOtherCodePage",
                                                                            "IsRTFFormat"}, new object[] {
                                                                            false,
                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                        false,
                                                                                        false}),
                                                                            false,
                                                                            false,
                                                                            false,
                                                                            false})})}),
                                        false}), temp29, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S27");
                        TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp30, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S27");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp31, "return of FastTransferSourceGetBuffer, state S27");
                        this.Manager.Comment("reaching state \'S29\'");
                        bool temp32;
                        this.Manager.Comment("executing step \'call AreEqual(FastTransferSourceCopyProperties,1,2)\'");
                        temp32 = this.IMS_OXCFXICSAdapterInstance.AreEqual(((Microsoft.Protocols.TestSuites.MS_OXCFXICS.EnumFastTransferOperation)(1)), 1, 2);
                        this.Manager.Comment("reaching state \'S31\'");
                        this.Manager.Comment("checking step \'return AreEqual/True\'");
                        try {
                            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp32, "return of AreEqual, state S31");
                        }
                        catch (TransactionFailedException ) {
                            this.Manager.Comment("This step would have covered MS-OXCFXICS_R3793001");
                            throw;
                        }
                        this.Manager.Checkpoint("MS-OXCFXICS_R3793001");
                        this.Manager.Comment("reaching state \'S33\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                        this.Manager.Comment("executing step \'call Release(1,4)\'");
                        temp33 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                        this.Manager.Comment("reaching state \'S35\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of Release, state S35");
                        this.Manager.Comment("reaching state \'S37\'");
                        Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                        this.Manager.Comment("executing step \'call Release(1,5)\'");
                        temp34 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                        this.Manager.Comment("reaching state \'S39\'");
                        this.Manager.Comment("checking step \'return Release/Success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of Release, state S39");
                        this.Manager.Comment("reaching state \'S41\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label1;
                }
                throw new InvalidOperationException("never reached");
            label1:
;
                goto label2;
            }
            if ((temp37 == 1)) {
                this.Manager.Comment("reaching state \'S3\'");
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S8");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S8");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S19");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S19");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferMoveFlag_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
    }
}