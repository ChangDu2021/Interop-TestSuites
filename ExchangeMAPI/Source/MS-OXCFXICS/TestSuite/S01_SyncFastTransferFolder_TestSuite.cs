//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCFXICS {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S01_SyncFastTransferFolder_TestSuite : PtfTestClassBase {
        
        public S01_SyncFastTransferFolder_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter IMS_OXCFXICSAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCFXICSAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCFXICS.IMS_OXCFXICSAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp38 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp38 == 0)) {
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S45\'");
                int temp1;
                int temp2;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp3;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp3 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp1, out temp2);
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp1, "logonHandleIndex of Logon, state S54");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp2, "inboxFolderIdIndex of Logon, state S54");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp3, "return of Logon, state S54");
                this.Manager.Comment("reaching state \'S63\'");
                int temp4;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp5;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp5 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp4);
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp4, "folderHandleIndex of OpenFolder, state S72");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp5, "return of OpenFolder, state S72");
                this.Manager.Comment("reaching state \'S81\'");
                int temp6;
                int temp7;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp8;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp8 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp6, out temp7);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S90\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp6, "folderIdIndex of CreateFolder, state S90");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp7, "folderHandleIndex of CreateFolder, state S90");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp8, "return of CreateFolder, state S90");
                this.Manager.Comment("reaching state \'S99\'");
                int temp9;
                int temp10;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp11;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp11 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp9, out temp10);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S108\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp9, "folderIdIndex of CreateFolder, state S108");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp10, "folderHandleIndex of CreateFolder, state S108");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp11, "return of CreateFolder, state S108");
                this.Manager.Comment("reaching state \'S117\'");
                int temp12;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp13;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp13 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp12);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S126\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp12, "messageHandleIndex of CreateMessage, state S126");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp13, "return of CreateMessage, state S126");
                this.Manager.Comment("reaching state \'S135\'");
                int temp14;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp15;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp15 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp14);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S144\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp14, "messageIdIndex of SaveChangesMessage, state S144");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp15, "return of SaveChangesMessage, state S144");
                this.Manager.Comment("reaching state \'S153\'");
                bool temp16;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(526001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(526001, out temp16);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp16);
                this.Manager.Comment("reaching state \'S162\'");
                int temp37 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckRequirementEnabledChecker1)));
                if ((temp37 == 0)) {
                    this.Manager.Comment("reaching state \'S171\'");
                    int temp17;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp18;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,Move,RecoverMode,out _)\'");
                    temp18 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp17);
                    this.Manager.Checkpoint("MS-OXCFXICS_R526001");
                    this.Manager.Comment("reaching state \'S189\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out -1]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp17, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S189");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp18, "return of FastTransferSourceCopyFolder, state S189");
                    this.Manager.Comment("reaching state \'S207\'");
                    int temp19;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp20;
                    bool temp21;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp22;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp22 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp19, out temp20, out temp21);
                    this.Manager.Comment("reaching state \'S225\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp19, "transferBufferIndex of FastTransferSourceGetBuffer, state S225");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp20, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S225");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp21, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S225");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp22, "return of FastTransferSourceGetBuffer, state S225");
                    this.Manager.Comment("reaching state \'S243\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp23;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp23 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S261\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp23, "return of Release, state S261");
                    this.Manager.Comment("reaching state \'S279\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp24;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp24 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S297\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp24, "return of Release, state S297");
                    this.Manager.Comment("reaching state \'S315\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp25;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp25 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S333\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp25, "return of Release, state S333");
                    this.Manager.Comment("reaching state \'S351\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp26;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp26 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S369\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp26, "return of Release, state S369");
                    this.Manager.Comment("reaching state \'S387\'");
                    goto label0;
                }
                if ((temp37 == 1)) {
                    this.Manager.Comment("reaching state \'S172\'");
                    int temp27;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp28;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,Move,RecoverMode,out _)\'");
                    temp28 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, out temp27);
                    this.Manager.Checkpoint("MS-OXCFXICS_R502");
                    this.Manager.Comment("reaching state \'S190\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp27, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S190");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp28, "return of FastTransferSourceCopyFolder, state S190");
                    this.Manager.Comment("reaching state \'S208\'");
                    int temp29;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp30;
                    bool temp31;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp32;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp32 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp29, out temp30, out temp31);
                    this.Manager.Checkpoint("MS-OXCFXICS_R511");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3481");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S226\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                            "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                            "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                            "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                            "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                            "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                            "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                            "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                            "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                            "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                            "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                            "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                            "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                            "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                            "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                            "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                            "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                            "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                            ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                            "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                            "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                            "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                            "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                            "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                            "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(A" +
                            "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                            "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                            "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                            "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                            "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                            "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                            "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                            "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                            "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                            "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                            "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                            "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                            "ut False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp29, "transferBufferIndex of FastTransferSourceGetBuffer, state S226");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp30, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S226");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp31, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S226");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp32, "return of FastTransferSourceGetBuffer, state S226");
                    this.Manager.Comment("reaching state \'S244\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp33;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp33 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S262\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp33, "return of Release, state S262");
                    this.Manager.Comment("reaching state \'S280\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp34;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp34 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S298\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp34, "return of Release, state S298");
                    this.Manager.Comment("reaching state \'S316\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp35;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp35 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S334\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp35, "return of Release, state S334");
                    this.Manager.Comment("reaching state \'S352\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp36;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp36 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S370\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp36, "return of Release, state S370");
                    this.Manager.Comment("reaching state \'S388\'");
                    goto label0;
                }
                throw new InvalidOperationException("never reached");
            label0:
;
                goto label1;
            }
            if ((temp38 == 1)) {
                this.Manager.Comment("reaching state \'S19\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S162");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S162");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1");
            this.Manager.Comment("reaching state \'S10\'");
            bool temp39;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp39);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp39);
            this.Manager.Comment("reaching state \'S11\'");
            int temp77 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp77 == 0)) {
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S41\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S50\'");
                int temp40;
                int temp41;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp42;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp42 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp40, out temp41);
                this.Manager.Comment("reaching state \'S59\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp40, "logonHandleIndex of Logon, state S59");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp41, "inboxFolderIdIndex of Logon, state S59");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp42, "return of Logon, state S59");
                this.Manager.Comment("reaching state \'S68\'");
                int temp43;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp44;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp44 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp43);
                this.Manager.Comment("reaching state \'S77\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp43, "folderHandleIndex of OpenFolder, state S77");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp44, "return of OpenFolder, state S77");
                this.Manager.Comment("reaching state \'S86\'");
                int temp45;
                int temp46;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp47;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp47 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp45, out temp46);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S95\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp45, "folderIdIndex of CreateFolder, state S95");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp46, "folderHandleIndex of CreateFolder, state S95");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp47, "return of CreateFolder, state S95");
                this.Manager.Comment("reaching state \'S104\'");
                int temp48;
                int temp49;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp50;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp50 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp48, out temp49);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S113\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp48, "folderIdIndex of CreateFolder, state S113");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp49, "folderHandleIndex of CreateFolder, state S113");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp50, "return of CreateFolder, state S113");
                this.Manager.Comment("reaching state \'S122\'");
                int temp51;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp52;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp52 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp51);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S131\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp51, "messageHandleIndex of CreateMessage, state S131");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp52, "return of CreateMessage, state S131");
                this.Manager.Comment("reaching state \'S140\'");
                int temp53;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp54;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp54 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp53);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S149\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp53, "messageIdIndex of SaveChangesMessage, state S149");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp54, "return of SaveChangesMessage, state S149");
                this.Manager.Comment("reaching state \'S158\'");
                bool temp55;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp55);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp55);
                this.Manager.Comment("reaching state \'S167\'");
                int temp76 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckRequirementEnabledChecker1)));
                if ((temp76 == 0)) {
                    this.Manager.Comment("reaching state \'S181\'");
                    int temp56;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp57;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Move" +
                            ",Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"P" +
                            "idTagContainerHierarchy\",\"PidTagFolderAssociatedContents\",\"PidTagContainerConten" +
                            "ts\"],out _)\'");
                    temp57 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagFolderId",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagComment",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagDisplayName",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagContainerHierarchy",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagFolderAssociatedContents",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagContainerContents",
                                                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp56);
                    this.Manager.Checkpoint("MS-OXCFXICS_R431");
                    this.Manager.Comment("reaching state \'S199\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp56, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S199");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp57, "return of FastTransferSourceCopyProperties, state S199");
                    this.Manager.Comment("reaching state \'S217\'");
                    int temp58;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp59;
                    bool temp60;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp61;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp61 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp58, out temp59, out temp60);
                    this.Manager.Checkpoint("MS-OXCFXICS_R455");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3325");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S235\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp58, "transferBufferIndex of FastTransferSourceGetBuffer, state S235");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp59, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S235");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp60, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S235");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp61, "return of FastTransferSourceGetBuffer, state S235");
                    this.Manager.Comment("reaching state \'S253\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp62;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp62 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S271\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp62, "return of Release, state S271");
                    this.Manager.Comment("reaching state \'S289\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp63;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp63 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S307\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp63, "return of Release, state S307");
                    this.Manager.Comment("reaching state \'S325\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp64;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp64 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S343\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp64, "return of Release, state S343");
                    this.Manager.Comment("reaching state \'S361\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp65;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp65 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S379\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp65, "return of Release, state S379");
                    this.Manager.Comment("reaching state \'S397\'");
                    goto label2;
                }
                if ((temp76 == 1)) {
                    this.Manager.Comment("reaching state \'S182\'");
                    int temp66;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp67;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Move" +
                            ",Unicode,[\"PidTagAccess\",\"PidTagFolderId\",\"PidTagComment\",\"PidTagDisplayName\",\"P" +
                            "idTagContainerHierarchy\",\"PidTagFolderAssociatedContents\",\"PidTagContainerConten" +
                            "ts\"],out _)\'");
                    temp67 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagFolderId",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagComment",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagDisplayName",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagContainerHierarchy",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagFolderAssociatedContents",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagContainerContents",
                                                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp66);
                    this.Manager.Comment("reaching state \'S200\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp66, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S200");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp67, "return of FastTransferSourceCopyProperties, state S200");
                    this.Manager.Comment("reaching state \'S218\'");
                    int temp68;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp69;
                    bool temp70;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp71;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp71 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp68, out temp69, out temp70);
                    this.Manager.Comment("reaching state \'S236\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp68, "transferBufferIndex of FastTransferSourceGetBuffer, state S236");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp69, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S236");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp70, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S236");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp71, "return of FastTransferSourceGetBuffer, state S236");
                    this.Manager.Comment("reaching state \'S254\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp72;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp72 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S272\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp72, "return of Release, state S272");
                    this.Manager.Comment("reaching state \'S290\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp73;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp73 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S308\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp73, "return of Release, state S308");
                    this.Manager.Comment("reaching state \'S326\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp74;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp74 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S344\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp74, "return of Release, state S344");
                    this.Manager.Comment("reaching state \'S362\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp75;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp75 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S380\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp75, "return of Release, state S380");
                    this.Manager.Comment("reaching state \'S398\'");
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp77 == 1)) {
                this.Manager.Comment("reaching state \'S29\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S167");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S167");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2");
            this.Manager.Comment("reaching state \'S12\'");
            bool temp78;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp78);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp78);
            this.Manager.Comment("reaching state \'S13\'");
            int temp116 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp116 == 0)) {
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S51\'");
                int temp79;
                int temp80;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp81;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp81 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp79, out temp80);
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp79, "logonHandleIndex of Logon, state S60");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp80, "inboxFolderIdIndex of Logon, state S60");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp81, "return of Logon, state S60");
                this.Manager.Comment("reaching state \'S69\'");
                int temp82;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp83;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp83 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp82);
                this.Manager.Comment("reaching state \'S78\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp82, "folderHandleIndex of OpenFolder, state S78");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp83, "return of OpenFolder, state S78");
                this.Manager.Comment("reaching state \'S87\'");
                int temp84;
                int temp85;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp86;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp86 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp84, out temp85);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S96\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp84, "folderIdIndex of CreateFolder, state S96");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp85, "folderHandleIndex of CreateFolder, state S96");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp86, "return of CreateFolder, state S96");
                this.Manager.Comment("reaching state \'S105\'");
                int temp87;
                int temp88;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp89;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp89 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp87, out temp88);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S114\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp87, "folderIdIndex of CreateFolder, state S114");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp88, "folderHandleIndex of CreateFolder, state S114");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp89, "return of CreateFolder, state S114");
                this.Manager.Comment("reaching state \'S123\'");
                int temp90;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp91;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp91 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp90);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S132\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp90, "messageHandleIndex of CreateMessage, state S132");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp91, "return of CreateMessage, state S132");
                this.Manager.Comment("reaching state \'S141\'");
                int temp92;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp93;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp93 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp92);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S150\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp92, "messageIdIndex of SaveChangesMessage, state S150");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp93, "return of SaveChangesMessage, state S150");
                this.Manager.Comment("reaching state \'S159\'");
                bool temp94;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp94);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp94);
                this.Manager.Comment("reaching state \'S168\'");
                int temp115 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckRequirementEnabledChecker1)));
                if ((temp115 == 0)) {
                    this.Manager.Comment("reaching state \'S183\'");
                    int temp95;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp96;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Recover" +
                            "Mode,[\"PidTagAccess\"],out _)\'");
                    temp96 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp95);
                    this.Manager.Checkpoint("MS-OXCFXICS_R361");
                    this.Manager.Comment("reaching state \'S201\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp95, "copyToHandleIndex of FastTransferSourceCopyTo, state S201");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp96, "return of FastTransferSourceCopyTo, state S201");
                    this.Manager.Comment("reaching state \'S219\'");
                    int temp97;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp98;
                    bool temp99;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp100;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp100 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp97, out temp98, out temp99);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3324");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S237\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp97, "transferBufferIndex of FastTransferSourceGetBuffer, state S237");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp98, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S237");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp99, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S237");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp100, "return of FastTransferSourceGetBuffer, state S237");
                    this.Manager.Comment("reaching state \'S255\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp101;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp101 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S273\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp101, "return of Release, state S273");
                    this.Manager.Comment("reaching state \'S291\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp102;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp102 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S309\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp102, "return of Release, state S309");
                    this.Manager.Comment("reaching state \'S327\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp103;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp103 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S345\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp103, "return of Release, state S345");
                    this.Manager.Comment("reaching state \'S363\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp104;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp104 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S381\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp104, "return of Release, state S381");
                    this.Manager.Comment("reaching state \'S399\'");
                    goto label4;
                }
                if ((temp115 == 1)) {
                    this.Manager.Comment("reaching state \'S184\'");
                    int temp105;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp106;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Recover" +
                            "Mode,[\"PidTagAccess\"],out _)\'");
                    temp106 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp105);
                    this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                    this.Manager.Comment("reaching state \'S202\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp105, "copyToHandleIndex of FastTransferSourceCopyTo, state S202");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp106, "return of FastTransferSourceCopyTo, state S202");
                    this.Manager.Comment("reaching state \'S220\'");
                    int temp107;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp108;
                    bool temp109;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp110;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp110 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp107, out temp108, out temp109);
                    this.Manager.Comment("reaching state \'S238\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp107, "transferBufferIndex of FastTransferSourceGetBuffer, state S238");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp108, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S238");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp109, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S238");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp110, "return of FastTransferSourceGetBuffer, state S238");
                    this.Manager.Comment("reaching state \'S256\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp111;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp111 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S274\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp111, "return of Release, state S274");
                    this.Manager.Comment("reaching state \'S292\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp112;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp112 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S310\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp112, "return of Release, state S310");
                    this.Manager.Comment("reaching state \'S328\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp113;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp113 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S346\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp113, "return of Release, state S346");
                    this.Manager.Comment("reaching state \'S364\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp114;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp114 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S382\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp114, "return of Release, state S382");
                    this.Manager.Comment("reaching state \'S400\'");
                    goto label4;
                }
                throw new InvalidOperationException("never reached");
            label4:
;
                goto label5;
            }
            if ((temp116 == 1)) {
                this.Manager.Comment("reaching state \'S31\'");
                goto label5;
            }
            throw new InvalidOperationException("never reached");
        label5:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S168");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S168");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3");
            this.Manager.Comment("reaching state \'S14\'");
            bool temp117;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp117);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp117);
            this.Manager.Comment("reaching state \'S15\'");
            int temp155 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp155 == 0)) {
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S43\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S52\'");
                int temp118;
                int temp119;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp120;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp120 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp118, out temp119);
                this.Manager.Comment("reaching state \'S61\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp118, "logonHandleIndex of Logon, state S61");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp119, "inboxFolderIdIndex of Logon, state S61");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp120, "return of Logon, state S61");
                this.Manager.Comment("reaching state \'S70\'");
                int temp121;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp122;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp122 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp121);
                this.Manager.Comment("reaching state \'S79\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp121, "folderHandleIndex of OpenFolder, state S79");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp122, "return of OpenFolder, state S79");
                this.Manager.Comment("reaching state \'S88\'");
                int temp123;
                int temp124;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp125;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp125 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp123, out temp124);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S97\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp123, "folderIdIndex of CreateFolder, state S97");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp124, "folderHandleIndex of CreateFolder, state S97");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp125, "return of CreateFolder, state S97");
                this.Manager.Comment("reaching state \'S106\'");
                int temp126;
                int temp127;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp128;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp128 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp126, out temp127);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S115\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp126, "folderIdIndex of CreateFolder, state S115");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp127, "folderHandleIndex of CreateFolder, state S115");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp128, "return of CreateFolder, state S115");
                this.Manager.Comment("reaching state \'S124\'");
                int temp129;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp130;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp130 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp129);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S133\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp129, "messageHandleIndex of CreateMessage, state S133");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp130, "return of CreateMessage, state S133");
                this.Manager.Comment("reaching state \'S142\'");
                int temp131;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp132;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp132 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp131);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S151\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp131, "messageIdIndex of SaveChangesMessage, state S151");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp132, "return of SaveChangesMessage, state S151");
                this.Manager.Comment("reaching state \'S160\'");
                bool temp133;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp133);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp133);
                this.Manager.Comment("reaching state \'S169\'");
                int temp154 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckRequirementEnabledChecker1)));
                if ((temp154 == 0)) {
                    this.Manager.Comment("reaching state \'S185\'");
                    int temp134;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp135;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Unicode" +
                            "|ForceUnicode,[\"PidTagAccess\"],out _)\'");
                    temp135 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp134);
                    this.Manager.Checkpoint("MS-OXCFXICS_R361");
                    this.Manager.Comment("reaching state \'S203\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp134, "copyToHandleIndex of FastTransferSourceCopyTo, state S203");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp135, "return of FastTransferSourceCopyTo, state S203");
                    this.Manager.Comment("reaching state \'S221\'");
                    int temp136;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp137;
                    bool temp138;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp139;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp139 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp136, out temp137, out temp138);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3324");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S239\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp136, "transferBufferIndex of FastTransferSourceGetBuffer, state S239");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp137, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S239");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp138, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S239");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp139, "return of FastTransferSourceGetBuffer, state S239");
                    this.Manager.Comment("reaching state \'S257\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp140;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp140 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S275\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp140, "return of Release, state S275");
                    this.Manager.Comment("reaching state \'S293\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp141;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp141 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S311\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp141, "return of Release, state S311");
                    this.Manager.Comment("reaching state \'S329\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp142;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp142 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S347\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp142, "return of Release, state S347");
                    this.Manager.Comment("reaching state \'S365\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp143;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp143 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S383\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp143, "return of Release, state S383");
                    this.Manager.Comment("reaching state \'S401\'");
                    goto label6;
                }
                if ((temp154 == 1)) {
                    this.Manager.Comment("reaching state \'S186\'");
                    int temp144;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp145;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Unicode" +
                            "|ForceUnicode,[\"PidTagAccess\"],out _)\'");
                    temp145 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp144);
                    this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                    this.Manager.Comment("reaching state \'S204\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp144, "copyToHandleIndex of FastTransferSourceCopyTo, state S204");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp145, "return of FastTransferSourceCopyTo, state S204");
                    this.Manager.Comment("reaching state \'S222\'");
                    int temp146;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp147;
                    bool temp148;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp149;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp149 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp146, out temp147, out temp148);
                    this.Manager.Comment("reaching state \'S240\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp146, "transferBufferIndex of FastTransferSourceGetBuffer, state S240");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp147, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S240");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp148, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S240");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp149, "return of FastTransferSourceGetBuffer, state S240");
                    this.Manager.Comment("reaching state \'S258\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp150;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp150 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S276\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp150, "return of Release, state S276");
                    this.Manager.Comment("reaching state \'S294\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp151;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp151 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S312\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp151, "return of Release, state S312");
                    this.Manager.Comment("reaching state \'S330\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp152;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp152 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S348\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp152, "return of Release, state S348");
                    this.Manager.Comment("reaching state \'S366\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp153;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp153 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S384\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp153, "return of Release, state S384");
                    this.Manager.Comment("reaching state \'S402\'");
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp155 == 1)) {
                this.Manager.Comment("reaching state \'S33\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S169");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S169");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        #endregion
        
        #region Test Starting in S16
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4");
            this.Manager.Comment("reaching state \'S16\'");
            bool temp156;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp156);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp156);
            this.Manager.Comment("reaching state \'S17\'");
            int temp194 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp194 == 0)) {
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S53\'");
                int temp157;
                int temp158;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp159;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp159 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp157, out temp158);
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp157, "logonHandleIndex of Logon, state S62");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp158, "inboxFolderIdIndex of Logon, state S62");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp159, "return of Logon, state S62");
                this.Manager.Comment("reaching state \'S71\'");
                int temp160;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp161;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp161 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp160);
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp160, "folderHandleIndex of OpenFolder, state S80");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp161, "return of OpenFolder, state S80");
                this.Manager.Comment("reaching state \'S89\'");
                int temp162;
                int temp163;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp164;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp164 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp162, out temp163);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S98\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp162, "folderIdIndex of CreateFolder, state S98");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp163, "folderHandleIndex of CreateFolder, state S98");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp164, "return of CreateFolder, state S98");
                this.Manager.Comment("reaching state \'S107\'");
                int temp165;
                int temp166;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp167;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp167 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp165, out temp166);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S116\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp165, "folderIdIndex of CreateFolder, state S116");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp166, "folderHandleIndex of CreateFolder, state S116");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp167, "return of CreateFolder, state S116");
                this.Manager.Comment("reaching state \'S125\'");
                int temp168;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp169;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp169 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp168);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S134\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp168, "messageHandleIndex of CreateMessage, state S134");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp169, "return of CreateMessage, state S134");
                this.Manager.Comment("reaching state \'S143\'");
                int temp170;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp171;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp171 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp170);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S152\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp170, "messageIdIndex of SaveChangesMessage, state S152");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp171, "return of SaveChangesMessage, state S152");
                this.Manager.Comment("reaching state \'S161\'");
                bool temp172;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3442001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3442001, out temp172);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp172);
                this.Manager.Comment("reaching state \'S170\'");
                int temp193 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckRequirementEnabledChecker1)));
                if ((temp193 == 0)) {
                    this.Manager.Comment("reaching state \'S187\'");
                    int temp173;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp174;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Unicode" +
                            ",[\"PidTagAccess\"],out _)\'");
                    temp174 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp173);
                    this.Manager.Checkpoint("MS-OXCFXICS_R361");
                    this.Manager.Comment("reaching state \'S205\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp173, "copyToHandleIndex of FastTransferSourceCopyTo, state S205");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp174, "return of FastTransferSourceCopyTo, state S205");
                    this.Manager.Comment("reaching state \'S223\'");
                    int temp175;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp176;
                    bool temp177;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp178;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp178 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp175, out temp176, out temp177);
                    this.Manager.Checkpoint("MS-OXCFXICS_R384");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3324");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S241\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp175, "transferBufferIndex of FastTransferSourceGetBuffer, state S241");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp176, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S241");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp177, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S241");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp178, "return of FastTransferSourceGetBuffer, state S241");
                    this.Manager.Comment("reaching state \'S259\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp179;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp179 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S277\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp179, "return of Release, state S277");
                    this.Manager.Comment("reaching state \'S295\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp180;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp180 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S313\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp180, "return of Release, state S313");
                    this.Manager.Comment("reaching state \'S331\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp181;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp181 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S349\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp181, "return of Release, state S349");
                    this.Manager.Comment("reaching state \'S367\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp182;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp182 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S385\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp182, "return of Release, state S385");
                    this.Manager.Comment("reaching state \'S403\'");
                    goto label8;
                }
                if ((temp193 == 1)) {
                    this.Manager.Comment("reaching state \'S188\'");
                    int temp183;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp184;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyTo(1,3,FolderHandle,False,Move,Unicode" +
                            ",[\"PidTagAccess\"],out _)\'");
                    temp184 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyTo(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyToCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})}), out temp183);
                    this.Manager.Checkpoint("MS-OXCFXICS_R3442001");
                    this.Manager.Comment("reaching state \'S206\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyTo/[out -1]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp183, "copyToHandleIndex of FastTransferSourceCopyTo, state S206");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp184, "return of FastTransferSourceCopyTo, state S206");
                    this.Manager.Comment("reaching state \'S224\'");
                    int temp185;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp186;
                    bool temp187;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp188;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp188 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp185, out temp186, out temp187);
                    this.Manager.Comment("reaching state \'S242\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp185, "transferBufferIndex of FastTransferSourceGetBuffer, state S242");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp186, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S242");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp187, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S242");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp188, "return of FastTransferSourceGetBuffer, state S242");
                    this.Manager.Comment("reaching state \'S260\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp189;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp189 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S278\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp189, "return of Release, state S278");
                    this.Manager.Comment("reaching state \'S296\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp190;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp190 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S314\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp190, "return of Release, state S314");
                    this.Manager.Comment("reaching state \'S332\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp191;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp191 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S350\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp191, "return of Release, state S350");
                    this.Manager.Comment("reaching state \'S368\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp192;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp192 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S386\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp192, "return of Release, state S386");
                    this.Manager.Comment("reaching state \'S404\'");
                    goto label8;
                }
                throw new InvalidOperationException("never reached");
            label8:
;
                goto label9;
            }
            if ((temp194 == 1)) {
                this.Manager.Comment("reaching state \'S35\'");
                goto label9;
            }
            throw new InvalidOperationException("never reached");
        label9:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite4CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp195;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp195);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp195);
            this.Manager.Comment("reaching state \'S3\'");
            int temp233 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp233 == 0)) {
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S37\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S46\'");
                int temp196;
                int temp197;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp198;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp198 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp196, out temp197);
                this.Manager.Comment("reaching state \'S55\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp196, "logonHandleIndex of Logon, state S55");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp197, "inboxFolderIdIndex of Logon, state S55");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp198, "return of Logon, state S55");
                this.Manager.Comment("reaching state \'S64\'");
                int temp199;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp200;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp200 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp199);
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp199, "folderHandleIndex of OpenFolder, state S73");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp200, "return of OpenFolder, state S73");
                this.Manager.Comment("reaching state \'S82\'");
                int temp201;
                int temp202;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp203;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp203 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp201, out temp202);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S91\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp201, "folderIdIndex of CreateFolder, state S91");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp202, "folderHandleIndex of CreateFolder, state S91");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp203, "return of CreateFolder, state S91");
                this.Manager.Comment("reaching state \'S100\'");
                int temp204;
                int temp205;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp206;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp206 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp204, out temp205);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S109\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp204, "folderIdIndex of CreateFolder, state S109");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp205, "folderHandleIndex of CreateFolder, state S109");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp206, "return of CreateFolder, state S109");
                this.Manager.Comment("reaching state \'S118\'");
                int temp207;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp208;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp208 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp207);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S127\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp207, "messageHandleIndex of CreateMessage, state S127");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp208, "return of CreateMessage, state S127");
                this.Manager.Comment("reaching state \'S136\'");
                int temp209;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp210;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp210 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp209);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S145\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp209, "messageIdIndex of SaveChangesMessage, state S145");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp210, "return of SaveChangesMessage, state S145");
                this.Manager.Comment("reaching state \'S154\'");
                bool temp211;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(526001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(526001, out temp211);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp211);
                this.Manager.Comment("reaching state \'S163\'");
                int temp232 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckRequirementEnabledChecker1)));
                if ((temp232 == 0)) {
                    this.Manager.Comment("reaching state \'S173\'");
                    int temp212;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp213;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,CopySubfolders,Unicode,out " +
                            "_)\'");
                    temp213 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), out temp212);
                    this.Manager.Checkpoint("MS-OXCFXICS_R502");
                    this.Manager.Comment("reaching state \'S191\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp212, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S191");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp213, "return of FastTransferSourceCopyFolder, state S191");
                    this.Manager.Comment("reaching state \'S209\'");
                    int temp214;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp215;
                    bool temp216;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp217;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp217 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp214, out temp215, out temp216);
                    this.Manager.Checkpoint("MS-OXCFXICS_R511");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S227\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                            "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                            "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                            "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                            "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                            "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                            "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                            "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                            "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                            "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                            "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                            "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                            "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                            "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                            "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                            "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                            "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                            "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                            ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                            "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                            "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                            "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                            "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                            "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                            "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(A" +
                            "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                            "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                            "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                            "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                            "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                            "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                            "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                            "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                            "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                            "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                            "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                            "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                            "ut False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp214, "transferBufferIndex of FastTransferSourceGetBuffer, state S227");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp215, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S227");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp216, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S227");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp217, "return of FastTransferSourceGetBuffer, state S227");
                    this.Manager.Comment("reaching state \'S245\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp218;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp218 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S263\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp218, "return of Release, state S263");
                    this.Manager.Comment("reaching state \'S281\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp219;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp219 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S299\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp219, "return of Release, state S299");
                    this.Manager.Comment("reaching state \'S317\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp220;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp220 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S335\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp220, "return of Release, state S335");
                    this.Manager.Comment("reaching state \'S353\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp221;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp221 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S371\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp221, "return of Release, state S371");
                    this.Manager.Comment("reaching state \'S389\'");
                    goto label10;
                }
                if ((temp232 == 1)) {
                    this.Manager.Comment("reaching state \'S174\'");
                    int temp222;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp223;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,CopySubfolders,Unicode|Forc" +
                            "eUnicode,out _)\'");
                    temp223 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), out temp222);
                    this.Manager.Checkpoint("MS-OXCFXICS_R502");
                    this.Manager.Comment("reaching state \'S192\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp222, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S192");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp223, "return of FastTransferSourceCopyFolder, state S192");
                    this.Manager.Comment("reaching state \'S210\'");
                    int temp224;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp225;
                    bool temp226;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp227;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp227 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp224, out temp225, out temp226);
                    this.Manager.Checkpoint("MS-OXCFXICS_R511");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S228\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                            "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                            "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                            "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                            "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                            "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                            "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                            "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                            "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                            "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                            "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                            "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                            "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                            "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                            "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                            "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                            "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                            "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                            ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                            "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                            "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                            "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                            "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                            "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                            "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(A" +
                            "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                            "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                            "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                            "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                            "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                            "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                            "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                            "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                            "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                            "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                            "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                            "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                            "ut False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp224, "transferBufferIndex of FastTransferSourceGetBuffer, state S228");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp225, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S228");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp226, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S228");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp227, "return of FastTransferSourceGetBuffer, state S228");
                    this.Manager.Comment("reaching state \'S246\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp228;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp228 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S264\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp228, "return of Release, state S264");
                    this.Manager.Comment("reaching state \'S282\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp229;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp229 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S300\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp229, "return of Release, state S300");
                    this.Manager.Comment("reaching state \'S318\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp230;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp230 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S336\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp230, "return of Release, state S336");
                    this.Manager.Comment("reaching state \'S354\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp231;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp231 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S372\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp231, "return of Release, state S372");
                    this.Manager.Comment("reaching state \'S390\'");
                    goto label10;
                }
                throw new InvalidOperationException("never reached");
            label10:
;
                goto label11;
            }
            if ((temp233 == 1)) {
                this.Manager.Comment("reaching state \'S21\'");
                goto label11;
            }
            throw new InvalidOperationException("never reached");
        label11:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S163");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S163");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite5CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp234;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp234);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp234);
            this.Manager.Comment("reaching state \'S5\'");
            int temp272 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp272 == 0)) {
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S47\'");
                int temp235;
                int temp236;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp237;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp237 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp235, out temp236);
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp235, "logonHandleIndex of Logon, state S56");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp236, "inboxFolderIdIndex of Logon, state S56");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp237, "return of Logon, state S56");
                this.Manager.Comment("reaching state \'S65\'");
                int temp238;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp239;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp239 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp238);
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp238, "folderHandleIndex of OpenFolder, state S74");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp239, "return of OpenFolder, state S74");
                this.Manager.Comment("reaching state \'S83\'");
                int temp240;
                int temp241;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp242;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp242 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp240, out temp241);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S92\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp240, "folderIdIndex of CreateFolder, state S92");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp241, "folderHandleIndex of CreateFolder, state S92");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp242, "return of CreateFolder, state S92");
                this.Manager.Comment("reaching state \'S101\'");
                int temp243;
                int temp244;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp245;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp245 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp243, out temp244);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S110\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp243, "folderIdIndex of CreateFolder, state S110");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp244, "folderHandleIndex of CreateFolder, state S110");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp245, "return of CreateFolder, state S110");
                this.Manager.Comment("reaching state \'S119\'");
                int temp246;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp247;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp247 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp246);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S128\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp246, "messageHandleIndex of CreateMessage, state S128");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp247, "return of CreateMessage, state S128");
                this.Manager.Comment("reaching state \'S137\'");
                int temp248;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp249;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp249 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp248);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S146\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp248, "messageIdIndex of SaveChangesMessage, state S146");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp249, "return of SaveChangesMessage, state S146");
                this.Manager.Comment("reaching state \'S155\'");
                bool temp250;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(526001,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(526001, out temp250);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp250);
                this.Manager.Comment("reaching state \'S164\'");
                int temp271 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckRequirementEnabledChecker1)));
                if ((temp271 == 0)) {
                    this.Manager.Comment("reaching state \'S175\'");
                    int temp251;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp252;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,CopySubfolders,Unicode|Forc" +
                            "eUnicode,out _)\'");
                    temp252 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags.CopySubfolders, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), out temp251);
                    this.Manager.Checkpoint("MS-OXCFXICS_R502");
                    this.Manager.Comment("reaching state \'S193\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp251, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S193");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp252, "return of FastTransferSourceCopyFolder, state S193");
                    this.Manager.Comment("reaching state \'S211\'");
                    int temp253;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp254;
                    bool temp255;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp256;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp256 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp253, out temp254, out temp255);
                    this.Manager.Checkpoint("MS-OXCFXICS_R511");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S229\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                            "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                            "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                            "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                            "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                            "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                            "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                            "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                            "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                            "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                            "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                            "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                            "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                            "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                            "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                            "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                            "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                            "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                            ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                            "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                            "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                            "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                            "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                            "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                            "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(A" +
                            "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                            "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                            "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                            "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                            "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                            "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                            "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                            "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                            "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                            "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                            "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                            "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                            "ut False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp253, "transferBufferIndex of FastTransferSourceGetBuffer, state S229");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp254, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S229");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp255, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S229");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp256, "return of FastTransferSourceGetBuffer, state S229");
                    this.Manager.Comment("reaching state \'S247\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp257;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp257 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S265\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp257, "return of Release, state S265");
                    this.Manager.Comment("reaching state \'S283\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp258;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp258 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S301\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp258, "return of Release, state S301");
                    this.Manager.Comment("reaching state \'S319\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp259;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp259 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S337\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp259, "return of Release, state S337");
                    this.Manager.Comment("reaching state \'S355\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp260;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp260 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S373\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp260, "return of Release, state S373");
                    this.Manager.Comment("reaching state \'S391\'");
                    goto label12;
                }
                if ((temp271 == 1)) {
                    this.Manager.Comment("reaching state \'S176\'");
                    int temp261;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp262;
                    this.Manager.Comment("executing step \'call FastTransferSourceCopyFolder(1,3,Move,Unicode,out _)\'");
                    temp262 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyFolder(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyFolderCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(1)), out temp261);
                    this.Manager.Checkpoint("MS-OXCFXICS_R502");
                    this.Manager.Comment("reaching state \'S194\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyFolder/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp261, "copyFolderHandleIndex of FastTransferSourceCopyFolder, state S194");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp262, "return of FastTransferSourceCopyFolder, state S194");
                    this.Manager.Comment("reaching state \'S212\'");
                    int temp263;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp264;
                    bool temp265;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp266;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp266 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp263, out temp264, out temp265);
                    this.Manager.Checkpoint("MS-OXCFXICS_R511");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3331");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3481");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S230\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=TopFolder,AbstractHierarchySync=AbstractHierarchySync(Folderch" +
                            "angeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFolderId" +
                            "Exist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZero=Fa" +
                            "lse),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetGive" +
                            "n=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChangeN" +
                            "umber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeChild=" +
                            "False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nul" +
                            "l,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False)),Abst" +
                            "ractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInfo=nu" +
                            "ll,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=null,I" +
                            "sPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsReadSt" +
                            "ateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSetG" +
                            "iven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyChan" +
                            "geNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDelivery" +
                            "Time=False,IsSortByLastModificationTime=False),AbstractFolderContent=AbstractFol" +
                            "derContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTagNewF" +
                            "XFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False,IsSu" +
                            "bFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessage(Is" +
                            "FolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageList(Is" +
                            "PidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessage" +
                            "Content(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChil" +
                            "dren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelPro" +
                            "p=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False" +
                            ",StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolder=" +
                            "AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=Fa" +
                            "lse,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContentNo" +
                            "tOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp=F" +
                            "alse,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFXDe" +
                            "lProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMessag" +
                            "e=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOu" +
                            "t=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXD" +
                            "elProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode" +
                            "=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=F" +
                            "alse,IsRTFFormat=False))))),SubFolderInScope=True),AbstractState=AbstractState(A" +
                            "bstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=False," +
                            "IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=F" +
                            "alse),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotOut=" +
                            "False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFXDel" +
                            "Prop=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicode=F" +
                            "alse,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=Fal" +
                            "se,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarningO" +
                            "ut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPerm" +
                            "issionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentP" +
                            "recededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringP" +
                            "ropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringPropertie" +
                            "sInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False),o" +
                            "ut False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp263, "transferBufferIndex of FastTransferSourceGetBuffer, state S230");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.TopFolder,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                true}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp264, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S230");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp265, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S230");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp266, "return of FastTransferSourceGetBuffer, state S230");
                    this.Manager.Comment("reaching state \'S248\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp267;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp267 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S266\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp267, "return of Release, state S266");
                    this.Manager.Comment("reaching state \'S284\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp268;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp268 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S302\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp268, "return of Release, state S302");
                    this.Manager.Comment("reaching state \'S320\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp269;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp269 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S338\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp269, "return of Release, state S338");
                    this.Manager.Comment("reaching state \'S356\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp270;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp270 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S374\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp270, "return of Release, state S374");
                    this.Manager.Comment("reaching state \'S392\'");
                    goto label12;
                }
                throw new InvalidOperationException("never reached");
            label12:
;
                goto label13;
            }
            if ((temp272 == 1)) {
                this.Manager.Comment("reaching state \'S23\'");
                goto label13;
            }
            throw new InvalidOperationException("never reached");
        label13:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S164");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S164");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite6CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp273;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp273);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp273);
            this.Manager.Comment("reaching state \'S7\'");
            int temp311 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp311 == 0)) {
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S39\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S48\'");
                int temp274;
                int temp275;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp276;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp276 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp274, out temp275);
                this.Manager.Comment("reaching state \'S57\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp274, "logonHandleIndex of Logon, state S57");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp275, "inboxFolderIdIndex of Logon, state S57");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp276, "return of Logon, state S57");
                this.Manager.Comment("reaching state \'S66\'");
                int temp277;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp278;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp278 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp277);
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp277, "folderHandleIndex of OpenFolder, state S75");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp278, "return of OpenFolder, state S75");
                this.Manager.Comment("reaching state \'S84\'");
                int temp279;
                int temp280;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp281;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp281 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp279, out temp280);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S93\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp279, "folderIdIndex of CreateFolder, state S93");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp280, "folderHandleIndex of CreateFolder, state S93");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp281, "return of CreateFolder, state S93");
                this.Manager.Comment("reaching state \'S102\'");
                int temp282;
                int temp283;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp284;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp284 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp282, out temp283);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S111\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp282, "folderIdIndex of CreateFolder, state S111");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp283, "folderHandleIndex of CreateFolder, state S111");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp284, "return of CreateFolder, state S111");
                this.Manager.Comment("reaching state \'S120\'");
                int temp285;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp286;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp286 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp285);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S129\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp285, "messageHandleIndex of CreateMessage, state S129");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp286, "return of CreateMessage, state S129");
                this.Manager.Comment("reaching state \'S138\'");
                int temp287;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp288;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp288 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp287);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S147\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp287, "messageIdIndex of SaveChangesMessage, state S147");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp288, "return of SaveChangesMessage, state S147");
                this.Manager.Comment("reaching state \'S156\'");
                bool temp289;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp289);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp289);
                this.Manager.Comment("reaching state \'S165\'");
                int temp310 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckRequirementEnabledChecker1)));
                if ((temp310 == 0)) {
                    this.Manager.Comment("reaching state \'S177\'");
                    int temp290;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp291;
                    this.Manager.Comment(@"executing step 'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Move,RecoverMode,[""PidTagAccess"",""PidTagFolderId"",""PidTagComment"",""PidTagDisplayName"",""PidTagContainerHierarchy"",""PidTagFolderAssociatedContents"",""PidTagContainerContents""],out _)'");
                    temp291 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagFolderId",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagComment",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagDisplayName",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagContainerHierarchy",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagFolderAssociatedContents",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagContainerContents",
                                                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp290);
                    this.Manager.Checkpoint("MS-OXCFXICS_R431");
                    this.Manager.Comment("reaching state \'S195\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp290, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S195");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp291, "return of FastTransferSourceCopyProperties, state S195");
                    this.Manager.Comment("reaching state \'S213\'");
                    int temp292;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp293;
                    bool temp294;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp295;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp295 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp292, out temp293, out temp294);
                    this.Manager.Checkpoint("MS-OXCFXICS_R455");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3325");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S231\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp292, "transferBufferIndex of FastTransferSourceGetBuffer, state S231");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp293, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S231");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp294, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S231");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp295, "return of FastTransferSourceGetBuffer, state S231");
                    this.Manager.Comment("reaching state \'S249\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp296;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp296 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S267\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp296, "return of Release, state S267");
                    this.Manager.Comment("reaching state \'S285\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp297;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp297 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S303\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp297, "return of Release, state S303");
                    this.Manager.Comment("reaching state \'S321\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp298;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp298 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S339\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp298, "return of Release, state S339");
                    this.Manager.Comment("reaching state \'S357\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp299;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp299 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S375\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp299, "return of Release, state S375");
                    this.Manager.Comment("reaching state \'S393\'");
                    goto label14;
                }
                if ((temp310 == 1)) {
                    this.Manager.Comment("reaching state \'S178\'");
                    int temp300;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp301;
                    this.Manager.Comment(@"executing step 'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Move,RecoverMode,[""PidTagAccess"",""PidTagFolderId"",""PidTagComment"",""PidTagDisplayName"",""PidTagContainerHierarchy"",""PidTagFolderAssociatedContents"",""PidTagContainerContents""],out _)'");
                    temp301 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls.RecoverMode, this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagFolderId",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagComment",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagDisplayName",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagContainerHierarchy",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagFolderAssociatedContents",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagContainerContents",
                                                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp300);
                    this.Manager.Comment("reaching state \'S196\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp300, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S196");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp301, "return of FastTransferSourceCopyProperties, state S196");
                    this.Manager.Comment("reaching state \'S214\'");
                    int temp302;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp303;
                    bool temp304;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp305;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp305 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp302, out temp303, out temp304);
                    this.Manager.Comment("reaching state \'S232\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp302, "transferBufferIndex of FastTransferSourceGetBuffer, state S232");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp303, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S232");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp304, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S232");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp305, "return of FastTransferSourceGetBuffer, state S232");
                    this.Manager.Comment("reaching state \'S250\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp306;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp306 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S268\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp306, "return of Release, state S268");
                    this.Manager.Comment("reaching state \'S286\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp307;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp307 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S304\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp307, "return of Release, state S304");
                    this.Manager.Comment("reaching state \'S322\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp308;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp308 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S340\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp308, "return of Release, state S340");
                    this.Manager.Comment("reaching state \'S358\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp309;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp309 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S376\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp309, "return of Release, state S376");
                    this.Manager.Comment("reaching state \'S394\'");
                    goto label14;
                }
                throw new InvalidOperationException("never reached");
            label14:
;
                goto label15;
            }
            if ((temp311 == 1)) {
                this.Manager.Comment("reaching state \'S25\'");
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S165");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S165");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite7CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8() {
            this.Manager.BeginTest("MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8");
            this.Manager.Comment("reaching state \'S8\'");
            bool temp312;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCFXICSAdapterInstance.CheckMAPIHTTPTransportSupported(out temp312);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp312);
            this.Manager.Comment("reaching state \'S9\'");
            int temp350 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp350 == 0)) {
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("executing step \'call Connect(1,PrivateMailboxServer)\'");
                this.IMS_OXCFXICSAdapterInstance.Connect(1, ((Microsoft.Protocols.TestSuites.Common.ConnectionType)(1)));
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("checking step \'return Connect\'");
                this.Manager.Comment("reaching state \'S49\'");
                int temp313;
                int temp314;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp315;
                this.Manager.Comment("executing step \'call Logon(1,Private,out _,out _)\'");
                temp315 = this.IMS_OXCFXICSAdapterInstance.Logon(1, ((Microsoft.Protocols.TestSuites.Common.LogonFlags)(1)), out temp313, out temp314);
                this.Manager.Comment("reaching state \'S58\'");
                this.Manager.Comment("checking step \'return Logon/[out 1,out 1]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp313, "logonHandleIndex of Logon, state S58");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp314, "inboxFolderIdIndex of Logon, state S58");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp315, "return of Logon, state S58");
                this.Manager.Comment("reaching state \'S67\'");
                int temp316;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp317;
                this.Manager.Comment("executing step \'call OpenFolder(1,1,1,out _)\'");
                temp317 = this.IMS_OXCFXICSAdapterInstance.OpenFolder(1, 1, 1, out temp316);
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return OpenFolder/[out 2]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp316, "folderHandleIndex of OpenFolder, state S76");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp317, "return of OpenFolder, state S76");
                this.Manager.Comment("reaching state \'S85\'");
                int temp318;
                int temp319;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp320;
                this.Manager.Comment("executing step \'call CreateFolder(1,2,\"TestFolder\",out _,out _)\'");
                temp320 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 2, "TestFolder", out temp318, out temp319);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S94\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 2,out 3]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, temp318, "folderIdIndex of CreateFolder, state S94");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp319, "folderHandleIndex of CreateFolder, state S94");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp320, "return of CreateFolder, state S94");
                this.Manager.Comment("reaching state \'S103\'");
                int temp321;
                int temp322;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp323;
                this.Manager.Comment("executing step \'call CreateFolder(1,3,\"SubFolder\",out _,out _)\'");
                temp323 = this.IMS_OXCFXICSAdapterInstance.CreateFolder(1, 3, "SubFolder", out temp321, out temp322);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890");
                this.Manager.Comment("reaching state \'S112\'");
                this.Manager.Comment("checking step \'return CreateFolder/[out 3,out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, temp321, "folderIdIndex of CreateFolder, state S112");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp322, "folderHandleIndex of CreateFolder, state S112");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp323, "return of CreateFolder, state S112");
                this.Manager.Comment("reaching state \'S121\'");
                int temp324;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp325;
                this.Manager.Comment("executing step \'call CreateMessage(1,3,2,False,out _)\'");
                temp325 = this.IMS_OXCFXICSAdapterInstance.CreateMessage(1, 3, 2, false, out temp324);
                this.Manager.Checkpoint("MS-OXCFXICS_R1890001");
                this.Manager.Comment("reaching state \'S130\'");
                this.Manager.Comment("checking step \'return CreateMessage/[out 5]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 5, temp324, "messageHandleIndex of CreateMessage, state S130");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp325, "return of CreateMessage, state S130");
                this.Manager.Comment("reaching state \'S139\'");
                int temp326;
                Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp327;
                this.Manager.Comment("executing step \'call SaveChangesMessage(1,5,out _)\'");
                temp327 = this.IMS_OXCFXICSAdapterInstance.SaveChangesMessage(1, 5, out temp326);
                this.Manager.Checkpoint("MS-OXCFXICS_R1910");
                this.Manager.Checkpoint("MS-OXCFXICS_R1906");
                this.Manager.Checkpoint("MS-OXCFXICS_R1898");
                this.Manager.Comment("reaching state \'S148\'");
                this.Manager.Comment("checking step \'return SaveChangesMessage/[out 4]:Success\'");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 4, temp326, "messageIdIndex of SaveChangesMessage, state S148");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp327, "return of SaveChangesMessage, state S148");
                this.Manager.Comment("reaching state \'S157\'");
                bool temp328;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(3466,out _)\'");
                this.IMS_OXCFXICSAdapterInstance.CheckRequirementEnabled(3466, out temp328);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp328);
                this.Manager.Comment("reaching state \'S166\'");
                int temp349 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckRequirementEnabledChecker)), new ExpectedReturn(S01_SyncFastTransferFolder_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckRequirementEnabledChecker1)));
                if ((temp349 == 0)) {
                    this.Manager.Comment("reaching state \'S179\'");
                    int temp329;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp330;
                    this.Manager.Comment(@"executing step 'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Move,Unicode|ForceUnicode,[""PidTagAccess"",""PidTagFolderId"",""PidTagComment"",""PidTagDisplayName"",""PidTagContainerHierarchy"",""PidTagFolderAssociatedContents"",""PidTagContainerContents""],out _)'");
                    temp330 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagFolderId",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagComment",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagDisplayName",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagContainerHierarchy",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagFolderAssociatedContents",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagContainerContents",
                                                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp329);
                    this.Manager.Checkpoint("MS-OXCFXICS_R431");
                    this.Manager.Comment("reaching state \'S197\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out 6]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 6, temp329, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S197");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp330, "return of FastTransferSourceCopyProperties, state S197");
                    this.Manager.Comment("reaching state \'S215\'");
                    int temp331;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp332;
                    bool temp333;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp334;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,6,Normal,out _,out _,out _)\'");
                    temp334 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, 6, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp331, out temp332, out temp333);
                    this.Manager.Checkpoint("MS-OXCFXICS_R455");
                    this.Manager.Checkpoint("MS-OXCFXICS_R3325");
                    this.Manager.Checkpoint("MS-OXCFXICS_R1113");
                    this.Manager.Checkpoint("MS-OXCFXICS_R2620");
                    this.Manager.Checkpoint("MS-OXCFXICS_R532");
                    this.Manager.Comment("reaching state \'S233\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out 1,out AbstractFastTransfer" +
                            "Stream(StreamType=folderContent,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=True,AbsFolderMessage=AbstractFolderMessage" +
                            "(IsFolderMessagesPrecededByPidTagFXDelProp=True,MessageList=AbstractMessageList(" +
                            "IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessa" +
                            "geContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageCh" +
                            "ildren(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelP" +
                            "rop=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=Fal" +
                            "se,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFolde" +
                            "r=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOut=" +
                            "False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderContent" +
                            "NotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelProp" +
                            "=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTagFX" +
                            "DelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMess" +
                            "age=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageNot" +
                            "Out=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagF" +
                            "XDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnico" +
                            "de=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage" +
                            "=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractStat" +
                            "e(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=Fal" +
                            "se,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNumbe" +
                            "r=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNotO" +
                            "ut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTagFX" +
                            "DelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnicod" +
                            "e=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePage=" +
                            "False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWarni" +
                            "ngOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoP" +
                            "ermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attachme" +
                            "ntPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),Stri" +
                            "ngPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProper" +
                            "tiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=False" +
                            "),out False]:Success\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, temp331, "transferBufferIndex of FastTransferSourceGetBuffer, state S233");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.folderContent,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                true,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            true,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp332, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S233");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp333, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S233");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp334, "return of FastTransferSourceGetBuffer, state S233");
                    this.Manager.Comment("reaching state \'S251\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp335;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp335 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S269\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp335, "return of Release, state S269");
                    this.Manager.Comment("reaching state \'S287\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp336;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp336 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S305\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp336, "return of Release, state S305");
                    this.Manager.Comment("reaching state \'S323\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp337;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp337 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S341\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp337, "return of Release, state S341");
                    this.Manager.Comment("reaching state \'S359\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp338;
                    this.Manager.Comment("executing step \'call Release(1,6)\'");
                    temp338 = this.IMS_OXCFXICSAdapterInstance.Release(1, 6);
                    this.Manager.Comment("reaching state \'S377\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp338, "return of Release, state S377");
                    this.Manager.Comment("reaching state \'S395\'");
                    goto label16;
                }
                if ((temp349 == 1)) {
                    this.Manager.Comment("reaching state \'S180\'");
                    int temp339;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp340;
                    this.Manager.Comment(@"executing step 'call FastTransferSourceCopyProperties(1,3,FolderHandle,False,Move,Unicode|ForceUnicode,[""PidTagAccess"",""PidTagFolderId"",""PidTagComment"",""PidTagDisplayName"",""PidTagContainerHierarchy"",""PidTagFolderAssociatedContents"",""PidTagContainerContents""],out _)'");
                    temp340 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceCopyProperties(1, 3, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.InputHandleType)(1)), false, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.CopyPropertiesCopyFlags)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.SendOptionAlls)(9)), this.Make<Microsoft.Modeling.Sequence<string>>(new string[] {
                                    "Rep"}, new object[] {
                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                "Head",
                                                "Tail"}, new object[] {
                                                "PidTagAccess",
                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                            "Head",
                                                            "Tail"}, new object[] {
                                                            "PidTagFolderId",
                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                        "Head",
                                                                        "Tail"}, new object[] {
                                                                        "PidTagComment",
                                                                        this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                    "Head",
                                                                                    "Tail"}, new object[] {
                                                                                    "PidTagDisplayName",
                                                                                    this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                "Head",
                                                                                                "Tail"}, new object[] {
                                                                                                "PidTagContainerHierarchy",
                                                                                                this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                            "Head",
                                                                                                            "Tail"}, new object[] {
                                                                                                            "PidTagFolderAssociatedContents",
                                                                                                            this.Make<Microsoft.Xrt.Runtime.RuntimeList<string>>(new string[] {
                                                                                                                        "Head",
                                                                                                                        "Tail"}, new object[] {
                                                                                                                        "PidTagContainerContents",
                                                                                                                        ((Microsoft.Xrt.Runtime.RuntimeList<string>)(null))})})})})})})})}), out temp339);
                    this.Manager.Comment("reaching state \'S198\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceCopyProperties/[out -1]:NotImplemented\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp339, "copyPropertiesHandleIndex of FastTransferSourceCopyProperties, state S198");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.NotImplemented, temp340, "return of FastTransferSourceCopyProperties, state S198");
                    this.Manager.Comment("reaching state \'S216\'");
                    int temp341;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream temp342;
                    bool temp343;
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp344;
                    this.Manager.Comment("executing step \'call FastTransferSourceGetBuffer(1,-1,Normal,out _,out _,out _)\'");
                    temp344 = this.IMS_OXCFXICSAdapterInstance.FastTransferSourceGetBuffer(1, -1, Microsoft.Protocols.TestSuites.MS_OXCFXICS.BufferSize.Normal, out temp341, out temp342, out temp343);
                    this.Manager.Comment("reaching state \'S234\'");
                    this.Manager.Comment("checking step \'return FastTransferSourceGetBuffer/[out -1,out AbstractFastTransfe" +
                            "rStream(StreamType=contentsSync,AbstractHierarchySync=AbstractHierarchySync(Fold" +
                            "erchangeInfo=AbstractFolderChange(IsPidTagFolderIdExist=False,IsPidTagParentFold" +
                            "erIdExist=False,IsPidTagSourceKeyValueZero=False,IsPidTagParentSourceKeyValueZer" +
                            "o=False),FolderCount=0,FinalICSState=AbstractState(AbstractICSStateIndex=0,IdSet" +
                            "Given=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIPropertyCha" +
                            "ngeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsParentFolderBeforeCh" +
                            "ild=False,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted" +
                            "=null,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False))," +
                            "AbstractContentsSync=AbstractContentsSync(IsprogessTotalPresent=False,MessageInf" +
                            "o=null,AbstractDeletion=AbstractDeletion(IsDeletionPresent=False,IdSetDeleted=nu" +
                            "ll,IsPidTagIdsetNoLongerInScopeExist=False,IsPidTagIdsetExpiredExist=False),IsRe" +
                            "adStateChangesExist=False,FinalICSState=AbstractState(AbstractICSStateIndex=0,Id" +
                            "SetGiven=null,IsNewCnsetReadPropertyChangeNumber=False,IsNewCnsetSeenFAIProperty" +
                            "ChangeNumber=False,IsNewCnsetSeenPropertyChangeNumber=False),IsSortByMessageDeli" +
                            "veryTime=False,IsSortByLastModificationTime=False),AbstractFolderContent=Abstrac" +
                            "tFolderContent(IsPidTagEcWarningOut=False,IsNoPermissionObjNotOut=False,IsPidTag" +
                            "NewFXFolderOut=False,IsFolderContentNotOut=False,IsFolderPropertiesNotOut=False," +
                            "IsSubFolderPrecededByPidTagFXDelProp=False,AbsFolderMessage=AbstractFolderMessag" +
                            "e(IsFolderMessagesPrecededByPidTagFXDelProp=False,MessageList=AbstractMessageLis" +
                            "t(IsPidTagEcWarningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMes" +
                            "sageContent(IsNoPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessage" +
                            "Children(AttachmentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDe" +
                            "lProp=False),StringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=F" +
                            "alse,StringPropertiesInOtherCodePage=False,IsRTFFormat=False))))),AbstractTopFol" +
                            "der=AbstractTopFolder(AbsFolderContent=AbstractFolderContent(IsPidTagEcWarningOu" +
                            "t=False,IsNoPermissionObjNotOut=False,IsPidTagNewFXFolderOut=False,IsFolderConte" +
                            "ntNotOut=False,IsFolderPropertiesNotOut=False,IsSubFolderPrecededByPidTagFXDelPr" +
                            "op=False,AbsFolderMessage=AbstractFolderMessage(IsFolderMessagesPrecededByPidTag" +
                            "FXDelProp=False,MessageList=AbstractMessageList(IsPidTagEcWarningOut=False,AbsMe" +
                            "ssage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsNoPermissionMessageN" +
                            "otOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTa" +
                            "gFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUni" +
                            "code=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePa" +
                            "ge=False,IsRTFFormat=False))))),SubFolderInScope=False),AbstractState=AbstractSt" +
                            "ate(AbstractICSStateIndex=0,IdSetGiven=null,IsNewCnsetReadPropertyChangeNumber=F" +
                            "alse,IsNewCnsetSeenFAIPropertyChangeNumber=False,IsNewCnsetSeenPropertyChangeNum" +
                            "ber=False),AbstractMessageContent=AbstractMessageContent(IsNoPermissionMessageNo" +
                            "tOut=False,AbsMessageChildren=AbstractMessageChildren(AttachmentPrecededByPidTag" +
                            "FXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),StringPropertiesInUnic" +
                            "ode=False,StringPropertiesInUnicodeCodePage=False,StringPropertiesInOtherCodePag" +
                            "e=False,IsRTFFormat=False),AbstractMessageList=AbstractMessageList(IsPidTagEcWar" +
                            "ningOut=False,AbsMessage=AbsMessage(AbsMessageContent=AbstractMessageContent(IsN" +
                            "oPermissionMessageNotOut=False,AbsMessageChildren=AbstractMessageChildren(Attach" +
                            "mentPrecededByPidTagFXDelProp=False,RecipientPrecededByPidTagFXDelProp=False),St" +
                            "ringPropertiesInUnicode=False,StringPropertiesInUnicodeCodePage=False,StringProp" +
                            "ertiesInOtherCodePage=False,IsRTFFormat=False))),IsSameReadstateChangeNumber=Fal" +
                            "se),out False]:InvalidParameter\'");
                    TestManagerHelpers.AssertAreEqual<int>(this.Manager, -1, temp341, "transferBufferIndex of FastTransferSourceGetBuffer, state S234");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(this.Manager, this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFastTransferStream>(new string[] {
                                    "StreamType",
                                    "AbstractHierarchySync",
                                    "AbstractContentsSync",
                                    "AbstractFolderContent",
                                    "AbstractTopFolder",
                                    "AbstractState",
                                    "AbstractMessageContent",
                                    "AbstractMessageList",
                                    "IsSameReadstateChangeNumber"}, new object[] {
                                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.FastTransferStreamType.contentsSync,
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractHierarchySync>(new string[] {
                                                "FolderchangeInfo",
                                                "FolderCount",
                                                "FinalICSState",
                                                "IsParentFolderBeforeChild",
                                                "AbstractDeletion"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderChange>(new string[] {
                                                            "IsPidTagFolderIdExist",
                                                            "IsPidTagParentFolderIdExist",
                                                            "IsPidTagSourceKeyValueZero",
                                                            "IsPidTagParentSourceKeyValueZero"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false}),
                                                0,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractContentsSync>(new string[] {
                                                "IsprogessTotalPresent",
                                                "MessageInfo",
                                                "AbstractDeletion",
                                                "IsReadStateChangesExist",
                                                "FinalICSState",
                                                "IsSortByMessageDeliveryTime",
                                                "IsSortByLastModificationTime"}, new object[] {
                                                false,
                                                ((Microsoft.Modeling.Set<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChangeInfo>)(null)),
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractDeletion>(new string[] {
                                                            "IsDeletionPresent",
                                                            "IdSetDeleted",
                                                            "IsPidTagIdsetNoLongerInScopeExist",
                                                            "IsPidTagIdsetExpiredExist"}, new object[] {
                                                            false,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false}),
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                            "AbstractICSStateIndex",
                                                            "IdSetGiven",
                                                            "IsNewCnsetReadPropertyChangeNumber",
                                                            "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                            "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                            0,
                                                            ((Microsoft.Modeling.Set<int>)(null)),
                                                            false,
                                                            false,
                                                            false}),
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "IsNoPermissionObjNotOut",
                                                "IsPidTagNewFXFolderOut",
                                                "IsFolderContentNotOut",
                                                "IsFolderPropertiesNotOut",
                                                "IsSubFolderPrecededByPidTagFXDelProp",
                                                "AbsFolderMessage"}, new object[] {
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                            "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                            "MessageList"}, new object[] {
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                        "IsPidTagEcWarningOut",
                                                                        "AbsMessage"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                    "AbsMessageContent"}, new object[] {
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                "IsNoPermissionMessageNotOut",
                                                                                                "AbsMessageChildren",
                                                                                                "StringPropertiesInUnicode",
                                                                                                "StringPropertiesInUnicodeCodePage",
                                                                                                "StringPropertiesInOtherCodePage",
                                                                                                "IsRTFFormat"}, new object[] {
                                                                                                false,
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                            false,
                                                                                                            false}),
                                                                                                false,
                                                                                                false,
                                                                                                false,
                                                                                                false})})})})}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractTopFolder>(new string[] {
                                                "AbsFolderContent",
                                                "SubFolderInScope"}, new object[] {
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderContent>(new string[] {
                                                            "IsPidTagEcWarningOut",
                                                            "IsNoPermissionObjNotOut",
                                                            "IsPidTagNewFXFolderOut",
                                                            "IsFolderContentNotOut",
                                                            "IsFolderPropertiesNotOut",
                                                            "IsSubFolderPrecededByPidTagFXDelProp",
                                                            "AbsFolderMessage"}, new object[] {
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractFolderMessage>(new string[] {
                                                                        "IsFolderMessagesPrecededByPidTagFXDelProp",
                                                                        "MessageList"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                                                    "IsPidTagEcWarningOut",
                                                                                    "AbsMessage"}, new object[] {
                                                                                    false,
                                                                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                                                                "AbsMessageContent"}, new object[] {
                                                                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                                                            "IsNoPermissionMessageNotOut",
                                                                                                            "AbsMessageChildren",
                                                                                                            "StringPropertiesInUnicode",
                                                                                                            "StringPropertiesInUnicodeCodePage",
                                                                                                            "StringPropertiesInOtherCodePage",
                                                                                                            "IsRTFFormat"}, new object[] {
                                                                                                            false,
                                                                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                                                        "AttachmentPrecededByPidTagFXDelProp",
                                                                                                                        "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                                                        false,
                                                                                                                        false}),
                                                                                                            false,
                                                                                                            false,
                                                                                                            false,
                                                                                                            false})})})})}),
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractState>(new string[] {
                                                "AbstractICSStateIndex",
                                                "IdSetGiven",
                                                "IsNewCnsetReadPropertyChangeNumber",
                                                "IsNewCnsetSeenFAIPropertyChangeNumber",
                                                "IsNewCnsetSeenPropertyChangeNumber"}, new object[] {
                                                0,
                                                ((Microsoft.Modeling.Set<int>)(null)),
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                "IsNoPermissionMessageNotOut",
                                                "AbsMessageChildren",
                                                "StringPropertiesInUnicode",
                                                "StringPropertiesInUnicodeCodePage",
                                                "StringPropertiesInOtherCodePage",
                                                "IsRTFFormat"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                            "AttachmentPrecededByPidTagFXDelProp",
                                                            "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                            false,
                                                            false}),
                                                false,
                                                false,
                                                false,
                                                false}),
                                    this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageList>(new string[] {
                                                "IsPidTagEcWarningOut",
                                                "AbsMessage"}, new object[] {
                                                false,
                                                this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbsMessage>(new string[] {
                                                            "AbsMessageContent"}, new object[] {
                                                            this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageContent>(new string[] {
                                                                        "IsNoPermissionMessageNotOut",
                                                                        "AbsMessageChildren",
                                                                        "StringPropertiesInUnicode",
                                                                        "StringPropertiesInUnicodeCodePage",
                                                                        "StringPropertiesInOtherCodePage",
                                                                        "IsRTFFormat"}, new object[] {
                                                                        false,
                                                                        this.Make<Microsoft.Protocols.TestSuites.MS_OXCFXICS.AbstractMessageChildren>(new string[] {
                                                                                    "AttachmentPrecededByPidTagFXDelProp",
                                                                                    "RecipientPrecededByPidTagFXDelProp"}, new object[] {
                                                                                    false,
                                                                                    false}),
                                                                        false,
                                                                        false,
                                                                        false,
                                                                        false})})}),
                                    false}), temp342, "abstractFastTransferStream of FastTransferSourceGetBuffer, state S234");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp343, "transferDataSmallOrEqualToBufferSize of FastTransferSourceGetBuffer, state S234");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult.InvalidParameter, temp344, "return of FastTransferSourceGetBuffer, state S234");
                    this.Manager.Comment("reaching state \'S252\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp345;
                    this.Manager.Comment("executing step \'call Release(1,3)\'");
                    temp345 = this.IMS_OXCFXICSAdapterInstance.Release(1, 3);
                    this.Manager.Comment("reaching state \'S270\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp345, "return of Release, state S270");
                    this.Manager.Comment("reaching state \'S288\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp346;
                    this.Manager.Comment("executing step \'call Release(1,4)\'");
                    temp346 = this.IMS_OXCFXICSAdapterInstance.Release(1, 4);
                    this.Manager.Comment("reaching state \'S306\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp346, "return of Release, state S306");
                    this.Manager.Comment("reaching state \'S324\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp347;
                    this.Manager.Comment("executing step \'call Release(1,5)\'");
                    temp347 = this.IMS_OXCFXICSAdapterInstance.Release(1, 5);
                    this.Manager.Comment("reaching state \'S342\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp347, "return of Release, state S342");
                    this.Manager.Comment("reaching state \'S360\'");
                    Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult temp348;
                    this.Manager.Comment("executing step \'call Release(1,-1)\'");
                    temp348 = this.IMS_OXCFXICSAdapterInstance.Release(1, -1);
                    this.Manager.Comment("reaching state \'S378\'");
                    this.Manager.Comment("checking step \'return Release/Success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCFXICS.RopResult)(0)), temp348, "return of Release, state S378");
                    this.Manager.Comment("reaching state \'S396\'");
                    goto label16;
                }
                throw new InvalidOperationException("never reached");
            label16:
;
                goto label17;
            }
            if ((temp350 == 1)) {
                this.Manager.Comment("reaching state \'S27\'");
                goto label17;
            }
            throw new InvalidOperationException("never reached");
        label17:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S166");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S166");
        }
        
        private void MSOXCFXICS_S01_SyncFastTransferFolder_TestSuite8CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        #endregion
    }
}