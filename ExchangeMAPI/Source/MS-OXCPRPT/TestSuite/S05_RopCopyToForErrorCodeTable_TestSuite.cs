//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCPRPT {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S05_RopCopyToForErrorCodeTable_TestSuite : PtfTestClassBase {
        
        public S05_RopCopyToForErrorCodeTable_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter IMS_OXCPRPTAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCPRPTAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp1 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp1 == 0)) {
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S90\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S108\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S126\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S144\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S162\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceMessageIndirectlyCont" +
                        "ainsDestMessage)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceMessageIndirectlyContainsDestMessage);
                this.Manager.Comment("reaching state \'S180\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S198\'");
                goto label0;
            }
            if ((temp1 == 1)) {
                this.Manager.Comment("reaching state \'S37\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite1() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite1");
            this.Manager.Comment("reaching state \'S10\'");
            bool temp2;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp2);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp2);
            this.Manager.Comment("reaching state \'S11\'");
            int temp3 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp3 == 0)) {
                this.Manager.Comment("reaching state \'S46\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S77\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S95\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S113\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S131\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S149\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S167\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceDestNotCompatible)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition)(0)));
                this.Manager.Comment("reaching state \'S185\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S203\'");
                goto label1;
            }
            if ((temp3 == 1)) {
                this.Manager.Comment("reaching state \'S47\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite2() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite2");
            this.Manager.Comment("reaching state \'S12\'");
            bool temp4;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp4);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp4);
            this.Manager.Comment("reaching state \'S13\'");
            int temp5 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp5 == 0)) {
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S78\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S96\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S114\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S132\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S150\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S168\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceMessageIndirectlyCont" +
                        "ainsDestMessage)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceMessageIndirectlyContainsDestMessage);
                this.Manager.Comment("reaching state \'S186\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S204\'");
                goto label2;
            }
            if ((temp5 == 1)) {
                this.Manager.Comment("reaching state \'S49\'");
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite3() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite3");
            this.Manager.Comment("reaching state \'S14\'");
            bool temp6;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp6);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp6);
            this.Manager.Comment("reaching state \'S15\'");
            int temp7 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp7 == 0)) {
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S79\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S97\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S115\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S133\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S151\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S169\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceContainsDest)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition)(1)));
                this.Manager.Comment("reaching state \'S187\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S205\'");
                goto label3;
            }
            if ((temp7 == 1)) {
                this.Manager.Comment("reaching state \'S51\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        #endregion
        
        #region Test Starting in S16
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite4() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite4");
            this.Manager.Comment("reaching state \'S16\'");
            bool temp8;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp8);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp8);
            this.Manager.Comment("reaching state \'S17\'");
            int temp9 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite4CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite4CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp9 == 0)) {
                this.Manager.Comment("reaching state \'S52\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S98\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S116\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S134\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S152\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S170\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(Normal)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.Normal);
                this.Manager.Comment("reaching state \'S188\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S206\'");
                goto label4;
            }
            if ((temp9 == 1)) {
                this.Manager.Comment("reaching state \'S53\'");
                goto label4;
            }
            throw new InvalidOperationException("never reached");
        label4:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite4CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite4CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        #endregion
        
        #region Test Starting in S18
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite5() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite5");
            this.Manager.Comment("reaching state \'S18\'");
            bool temp10;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp10);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp10);
            this.Manager.Comment("reaching state \'S19\'");
            int temp11 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite5CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite5CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp11 == 0)) {
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S81\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S99\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S117\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S135\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S153\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S171\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceDestHasSubObjWithSame" +
                        "DisplayName)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceDestHasSubObjWithSameDisplayName);
                this.Manager.Comment("reaching state \'S189\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S207\'");
                goto label5;
            }
            if ((temp11 == 1)) {
                this.Manager.Comment("reaching state \'S55\'");
                goto label5;
            }
            throw new InvalidOperationException("never reached");
        label5:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite5CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S19");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite5CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S19");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite6() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite6");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp12;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp12);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp12);
            this.Manager.Comment("reaching state \'S3\'");
            int temp13 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite6CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite6CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp13 == 0)) {
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S91\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S109\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S127\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S145\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S163\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceContainsDest)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition)(1)));
                this.Manager.Comment("reaching state \'S181\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S199\'");
                goto label6;
            }
            if ((temp13 == 1)) {
                this.Manager.Comment("reaching state \'S39\'");
                goto label6;
            }
            throw new InvalidOperationException("never reached");
        label6:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite6CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite6CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S20
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite7() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite7");
            this.Manager.Comment("reaching state \'S20\'");
            bool temp14;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp14);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp14);
            this.Manager.Comment("reaching state \'S21\'");
            int temp15 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite7CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite7CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp15 == 0)) {
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S82\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S100\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S118\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S136\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S154\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S172\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceMessageContainsDestMe" +
                        "ssage)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceMessageContainsDestMessage);
                this.Manager.Comment("reaching state \'S190\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S208\'");
                goto label7;
            }
            if ((temp15 == 1)) {
                this.Manager.Comment("reaching state \'S57\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite7CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S21");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite7CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S21");
        }
        #endregion
        
        #region Test Starting in S22
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite8() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite8");
            this.Manager.Comment("reaching state \'S22\'");
            bool temp16;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp16);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp16);
            this.Manager.Comment("reaching state \'S23\'");
            int temp17 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite8CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite8CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp17 == 0)) {
                this.Manager.Comment("reaching state \'S58\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S83\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S101\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S119\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S137\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S155\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S173\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceDestNotCompatible)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition)(0)));
                this.Manager.Comment("reaching state \'S191\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S209\'");
                goto label8;
            }
            if ((temp17 == 1)) {
                this.Manager.Comment("reaching state \'S59\'");
                goto label8;
            }
            throw new InvalidOperationException("never reached");
        label8:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite8CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S23");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite8CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S23");
        }
        #endregion
        
        #region Test Starting in S24
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite9() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite9");
            this.Manager.Comment("reaching state \'S24\'");
            bool temp18;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp18);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp18);
            this.Manager.Comment("reaching state \'S25\'");
            int temp19 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite9CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite9CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp19 == 0)) {
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S102\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S120\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S138\'");
                this.Manager.Comment("executing step \'call GetObject(Message,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S156\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S174\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceMessageIndirectlyCont" +
                        "ainsDestMessage)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceMessageIndirectlyContainsDestMessage);
                this.Manager.Comment("reaching state \'S192\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S210\'");
                goto label9;
            }
            if ((temp19 == 1)) {
                this.Manager.Comment("reaching state \'S61\'");
                goto label9;
            }
            throw new InvalidOperationException("never reached");
        label9:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite9CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S25");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite9CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S25");
        }
        #endregion
        
        #region Test Starting in S26
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite10() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite10");
            this.Manager.Comment("reaching state \'S26\'");
            bool temp20;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp20);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp20);
            this.Manager.Comment("reaching state \'S27\'");
            int temp21 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite10CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite10CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp21 == 0)) {
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S85\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S103\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S121\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S139\'");
                this.Manager.Comment("executing step \'call GetObject(Message,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S157\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S175\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceContainsDest)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition)(1)));
                this.Manager.Comment("reaching state \'S193\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S211\'");
                goto label10;
            }
            if ((temp21 == 1)) {
                this.Manager.Comment("reaching state \'S63\'");
                goto label10;
            }
            throw new InvalidOperationException("never reached");
        label10:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite10CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S27");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite10CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S27");
        }
        #endregion
        
        #region Test Starting in S28
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite11() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite11");
            this.Manager.Comment("reaching state \'S28\'");
            bool temp22;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp22);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp22);
            this.Manager.Comment("reaching state \'S29\'");
            int temp23 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite11CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite11CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp23 == 0)) {
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S86\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S104\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S122\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S140\'");
                this.Manager.Comment("executing step \'call GetObject(Message,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S158\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S176\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(Normal)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.Normal);
                this.Manager.Comment("reaching state \'S194\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S212\'");
                goto label11;
            }
            if ((temp23 == 1)) {
                this.Manager.Comment("reaching state \'S65\'");
                goto label11;
            }
            throw new InvalidOperationException("never reached");
        label11:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite11CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S29");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite11CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S29");
        }
        #endregion
        
        #region Test Starting in S30
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite12() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite12");
            this.Manager.Comment("reaching state \'S30\'");
            bool temp24;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp24);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp24);
            this.Manager.Comment("reaching state \'S31\'");
            int temp25 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite12CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite12CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp25 == 0)) {
                this.Manager.Comment("reaching state \'S66\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S87\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S105\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S123\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S141\'");
                this.Manager.Comment("executing step \'call GetObject(Message,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S159\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S177\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceDestHasSubObjWithSame" +
                        "DisplayName)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceDestHasSubObjWithSameDisplayName);
                this.Manager.Comment("reaching state \'S195\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S213\'");
                goto label12;
            }
            if ((temp25 == 1)) {
                this.Manager.Comment("reaching state \'S67\'");
                goto label12;
            }
            throw new InvalidOperationException("never reached");
        label12:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite12CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S31");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite12CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S31");
        }
        #endregion
        
        #region Test Starting in S32
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite13() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite13");
            this.Manager.Comment("reaching state \'S32\'");
            bool temp26;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp26);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp26);
            this.Manager.Comment("reaching state \'S33\'");
            int temp27 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite13CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite13CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp27 == 0)) {
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S88\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S106\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S124\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S142\'");
                this.Manager.Comment("executing step \'call GetObject(Message,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S160\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S178\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceMessageContainsDestMe" +
                        "ssage)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceMessageContainsDestMessage);
                this.Manager.Comment("reaching state \'S196\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S214\'");
                goto label13;
            }
            if ((temp27 == 1)) {
                this.Manager.Comment("reaching state \'S69\'");
                goto label13;
            }
            throw new InvalidOperationException("never reached");
        label13:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite13CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S33");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite13CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S33");
        }
        #endregion
        
        #region Test Starting in S34
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite14() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite14");
            this.Manager.Comment("reaching state \'S34\'");
            bool temp28;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp28);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp28);
            this.Manager.Comment("reaching state \'S35\'");
            int temp29 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite14CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite14CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp29 == 0)) {
                this.Manager.Comment("reaching state \'S70\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S89\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S107\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S125\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S143\'");
                this.Manager.Comment("executing step \'call GetObject(Message,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S161\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S179\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceDestNotCompatible)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition)(0)));
                this.Manager.Comment("reaching state \'S197\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S215\'");
                goto label14;
            }
            if ((temp29 == 1)) {
                this.Manager.Comment("reaching state \'S71\'");
                goto label14;
            }
            throw new InvalidOperationException("never reached");
        label14:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite14CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S35");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite14CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S35");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite15() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite15");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp30;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp30);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp30);
            this.Manager.Comment("reaching state \'S5\'");
            int temp31 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite15CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite15CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp31 == 0)) {
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S92\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S110\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S128\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S146\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S164\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(Normal)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.Normal);
                this.Manager.Comment("reaching state \'S182\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S200\'");
                goto label15;
            }
            if ((temp31 == 1)) {
                this.Manager.Comment("reaching state \'S41\'");
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite15CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite15CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite16() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite16");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp32;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp32);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp32);
            this.Manager.Comment("reaching state \'S7\'");
            int temp33 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite16CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite16CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp33 == 0)) {
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S93\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S111\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S129\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S147\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S165\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceDestHasSubObjWithSame" +
                        "DisplayName)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceDestHasSubObjWithSameDisplayName);
                this.Manager.Comment("reaching state \'S183\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S201\'");
                goto label16;
            }
            if ((temp33 == 1)) {
                this.Manager.Comment("reaching state \'S43\'");
                goto label16;
            }
            throw new InvalidOperationException("never reached");
        label16:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite16CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite16CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite17() {
            this.Manager.BeginTest("MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite17");
            this.Manager.Comment("reaching state \'S8\'");
            bool temp34;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp34);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp34);
            this.Manager.Comment("reaching state \'S9\'");
            int temp35 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite17CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S05_RopCopyToForErrorCodeTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite17CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp35 == 0)) {
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S94\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S112\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S130\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,SecondObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(1)));
                this.Manager.Comment("reaching state \'S148\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S166\'");
                this.Manager.Comment("executing step \'call RopCopyToMethodForErrorCodeTable(SourceMessageContainsDestMe" +
                        "ssage)\'");
                this.IMS_OXCPRPTAdapterInstance.RopCopyToMethodForErrorCodeTable(Microsoft.Protocols.TestSuites.MS_OXCPRPT.CopyToCondition.SourceMessageContainsDestMessage);
                this.Manager.Comment("reaching state \'S184\'");
                this.Manager.Comment("checking step \'return RopCopyToMethodForErrorCodeTable\'");
                this.Manager.Comment("reaching state \'S202\'");
                goto label17;
            }
            if ((temp35 == 1)) {
                this.Manager.Comment("reaching state \'S45\'");
                goto label17;
            }
            throw new InvalidOperationException("never reached");
        label17:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite17CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        
        private void MSOXCPRPT_S05_RopCopyToForErrorCodeTable_TestSuite17CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        #endregion
    }
}