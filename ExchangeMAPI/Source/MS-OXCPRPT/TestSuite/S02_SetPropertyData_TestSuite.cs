//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCPRPT {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.6.100.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S02_SetPropertyData_TestSuite : PtfTestClassBase {
        
        public S02_SetPropertyData_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter IMS_OXCPRPTAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCPRPTAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCPRPT.IMS_OXCPRPTAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp9 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp9 == 0)) {
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S96\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S112\'");
                bool temp1;
                bool temp2;
                this.Manager.Comment("executing step \'call RopSetPropertiesMethod(out _,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesMethod(out temp1, out temp2);
                this.Manager.Checkpoint("MS-OXCPRPT_R475");
                this.Manager.Checkpoint("MS-OXCPRPT_R101");
                this.Manager.Checkpoint("MS-OXCPRPT_R477");
                this.Manager.Checkpoint("MS-OXCPRPT_R479");
                this.Manager.Comment("reaching state \'S128\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesMethod/[out True,out False]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp1, "isModifiedValueReturned of RopSetPropertiesMethod, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp2, "isChangedInDB of RopSetPropertiesMethod, state S128");
                this.Manager.Comment("reaching state \'S144\'");
                bool temp3;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp3);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp3);
                this.Manager.Comment("reaching state \'S160\'");
                int temp8 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckRequirementEnabledChecker1)));
                if ((temp8 == 0)) {
                    this.Manager.Comment("reaching state \'S176\'");
                    bool temp4;
                    bool temp5;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp4, out temp5);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R490");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S204\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp4, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "04");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp5, "isChangedInDB of RopDeletePropertiesMethod, state S204");
                    this.Manager.Comment("reaching state \'S232\'");
                    goto label0;
                }
                if ((temp8 == 1)) {
                    this.Manager.Comment("reaching state \'S177\'");
                    bool temp6;
                    bool temp7;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp6, out temp7);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R490");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S205\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp6, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "05");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp7, "isChangedInDB of RopDeletePropertiesMethod, state S205");
                    this.Manager.Comment("reaching state \'S233\'");
                    goto label0;
                }
                throw new InvalidOperationException("never reached");
            label0:
;
                goto label1;
            }
            if ((temp9 == 1)) {
                this.Manager.Comment("reaching state \'S33\'");
                goto label1;
            }
            throw new InvalidOperationException("never reached");
        label1:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S160");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S160");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite1() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite1");
            this.Manager.Comment("reaching state \'S10\'");
            bool temp10;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp10);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp10);
            this.Manager.Comment("reaching state \'S11\'");
            int temp19 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp19 == 0)) {
                this.Manager.Comment("reaching state \'S42\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S69\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S85\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S101\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S117\'");
                bool temp11;
                bool temp12;
                this.Manager.Comment("executing step \'call RopSetPropertiesMethod(out _,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesMethod(out temp11, out temp12);
                this.Manager.Checkpoint("MS-OXCPRPT_R475");
                this.Manager.Checkpoint("MS-OXCPRPT_R101");
                this.Manager.Checkpoint("MS-OXCPRPT_R477");
                this.Manager.Checkpoint("MS-OXCPRPT_R476");
                this.Manager.Comment("reaching state \'S133\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesMethod/[out True,out False]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp11, "isModifiedValueReturned of RopSetPropertiesMethod, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp12, "isChangedInDB of RopSetPropertiesMethod, state S133");
                this.Manager.Comment("reaching state \'S149\'");
                bool temp13;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp13);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp13);
                this.Manager.Comment("reaching state \'S165\'");
                int temp18 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckRequirementEnabledChecker1)));
                if ((temp18 == 0)) {
                    this.Manager.Comment("reaching state \'S184\'");
                    bool temp14;
                    bool temp15;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp14, out temp15);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R487");
                    this.Manager.Checkpoint("MS-OXCPRPT_R488");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S212\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp14, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "12");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp15, "isChangedInDB of RopDeletePropertiesMethod, state S212");
                    this.Manager.Comment("reaching state \'S240\'");
                    goto label2;
                }
                if ((temp18 == 1)) {
                    this.Manager.Comment("reaching state \'S185\'");
                    bool temp16;
                    bool temp17;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp16, out temp17);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R487");
                    this.Manager.Checkpoint("MS-OXCPRPT_R488");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S213\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp16, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "13");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp17, "isChangedInDB of RopDeletePropertiesMethod, state S213");
                    this.Manager.Comment("reaching state \'S241\'");
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            if ((temp19 == 1)) {
                this.Manager.Comment("reaching state \'S43\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S165");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S165");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S11");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite2() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite2");
            this.Manager.Comment("reaching state \'S12\'");
            bool temp20;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp20);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp20);
            this.Manager.Comment("reaching state \'S13\'");
            int temp28 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp28 == 0)) {
                this.Manager.Comment("reaching state \'S44\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S70\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S86\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S102\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S118\'");
                bool temp21;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp21);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R823");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S134\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp21, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S134");
                this.Manager.Comment("reaching state \'S150\'");
                bool temp22;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(83609,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(83609, out temp22);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp22);
                this.Manager.Comment("reaching state \'S166\'");
                int temp27 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckRequirementEnabledChecker1)));
                if ((temp27 == 0)) {
                    this.Manager.Comment("reaching state \'S186\'");
                    bool temp23;
                    bool temp24;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp23, out temp24);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83604");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83605");
                    this.Manager.Checkpoint("MS-OXCPRPT_R8360501");
                    this.Manager.Comment("reaching state \'S214\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp23, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S214");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp24, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S214");
                    this.Manager.Comment("reaching state \'S242\'");
                    goto label4;
                }
                if ((temp27 == 1)) {
                    this.Manager.Comment("reaching state \'S187\'");
                    bool temp25;
                    bool temp26;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp25, out temp26);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83604");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83605");
                    this.Manager.Checkpoint("MS-OXCPRPT_R8360501");
                    this.Manager.Comment("reaching state \'S215\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp25, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S215");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp26, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S215");
                    this.Manager.Comment("reaching state \'S243\'");
                    goto label4;
                }
                throw new InvalidOperationException("never reached");
            label4:
;
                goto label5;
            }
            if ((temp28 == 1)) {
                this.Manager.Comment("reaching state \'S45\'");
                goto label5;
            }
            throw new InvalidOperationException("never reached");
        label5:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S166");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S166");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S13");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite3() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite3");
            this.Manager.Comment("reaching state \'S14\'");
            bool temp29;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp29);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp29);
            this.Manager.Comment("reaching state \'S15\'");
            int temp37 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp37 == 0)) {
                this.Manager.Comment("reaching state \'S46\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S71\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S87\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S103\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S119\'");
                bool temp30;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp30);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R823");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S135\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp30, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S135");
                this.Manager.Comment("reaching state \'S151\'");
                bool temp31;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp31);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp31);
                this.Manager.Comment("reaching state \'S167\'");
                int temp36 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckRequirementEnabledChecker1)));
                if ((temp36 == 0)) {
                    this.Manager.Comment("reaching state \'S188\'");
                    bool temp32;
                    bool temp33;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp32, out temp33);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R487");
                    this.Manager.Checkpoint("MS-OXCPRPT_R488");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S216\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp32, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "16");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp33, "isChangedInDB of RopDeletePropertiesMethod, state S216");
                    this.Manager.Comment("reaching state \'S244\'");
                    goto label6;
                }
                if ((temp36 == 1)) {
                    this.Manager.Comment("reaching state \'S189\'");
                    bool temp34;
                    bool temp35;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp34, out temp35);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R487");
                    this.Manager.Checkpoint("MS-OXCPRPT_R488");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S217\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp34, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "17");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp35, "isChangedInDB of RopDeletePropertiesMethod, state S217");
                    this.Manager.Comment("reaching state \'S245\'");
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
                goto label7;
            }
            if ((temp37 == 1)) {
                this.Manager.Comment("reaching state \'S47\'");
                goto label7;
            }
            throw new InvalidOperationException("never reached");
        label7:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S167");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S167");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S15");
        }
        #endregion
        
        #region Test Starting in S16
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite4() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite4");
            this.Manager.Comment("reaching state \'S16\'");
            bool temp38;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp38);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp38);
            this.Manager.Comment("reaching state \'S17\'");
            int temp49 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp49 == 0)) {
                this.Manager.Comment("reaching state \'S48\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S88\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S104\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S120\'");
                bool temp39;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp39);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R823");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S136\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp39, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S136");
                this.Manager.Comment("reaching state \'S152\'");
                bool temp40;
                this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp40);
                this.Manager.Checkpoint("MS-OXCPRPT_R478");
                this.Manager.Checkpoint("MS-OXCPRPT_R82401");
                this.Manager.Comment("reaching state \'S168\'");
                this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp40, "isChangedInDB of RopSaveChangesMessageMethod, state S168");
                this.Manager.Comment("reaching state \'S190\'");
                bool temp41;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(83609,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(83609, out temp41);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp41);
                this.Manager.Comment("reaching state \'S218\'");
                int temp48 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckRequirementEnabledChecker1)));
                if ((temp48 == 0)) {
                    this.Manager.Comment("reaching state \'S246\'");
                    bool temp42;
                    bool temp43;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp42, out temp43);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83604");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83605");
                    this.Manager.Checkpoint("MS-OXCPRPT_R8360501");
                    this.Manager.Comment("reaching state \'S264\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp42, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S264");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp43, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S264");
                    this.Manager.Comment("reaching state \'S272\'");
                    bool temp44;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp44);
                    this.Manager.Checkpoint("MS-OXCPRPT_R478");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82401");
                    this.Manager.Checkpoint("MS-OXCPRPT_R489");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83606");
                    this.Manager.Comment("reaching state \'S280\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp44, "isChangedInDB of RopSaveChangesMessageMethod, state S280");
                    this.Manager.Comment("reaching state \'S288\'");
                    goto label8;
                }
                if ((temp48 == 1)) {
                    this.Manager.Comment("reaching state \'S247\'");
                    bool temp45;
                    bool temp46;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp45, out temp46);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83604");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83605");
                    this.Manager.Checkpoint("MS-OXCPRPT_R8360501");
                    this.Manager.Comment("reaching state \'S265\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp45, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S265");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp46, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S265");
                    this.Manager.Comment("reaching state \'S273\'");
                    bool temp47;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp47);
                    this.Manager.Checkpoint("MS-OXCPRPT_R478");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82401");
                    this.Manager.Checkpoint("MS-OXCPRPT_R489");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83606");
                    this.Manager.Comment("reaching state \'S281\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp47, "isChangedInDB of RopSaveChangesMessageMethod, state S281");
                    this.Manager.Comment("reaching state \'S289\'");
                    goto label8;
                }
                throw new InvalidOperationException("never reached");
            label8:
;
                goto label9;
            }
            if ((temp49 == 1)) {
                this.Manager.Comment("reaching state \'S49\'");
                goto label9;
            }
            throw new InvalidOperationException("never reached");
        label9:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S218");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S218");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite4CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S17");
        }
        #endregion
        
        #region Test Starting in S18
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite5() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite5");
            this.Manager.Comment("reaching state \'S18\'");
            bool temp50;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp50);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp50);
            this.Manager.Comment("reaching state \'S19\'");
            int temp61 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp61 == 0)) {
                this.Manager.Comment("reaching state \'S50\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S89\'");
                this.Manager.Comment("executing step \'call GetObject(Message,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Message, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S105\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S121\'");
                bool temp51;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp51);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R823");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S137\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp51, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S137");
                this.Manager.Comment("reaching state \'S153\'");
                bool temp52;
                this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp52);
                this.Manager.Checkpoint("MS-OXCPRPT_R478");
                this.Manager.Checkpoint("MS-OXCPRPT_R82401");
                this.Manager.Comment("reaching state \'S169\'");
                this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp52, "isChangedInDB of RopSaveChangesMessageMethod, state S169");
                this.Manager.Comment("reaching state \'S191\'");
                bool temp53;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp53);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp53);
                this.Manager.Comment("reaching state \'S219\'");
                int temp60 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckRequirementEnabledChecker1)));
                if ((temp60 == 0)) {
                    this.Manager.Comment("reaching state \'S248\'");
                    bool temp54;
                    bool temp55;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp54, out temp55);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R487");
                    this.Manager.Checkpoint("MS-OXCPRPT_R488");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S266\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp54, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "66");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp55, "isChangedInDB of RopDeletePropertiesMethod, state S266");
                    this.Manager.Comment("reaching state \'S274\'");
                    bool temp56;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp56);
                    this.Manager.Checkpoint("MS-OXCPRPT_R478");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82401");
                    this.Manager.Checkpoint("MS-OXCPRPT_R489");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83606");
                    this.Manager.Comment("reaching state \'S282\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp56, "isChangedInDB of RopSaveChangesMessageMethod, state S282");
                    this.Manager.Comment("reaching state \'S290\'");
                    goto label10;
                }
                if ((temp60 == 1)) {
                    this.Manager.Comment("reaching state \'S249\'");
                    bool temp57;
                    bool temp58;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp57, out temp58);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R487");
                    this.Manager.Checkpoint("MS-OXCPRPT_R488");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S267\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp57, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "67");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp58, "isChangedInDB of RopDeletePropertiesMethod, state S267");
                    this.Manager.Comment("reaching state \'S275\'");
                    bool temp59;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp59);
                    this.Manager.Checkpoint("MS-OXCPRPT_R478");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82401");
                    this.Manager.Checkpoint("MS-OXCPRPT_R489");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83606");
                    this.Manager.Comment("reaching state \'S283\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp59, "isChangedInDB of RopSaveChangesMessageMethod, state S283");
                    this.Manager.Comment("reaching state \'S291\'");
                    goto label10;
                }
                throw new InvalidOperationException("never reached");
            label10:
;
                goto label11;
            }
            if ((temp61 == 1)) {
                this.Manager.Comment("reaching state \'S51\'");
                goto label11;
            }
            throw new InvalidOperationException("never reached");
        label11:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S19");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S219");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S219");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite5CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S19");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite6() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite6");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp62;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp62);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp62);
            this.Manager.Comment("reaching state \'S3\'");
            int temp70 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp70 == 0)) {
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S65\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S81\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S97\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S113\'");
                bool temp63;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp63);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R825");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S129\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp63, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S129");
                this.Manager.Comment("reaching state \'S145\'");
                bool temp64;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(83609,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(83609, out temp64);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp64);
                this.Manager.Comment("reaching state \'S161\'");
                int temp69 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckRequirementEnabledChecker1)));
                if ((temp69 == 0)) {
                    this.Manager.Comment("reaching state \'S178\'");
                    bool temp65;
                    bool temp66;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp65, out temp66);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83607");
                    this.Manager.Comment("reaching state \'S206\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp65, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S206");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp66, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S206");
                    this.Manager.Comment("reaching state \'S234\'");
                    goto label12;
                }
                if ((temp69 == 1)) {
                    this.Manager.Comment("reaching state \'S179\'");
                    bool temp67;
                    bool temp68;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp67, out temp68);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83607");
                    this.Manager.Comment("reaching state \'S207\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp67, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S207");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp68, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S207");
                    this.Manager.Comment("reaching state \'S235\'");
                    goto label12;
                }
                throw new InvalidOperationException("never reached");
            label12:
;
                goto label13;
            }
            if ((temp70 == 1)) {
                this.Manager.Comment("reaching state \'S35\'");
                goto label13;
            }
            throw new InvalidOperationException("never reached");
        label13:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S161");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S161");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite6CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S20
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite7() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite7");
            this.Manager.Comment("reaching state \'S20\'");
            bool temp71;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp71);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp71);
            this.Manager.Comment("reaching state \'S21\'");
            int temp80 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp80 == 0)) {
                this.Manager.Comment("reaching state \'S52\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S90\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S106\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S122\'");
                bool temp72;
                bool temp73;
                this.Manager.Comment("executing step \'call RopSetPropertiesMethod(out _,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesMethod(out temp72, out temp73);
                this.Manager.Checkpoint("MS-OXCPRPT_R475");
                this.Manager.Checkpoint("MS-OXCPRPT_R101");
                this.Manager.Checkpoint("MS-OXCPRPT_R477");
                this.Manager.Checkpoint("MS-OXCPRPT_R846");
                this.Manager.Comment("reaching state \'S138\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesMethod/[out True,out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp72, "isModifiedValueReturned of RopSetPropertiesMethod, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp73, "isChangedInDB of RopSetPropertiesMethod, state S138");
                this.Manager.Comment("reaching state \'S154\'");
                bool temp74;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp74);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp74);
                this.Manager.Comment("reaching state \'S170\'");
                int temp79 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckRequirementEnabledChecker1)));
                if ((temp79 == 0)) {
                    this.Manager.Comment("reaching state \'S192\'");
                    bool temp75;
                    bool temp76;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp75, out temp76);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R492");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S220\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp75, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "20");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp76, "isChangedInDB of RopDeletePropertiesMethod, state S220");
                    this.Manager.Comment("reaching state \'S250\'");
                    goto label14;
                }
                if ((temp79 == 1)) {
                    this.Manager.Comment("reaching state \'S193\'");
                    bool temp77;
                    bool temp78;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp77, out temp78);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R492");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S221\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp77, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "21");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp78, "isChangedInDB of RopDeletePropertiesMethod, state S221");
                    this.Manager.Comment("reaching state \'S251\'");
                    goto label14;
                }
                throw new InvalidOperationException("never reached");
            label14:
;
                goto label15;
            }
            if ((temp80 == 1)) {
                this.Manager.Comment("reaching state \'S53\'");
                goto label15;
            }
            throw new InvalidOperationException("never reached");
        label15:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S21");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S170");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite7CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S21");
        }
        #endregion
        
        #region Test Starting in S22
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite8() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite8");
            this.Manager.Comment("reaching state \'S22\'");
            bool temp81;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp81);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp81);
            this.Manager.Comment("reaching state \'S23\'");
            int temp89 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp89 == 0)) {
                this.Manager.Comment("reaching state \'S54\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S91\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S107\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S123\'");
                bool temp82;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp82);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S139\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp82, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S139");
                this.Manager.Comment("reaching state \'S155\'");
                bool temp83;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(83609,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(83609, out temp83);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp83);
                this.Manager.Comment("reaching state \'S171\'");
                int temp88 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckRequirementEnabledChecker1)));
                if ((temp88 == 0)) {
                    this.Manager.Comment("reaching state \'S194\'");
                    bool temp84;
                    bool temp85;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp84, out temp85);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Comment("reaching state \'S222\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp84, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S222");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp85, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S222");
                    this.Manager.Comment("reaching state \'S252\'");
                    goto label16;
                }
                if ((temp88 == 1)) {
                    this.Manager.Comment("reaching state \'S195\'");
                    bool temp86;
                    bool temp87;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp86, out temp87);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Comment("reaching state \'S223\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp86, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S223");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp87, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S223");
                    this.Manager.Comment("reaching state \'S253\'");
                    goto label16;
                }
                throw new InvalidOperationException("never reached");
            label16:
;
                goto label17;
            }
            if ((temp89 == 1)) {
                this.Manager.Comment("reaching state \'S55\'");
                goto label17;
            }
            throw new InvalidOperationException("never reached");
        label17:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S23");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S171");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S171");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite8CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S23");
        }
        #endregion
        
        #region Test Starting in S24
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite9() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite9");
            this.Manager.Comment("reaching state \'S24\'");
            bool temp90;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp90);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp90);
            this.Manager.Comment("reaching state \'S25\'");
            int temp98 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp98 == 0)) {
                this.Manager.Comment("reaching state \'S56\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S92\'");
                this.Manager.Comment("executing step \'call GetObject(Folder,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(1)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S108\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S124\'");
                bool temp91;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp91);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S140\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp91, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S140");
                this.Manager.Comment("reaching state \'S156\'");
                bool temp92;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp92);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp92);
                this.Manager.Comment("reaching state \'S172\'");
                int temp97 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckRequirementEnabledChecker1)));
                if ((temp97 == 0)) {
                    this.Manager.Comment("reaching state \'S196\'");
                    bool temp93;
                    bool temp94;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp93, out temp94);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R492");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S224\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp93, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "24");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp94, "isChangedInDB of RopDeletePropertiesMethod, state S224");
                    this.Manager.Comment("reaching state \'S254\'");
                    goto label18;
                }
                if ((temp97 == 1)) {
                    this.Manager.Comment("reaching state \'S197\'");
                    bool temp95;
                    bool temp96;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp95, out temp96);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R492");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S225\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp95, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "25");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp96, "isChangedInDB of RopDeletePropertiesMethod, state S225");
                    this.Manager.Comment("reaching state \'S255\'");
                    goto label18;
                }
                throw new InvalidOperationException("never reached");
            label18:
;
                goto label19;
            }
            if ((temp98 == 1)) {
                this.Manager.Comment("reaching state \'S57\'");
                goto label19;
            }
            throw new InvalidOperationException("never reached");
        label19:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S25");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S172");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S172");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite9CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S25");
        }
        #endregion
        
        #region Test Starting in S26
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite10() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite10");
            this.Manager.Comment("reaching state \'S26\'");
            bool temp99;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp99);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp99);
            this.Manager.Comment("reaching state \'S27\'");
            int temp108 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp108 == 0)) {
                this.Manager.Comment("reaching state \'S58\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S77\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S93\'");
                this.Manager.Comment("executing step \'call GetObject(Logon,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S109\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S125\'");
                bool temp100;
                bool temp101;
                this.Manager.Comment("executing step \'call RopSetPropertiesMethod(out _,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesMethod(out temp100, out temp101);
                this.Manager.Checkpoint("MS-OXCPRPT_R475");
                this.Manager.Checkpoint("MS-OXCPRPT_R101");
                this.Manager.Checkpoint("MS-OXCPRPT_R477");
                this.Manager.Checkpoint("MS-OXCPRPT_R847");
                this.Manager.Comment("reaching state \'S141\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesMethod/[out True,out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp100, "isModifiedValueReturned of RopSetPropertiesMethod, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp101, "isChangedInDB of RopSetPropertiesMethod, state S141");
                this.Manager.Comment("reaching state \'S157\'");
                bool temp102;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp102);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp102);
                this.Manager.Comment("reaching state \'S173\'");
                int temp107 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckRequirementEnabledChecker1)));
                if ((temp107 == 0)) {
                    this.Manager.Comment("reaching state \'S198\'");
                    bool temp103;
                    bool temp104;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp103, out temp104);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R49201");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S226\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp103, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "26");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp104, "isChangedInDB of RopDeletePropertiesMethod, state S226");
                    this.Manager.Comment("reaching state \'S256\'");
                    goto label20;
                }
                if ((temp107 == 1)) {
                    this.Manager.Comment("reaching state \'S199\'");
                    bool temp105;
                    bool temp106;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp105, out temp106);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S227\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out False,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp105, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "27");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp106, "isChangedInDB of RopDeletePropertiesMethod, state S227");
                    this.Manager.Comment("reaching state \'S257\'");
                    goto label20;
                }
                throw new InvalidOperationException("never reached");
            label20:
;
                goto label21;
            }
            if ((temp108 == 1)) {
                this.Manager.Comment("reaching state \'S59\'");
                goto label21;
            }
            throw new InvalidOperationException("never reached");
        label21:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S27");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S173");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S173");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite10CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S27");
        }
        #endregion
        
        #region Test Starting in S28
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite11() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite11");
            this.Manager.Comment("reaching state \'S28\'");
            bool temp109;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp109);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp109);
            this.Manager.Comment("reaching state \'S29\'");
            int temp117 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp117 == 0)) {
                this.Manager.Comment("reaching state \'S60\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S78\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S94\'");
                this.Manager.Comment("executing step \'call GetObject(Logon,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S110\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S126\'");
                bool temp110;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp110);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R82502");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S142\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp110, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S142");
                this.Manager.Comment("reaching state \'S158\'");
                bool temp111;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(83609,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(83609, out temp111);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp111);
                this.Manager.Comment("reaching state \'S174\'");
                int temp116 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckRequirementEnabledChecker1)));
                if ((temp116 == 0)) {
                    this.Manager.Comment("reaching state \'S200\'");
                    bool temp112;
                    bool temp113;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp112, out temp113);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Comment("reaching state \'S228\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out False,out False]\'" +
                            "");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp112, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S228");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp113, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S228");
                    this.Manager.Comment("reaching state \'S258\'");
                    goto label22;
                }
                if ((temp116 == 1)) {
                    this.Manager.Comment("reaching state \'S201\'");
                    bool temp114;
                    bool temp115;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp114, out temp115);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83609");
                    this.Manager.Comment("reaching state \'S229\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp114, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S229");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp115, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S229");
                    this.Manager.Comment("reaching state \'S259\'");
                    goto label22;
                }
                throw new InvalidOperationException("never reached");
            label22:
;
                goto label23;
            }
            if ((temp117 == 1)) {
                this.Manager.Comment("reaching state \'S61\'");
                goto label23;
            }
            throw new InvalidOperationException("never reached");
        label23:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S29");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S174");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S174");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite11CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S29");
        }
        #endregion
        
        #region Test Starting in S30
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite12() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite12");
            this.Manager.Comment("reaching state \'S30\'");
            bool temp118;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp118);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp118);
            this.Manager.Comment("reaching state \'S31\'");
            int temp126 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp126 == 0)) {
                this.Manager.Comment("reaching state \'S62\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S79\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S95\'");
                this.Manager.Comment("executing step \'call GetObject(Logon,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType)(0)), ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S111\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S127\'");
                bool temp119;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp119);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R82502");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S143\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp119, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S143");
                this.Manager.Comment("reaching state \'S159\'");
                bool temp120;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp120);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp120);
                this.Manager.Comment("reaching state \'S175\'");
                int temp125 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckRequirementEnabledChecker1)));
                if ((temp125 == 0)) {
                    this.Manager.Comment("reaching state \'S202\'");
                    bool temp121;
                    bool temp122;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp121, out temp122);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S230\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out False,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp121, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "30");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp122, "isChangedInDB of RopDeletePropertiesMethod, state S230");
                    this.Manager.Comment("reaching state \'S260\'");
                    goto label24;
                }
                if ((temp125 == 1)) {
                    this.Manager.Comment("reaching state \'S203\'");
                    bool temp123;
                    bool temp124;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp123, out temp124);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R49201");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S231\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp123, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "31");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp124, "isChangedInDB of RopDeletePropertiesMethod, state S231");
                    this.Manager.Comment("reaching state \'S261\'");
                    goto label24;
                }
                throw new InvalidOperationException("never reached");
            label24:
;
                goto label25;
            }
            if ((temp126 == 1)) {
                this.Manager.Comment("reaching state \'S63\'");
                goto label25;
            }
            throw new InvalidOperationException("never reached");
        label25:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S31");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S175");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S175");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite12CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S31");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite13() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite13");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp127;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp127);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp127);
            this.Manager.Comment("reaching state \'S5\'");
            int temp135 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp135 == 0)) {
                this.Manager.Comment("reaching state \'S36\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S66\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S82\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S98\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S114\'");
                bool temp128;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp128);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R825");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S130\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp128, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S130");
                this.Manager.Comment("reaching state \'S146\'");
                bool temp129;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp129);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp129);
                this.Manager.Comment("reaching state \'S162\'");
                int temp134 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckRequirementEnabledChecker1)));
                if ((temp134 == 0)) {
                    this.Manager.Comment("reaching state \'S180\'");
                    bool temp130;
                    bool temp131;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp130, out temp131);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R490");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S208\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp130, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "08");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp131, "isChangedInDB of RopDeletePropertiesMethod, state S208");
                    this.Manager.Comment("reaching state \'S236\'");
                    goto label26;
                }
                if ((temp134 == 1)) {
                    this.Manager.Comment("reaching state \'S181\'");
                    bool temp132;
                    bool temp133;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp132, out temp133);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R490");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S209\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp132, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "09");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp133, "isChangedInDB of RopDeletePropertiesMethod, state S209");
                    this.Manager.Comment("reaching state \'S237\'");
                    goto label26;
                }
                throw new InvalidOperationException("never reached");
            label26:
;
                goto label27;
            }
            if ((temp135 == 1)) {
                this.Manager.Comment("reaching state \'S37\'");
                goto label27;
            }
            throw new InvalidOperationException("never reached");
        label27:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S162");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S162");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite13CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite14() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite14");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp136;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp136);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp136);
            this.Manager.Comment("reaching state \'S7\'");
            int temp150 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp150 == 0)) {
                this.Manager.Comment("reaching state \'S38\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S67\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S83\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S99\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S115\'");
                bool temp137;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp137);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R825");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S131\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp137, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S131");
                this.Manager.Comment("reaching state \'S147\'");
                bool temp138;
                this.Manager.Comment("executing step \'call RopSaveChangesAttachmentMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSaveChangesAttachmentMethod(out temp138);
                this.Manager.Comment("reaching state \'S163\'");
                this.Manager.Comment("checking step \'return RopSaveChangesAttachmentMethod/[out False]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp138, "isChangedInDB of RopSaveChangesAttachmentMethod, state S163");
                this.Manager.Comment("reaching state \'S182\'");
                bool temp139;
                this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp139);
                this.Manager.Checkpoint("MS-OXCPRPT_R480");
                this.Manager.Checkpoint("MS-OXCPRPT_R82501");
                this.Manager.Comment("reaching state \'S210\'");
                this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp139, "isChangedInDB of RopSaveChangesMessageMethod, state S210");
                this.Manager.Comment("reaching state \'S238\'");
                bool temp140;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(83609,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(83609, out temp140);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp140);
                this.Manager.Comment("reaching state \'S262\'");
                int temp149 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckRequirementEnabledChecker1)));
                if ((temp149 == 0)) {
                    this.Manager.Comment("reaching state \'S268\'");
                    bool temp141;
                    bool temp142;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp141, out temp142);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83607");
                    this.Manager.Comment("reaching state \'S276\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp141, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S276");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp142, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S276");
                    this.Manager.Comment("reaching state \'S284\'");
                    bool temp143;
                    this.Manager.Comment("executing step \'call RopSaveChangesAttachmentMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesAttachmentMethod(out temp143);
                    this.Manager.Comment("reaching state \'S292\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesAttachmentMethod/[out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp143, "isChangedInDB of RopSaveChangesAttachmentMethod, state S292");
                    this.Manager.Comment("reaching state \'S296\'");
                    bool temp144;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp144);
                    this.Manager.Checkpoint("MS-OXCPRPT_R480");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82501");
                    this.Manager.Checkpoint("MS-OXCPRPT_R491");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83608");
                    this.Manager.Comment("reaching state \'S300\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp144, "isChangedInDB of RopSaveChangesMessageMethod, state S300");
                    this.Manager.Comment("reaching state \'S304\'");
                    goto label28;
                }
                if ((temp149 == 1)) {
                    this.Manager.Comment("reaching state \'S269\'");
                    bool temp145;
                    bool temp146;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesNoReplicateMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesNoReplicateMethod(out temp145, out temp146);
                    this.Manager.Checkpoint("MS-OXCPRPT_R835");
                    this.Manager.Checkpoint("MS-OXCPRPT_R836");
                    this.Manager.Checkpoint("MS-OXCPRPT_R124");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83607");
                    this.Manager.Comment("reaching state \'S277\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesNoReplicateMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp145, "isSameWithDeleteProperties of RopDeletePropertiesNoReplicateMethod, state S277");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp146, "isChangedInDB of RopDeletePropertiesNoReplicateMethod, state S277");
                    this.Manager.Comment("reaching state \'S285\'");
                    bool temp147;
                    this.Manager.Comment("executing step \'call RopSaveChangesAttachmentMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesAttachmentMethod(out temp147);
                    this.Manager.Comment("reaching state \'S293\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesAttachmentMethod/[out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp147, "isChangedInDB of RopSaveChangesAttachmentMethod, state S293");
                    this.Manager.Comment("reaching state \'S297\'");
                    bool temp148;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp148);
                    this.Manager.Checkpoint("MS-OXCPRPT_R480");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82501");
                    this.Manager.Checkpoint("MS-OXCPRPT_R491");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83608");
                    this.Manager.Comment("reaching state \'S301\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp148, "isChangedInDB of RopSaveChangesMessageMethod, state S301");
                    this.Manager.Comment("reaching state \'S305\'");
                    goto label28;
                }
                throw new InvalidOperationException("never reached");
            label28:
;
                goto label29;
            }
            if ((temp150 == 1)) {
                this.Manager.Comment("reaching state \'S39\'");
                goto label29;
            }
            throw new InvalidOperationException("never reached");
        label29:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S262");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S262");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite14CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCPRPT_S02_SetPropertyData_TestSuite15() {
            this.Manager.BeginTest("MSOXCPRPT_S02_SetPropertyData_TestSuite15");
            this.Manager.Comment("reaching state \'S8\'");
            bool temp151;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCPRPTAdapterInstance.CheckMAPIHTTPTransportSupported(out temp151);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp151);
            this.Manager.Comment("reaching state \'S9\'");
            int temp165 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp165 == 0)) {
                this.Manager.Comment("reaching state \'S40\'");
                this.Manager.Comment("executing step \'call InitializeMailBox()\'");
                this.IMS_OXCPRPTAdapterInstance.InitializeMailBox();
                this.Manager.Comment("reaching state \'S68\'");
                this.Manager.Comment("checking step \'return InitializeMailBox\'");
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("executing step \'call GetObject(Attachment,FirstObject)\'");
                this.IMS_OXCPRPTAdapterInstance.GetObject(Microsoft.Protocols.TestSuites.MS_OXCPRPT.ServerObjectType.Attachment, ((Microsoft.Protocols.TestSuites.MS_OXCPRPT.ObjectToOperate)(0)));
                this.Manager.Comment("reaching state \'S100\'");
                this.Manager.Comment("checking step \'return GetObject\'");
                this.Manager.Comment("reaching state \'S116\'");
                bool temp152;
                this.Manager.Comment("executing step \'call RopSetPropertiesNoReplicateMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSetPropertiesNoReplicateMethod(out temp152);
                this.Manager.Checkpoint("MS-OXCPRPT_R822");
                this.Manager.Checkpoint("MS-OXCPRPT_R824");
                this.Manager.Checkpoint("MS-OXCPRPT_R825");
                this.Manager.Checkpoint("MS-OXCPRPT_R112");
                this.Manager.Comment("reaching state \'S132\'");
                this.Manager.Comment("checking step \'return RopSetPropertiesNoReplicateMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp152, "isSameWithSetProperties of RopSetPropertiesNoReplicateMethod, state S132");
                this.Manager.Comment("reaching state \'S148\'");
                bool temp153;
                this.Manager.Comment("executing step \'call RopSaveChangesAttachmentMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSaveChangesAttachmentMethod(out temp153);
                this.Manager.Comment("reaching state \'S164\'");
                this.Manager.Comment("checking step \'return RopSaveChangesAttachmentMethod/[out False]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp153, "isChangedInDB of RopSaveChangesAttachmentMethod, state S164");
                this.Manager.Comment("reaching state \'S183\'");
                bool temp154;
                this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp154);
                this.Manager.Checkpoint("MS-OXCPRPT_R480");
                this.Manager.Checkpoint("MS-OXCPRPT_R82501");
                this.Manager.Comment("reaching state \'S211\'");
                this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp154, "isChangedInDB of RopSaveChangesMessageMethod, state S211");
                this.Manager.Comment("reaching state \'S239\'");
                bool temp155;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(49201,out _)\'");
                this.IMS_OXCPRPTAdapterInstance.CheckRequirementEnabled(49201, out temp155);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp155);
                this.Manager.Comment("reaching state \'S263\'");
                int temp164 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckRequirementEnabledChecker)), new ExpectedReturn(S02_SetPropertyData_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckRequirementEnabledChecker1)));
                if ((temp164 == 0)) {
                    this.Manager.Comment("reaching state \'S270\'");
                    bool temp156;
                    bool temp157;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp156, out temp157);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R490");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S278\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp156, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "78");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp157, "isChangedInDB of RopDeletePropertiesMethod, state S278");
                    this.Manager.Comment("reaching state \'S286\'");
                    bool temp158;
                    this.Manager.Comment("executing step \'call RopSaveChangesAttachmentMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesAttachmentMethod(out temp158);
                    this.Manager.Comment("reaching state \'S294\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesAttachmentMethod/[out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp158, "isChangedInDB of RopSaveChangesAttachmentMethod, state S294");
                    this.Manager.Comment("reaching state \'S298\'");
                    bool temp159;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp159);
                    this.Manager.Checkpoint("MS-OXCPRPT_R480");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82501");
                    this.Manager.Checkpoint("MS-OXCPRPT_R491");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83608");
                    this.Manager.Comment("reaching state \'S302\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp159, "isChangedInDB of RopSaveChangesMessageMethod, state S302");
                    this.Manager.Comment("reaching state \'S306\'");
                    goto label30;
                }
                if ((temp164 == 1)) {
                    this.Manager.Comment("reaching state \'S271\'");
                    bool temp160;
                    bool temp161;
                    this.Manager.Comment("executing step \'call RopDeletePropertiesMethod(out _,out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopDeletePropertiesMethod(out temp160, out temp161);
                    this.Manager.Checkpoint("MS-OXCPRPT_R485");
                    this.Manager.Checkpoint("MS-OXCPRPT_R486");
                    this.Manager.Checkpoint("MS-OXCPRPT_R490");
                    this.Manager.Checkpoint("MS-OXCPRPT_R113");
                    this.Manager.Comment("reaching state \'S279\'");
                    this.Manager.Comment("checking step \'return RopDeletePropertiesMethod/[out True,out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp160, "isNoValidValueReturnedForDeletedProperties of RopDeletePropertiesMethod, state S2" +
                            "79");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp161, "isChangedInDB of RopDeletePropertiesMethod, state S279");
                    this.Manager.Comment("reaching state \'S287\'");
                    bool temp162;
                    this.Manager.Comment("executing step \'call RopSaveChangesAttachmentMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesAttachmentMethod(out temp162);
                    this.Manager.Comment("reaching state \'S295\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesAttachmentMethod/[out False]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp162, "isChangedInDB of RopSaveChangesAttachmentMethod, state S295");
                    this.Manager.Comment("reaching state \'S299\'");
                    bool temp163;
                    this.Manager.Comment("executing step \'call RopSaveChangesMessageMethod(out _)\'");
                    this.IMS_OXCPRPTAdapterInstance.RopSaveChangesMessageMethod(out temp163);
                    this.Manager.Checkpoint("MS-OXCPRPT_R480");
                    this.Manager.Checkpoint("MS-OXCPRPT_R82501");
                    this.Manager.Checkpoint("MS-OXCPRPT_R491");
                    this.Manager.Checkpoint("MS-OXCPRPT_R83608");
                    this.Manager.Comment("reaching state \'S303\'");
                    this.Manager.Comment("checking step \'return RopSaveChangesMessageMethod/[out True]\'");
                    TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp163, "isChangedInDB of RopSaveChangesMessageMethod, state S303");
                    this.Manager.Comment("reaching state \'S307\'");
                    goto label30;
                }
                throw new InvalidOperationException("never reached");
            label30:
;
                goto label31;
            }
            if ((temp165 == 1)) {
                this.Manager.Comment("reaching state \'S41\'");
                goto label31;
            }
            throw new InvalidOperationException("never reached");
        label31:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S263");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S263");
        }
        
        private void MSOXCPRPT_S02_SetPropertyData_TestSuite15CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S9");
        }
        #endregion
    }
}