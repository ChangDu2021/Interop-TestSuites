<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/"
                  xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
                  xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                  xmlns:tns="http://schemas.microsoft.com/sharepoint/soap/"
                  xmlns:rs="http://schemas.microsoft.com/sharepoint/soap/"
                  xmlns:z="http://schemas.microsoft.com/sharepoint/soap/"
                  xmlns:sync="http://schemas.microsoft.com/2008/03/sync/"
                  xmlns:s="http://www.w3.org/2001/XMLSchema"
                  xmlns:s1="http://microsoft.com/wsdl/types/"
                  xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                  xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
                  targetNamespace="http://schemas.microsoft.com/sharepoint/soap/"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:core="http://schemas.microsoft.com/sharepoint/soap/"
                  xmlns:ds="urn:schemas-microsoft-com:rowset"> 
  <wsdl:types>

    <!--Add rs:data definition, extracted from [MS-PRSTFR] section 2.4-->
    <!--Replace the type of data to DataDefinition which is specified in [MS-LISTSWS] section 3.1.4.2.2.2-->
    <xs:schema id="DataSchema"
    targetNamespace="urn:schemas-microsoft-com:rowset"
    elementFormDefault="qualified"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:rs="http://schemas.microsoft.com/sharepoint/soap/">
      <xs:import namespace="http://schemas.microsoft.com/sharepoint/soap/" id="listsws"/>
      <xs:element name="data" type="rs:DataDefinition" />
    </xs:schema>

    <!--Add a data complexType used in [MS-LISTSWS], extracted from [MS-WSSCAML] section 5 -->
    <xs:schema id="WSS" targetNamespace="http://schemas.microsoft.com/sharepoint/soap/"
           xmlns="http://schemas.microsoft.com/sharepoint/soap/"
           elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"
           version="1.0" attributeFormDefault="unqualified">
      <xs:simpleType name="AggregationsType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[Aa][Vv][Gg]|[Cc][Oo][Uu][Nn][Tt]|[Mm][Aa][Xx]|[Mm][Ii][Nn]|[Ss][Tt][Dd][Ee][Vv]|[Ss][Uu][Mm]|[Vv][Aa][Rr]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AggregationsValue">
        <xs:restriction base="xs:string">
          <xs:pattern value="On|.*" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssemblyClass">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssemblyStrongName">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContentTypeId">
        <xs:restriction base="xs:string">
          <xs:pattern value="0x([0-9A-Fa-f][1-9A-Fa-f]|[1-9A-Fa-f][0-9A-Fa-f]|00[0-9A-Fa-f]{32})*" />
          <xs:minLength value="2"/>
          <xs:maxLength value="1026"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FALSE_Case_Insensitive_Else_Anything">
        <xs:restriction base="xs:string">
          <xs:pattern value="[Ff][Aa][Ll][Ss][Ee]|.*" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FieldAggregationAttribute">
        <xs:restriction base="xs:string">
          <xs:enumeration value="average" />
          <xs:enumeration value="count" />
          <xs:enumeration value="first" />
          <xs:enumeration value="last" />
          <xs:enumeration value="max" />
          <xs:enumeration value="merge" />
          <xs:enumeration value="min" />
          <xs:enumeration value="plaintext" />
          <xs:enumeration value="signature" />
          <xs:enumeration value="sum" />
          <xs:enumeration value="" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FieldInternalType">
        <xs:restriction base="xs:string">
          <xs:pattern value="[iI][nN][tT][eE][gG][eE][rR]|[tT][eE][xX][tT]|[nN][oO][tT][eE]|[dD][aA][tT][eE][tT][iI][mM][eE]|[cC][oO][uU][nN][tT][eE][rR]|[cC][hH][oO][iI][cC][eE]|[lL][oO][oO][kK][uU][pP]|[bB][oO][oO][lL][eE][aA][nN]|[nN][uU][mM][bB][eE][rR]|[cC][uU][rR][rR][eE][nN][cC][yY]|[uU][rR][lL]|[cC][oO][mM][pP][uU][tT][eE][dD]|[tT][hH][rR][eE][aA][dD][iI][nN][gG]|[gG][uU][iI][dD]|[mM][uU][lL][tT][iI][cC][hH][oO][iI][cC][eE]|[gG][rR][iI][dD][cC][hH][oO][iI][cC][eE]|[cC][aA][lL][cC][uU][lL][aA][tT][eE][dD]|[fF][iI][lL][eE]|[aA][tT][tT][aA][cC][hH][mM][eE][nN][tT][sS]|[uU][sS][eE][rR]|[rR][eE][cC][uU][rR][rR][eE][nN][cC][eE]|[cC][rR][oO][sS][sS][pP][rR][oO][jJ][eE][cC][tT][lL][iI][nN][kK]|[mM][oO][dD][sS][tT][aA][tT]|[eE][rR][rR][oO][rR]|[cC][oO][nN][tT][eE][nN][tT][tT][yY][pP][eE][iI][dD]|[pP][aA][gG][eE][sS][eE][pP][aA][rR][aA][tT][oO][rR]|[tT][hH][rR][eE][aA][dD][iI][nN][dD][eE][xX]|[wW][oO][rR][kK][fF][lL][oO][wW][sS][tT][aA][tT][uU][sS]|[aA][lL][lL][dD][aA][yY][eE][vV][eE][nN][tT]|[wW][oO][rR][kK][fF][lL][oO][wW][eE][vV][eE][nN][tT][tT][yY][pP][eE]" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FieldRefType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Recurrence" />
          <xs:enumeration value="EventType" />
          <xs:enumeration value="UID" />
          <xs:enumeration value="RecurrenceId" />
          <xs:enumeration value="EventCancel" />
          <xs:enumeration value="StartDate" />
          <xs:enumeration value="EndDate" />
          <xs:enumeration value="RecurData" />
          <xs:enumeration value="Duration" />
          <xs:enumeration value="TimeZone" />
          <xs:enumeration value="XMLTZone" />
          <xs:enumeration value="CPLink" />
          <xs:enumeration value="LinkURL" />
          <xs:enumeration value="MasterSeriesItemID" />
          <xs:enumeration value="AllDayEvent" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FieldRichTextMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Compatible"/>
          <xs:enumeration value="FullHtml"/>
          <xs:enumeration value="HtmlAsXml"/>
          <xs:enumeration value="ThemeHtml"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FormType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DisplayForm" />
          <xs:enumeration value="EditForm" />
          <xs:enumeration value="NewForm" />
          <xs:enumeration value="NewFormDialog" />
          <xs:enumeration value="SolutionForm" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IMEMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="inactive" />
          <xs:enumeration value="auto" />
          <xs:enumeration value="active" />
          <xs:enumeration value="disabled" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IntNonNegative">
        <xs:restriction base="xs:int">
          <xs:minInclusive value="0" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IntPositive">
        <xs:restriction base="xs:int">
          <xs:minInclusive value="1" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="JoinType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INNER" />
          <xs:enumeration value="LEFT OUTER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ListTemplateBaseType">
        <xs:restriction base="xs:int">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
          <xs:enumeration value="3" />
          <xs:enumeration value="4" />
          <xs:enumeration value="5" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ListTemplateCategoryType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Libraries" />
          <xs:enumeration value="Communications" />
          <xs:enumeration value="Tracking" />
          <xs:enumeration value="Custom Lists" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RelativeFilePath">
        <xs:restriction base="xs:string" >
          <xs:minLength value="0" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RelativeUrl">
        <xs:restriction base="xs:string" >
          <xs:maxLength value="255" />
          <xs:minLength value="0" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="String255Chars">
        <xs:restriction base="xs:string">
          <xs:maxLength value="255" />
          <xs:minLength value="0" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TextDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ltr" />
          <xs:enumeration value="rtl" />
          <xs:enumeration value="none" />
          <xs:enumeration value="None" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ToolbarPosition">
        <xs:restriction base="xs:string">
          <xs:enumeration value="After" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ToolbarType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Standard" />
          <xs:enumeration value="FreeForm" />
          <xs:enumeration value="RelatedTasks" />
          <xs:enumeration value="None" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TRUEFALSE">
        <xs:restriction base="xs:string">
          <xs:pattern value="[Tt][Rr][Uu][Ee]|[Ff][Aa][Ll][Ss][Ee]"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="truefalse_Only_Lowercase">
        <xs:restriction base="xs:boolean">
          <xs:pattern value="true|false"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TRUE_Case_Insensitive_Else_Anything">
        <xs:restriction base="xs:string">
          <xs:pattern value="[Tt][Rr][Uu][Ee]|.*" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TRUE_Case_Sensitive_Else_Anything">
        <xs:restriction base="xs:string">
          <xs:pattern value="TRUE|.*" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TRUE_If_Present">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>
      <xs:simpleType name="TRUE_NegOne_Else_Anything">
        <xs:restriction base="xs:string">
          <xs:pattern value="(TRUE)|(\-1)|.*" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UniqueIdentifierWithBraces">
        <xs:restriction base="xs:string">
          <xs:pattern value="\{[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}\}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UniqueIdentifierWithOrWithoutBraces">
        <xs:restriction base="xs:string">
          <xs:pattern value="\{?[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}\}?"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UniqueIdentifierWithOrWithoutBracesWithOrWithoutDashes">
        <xs:restriction base="xs:string">
          <xs:pattern value="\{?[0-9a-fA-F]{8}\-?[0-9a-fA-F]{4}\-?[0-9a-fA-F]{4}\-?[0-9a-fA-F]{4}\-?[0-9a-fA-F]{12}\}?"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UniqueIdentifierWithoutBraces">
        <xs:restriction base="UniqueIdentifierWithoutBracesOrEmpty">
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UniqueIdentifierWithoutBracesOrEmpty">
        <xs:restriction base="xs:string">
          <xs:pattern value="[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}|"/>
          <xs:minLength value="0"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ViewModerationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Moderator" />
          <xs:enumeration value="Contributor" />
          <xs:enumeration value="HideUnapproved" />
          <xs:enumeration value="" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ViewPageLevel">
        <xs:restriction base="xs:int">
          <xs:enumeration value="1" />
          <xs:enumeration value="2" />
          <xs:enumeration value="255" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ViewScope">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Recursive" />
          <xs:enumeration value="RecursiveAll" />
          <xs:enumeration value="FilesOnly" />
          <xs:enumeration value="" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ViewType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="HTML" />
          <xs:enumeration value="GRID" />
          <xs:enumeration value="CALENDAR" />
          <xs:enumeration value="RECURRENCE" />
          <xs:enumeration value="CHART" />
          <xs:enumeration value="GANTT" />
          <xs:enumeration value="TABLE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AggregationsDefinition">
        <xs:sequence>
          <xs:element name="FieldRef" type="FieldRefDefinitionAggregation" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Value" type="AggregationsValue" use="optional"/>
      </xs:complexType>
      <xs:complexType name="CalendarViewStyleDefinition" mixed="true">
        <xs:all>
          <xs:element name="AccessKey" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="ImageName" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="ImageWidth" type="xs:int" minOccurs="0" maxOccurs="1" />
          <xs:element name="ImageHeight" type="xs:int" minOccurs="0" maxOccurs="1" />
        </xs:all>
        <xs:attribute name="Title" type="xs:string" />
        <xs:attribute name="Type" type="xs:string" />
        <xs:attribute name="Template" type="xs:string" />
        <xs:attribute name="Sequence" type="xs:int" />
        <xs:attribute name="Default" type="TRUEFALSE" default="FALSE"/>
      </xs:complexType>
      <xs:complexType name="CalendarViewStylesDefinition" mixed="true">
        <xs:sequence>
          <xs:element name="CalendarViewStyle" type="CalendarViewStyleDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CamlQueryRoot">
        <xs:all>
          <xs:element name="Where" type="LogicalJoinDefinition" minOccurs="0" maxOccurs="1" />
          <xs:element name="OrderBy" type="OrderByDefinition" minOccurs="0" maxOccurs="1" />
          <xs:element name="GroupBy" type="GroupByDefinition" minOccurs="0" maxOccurs="1" />
          <xs:element name="WithIndex" type="LogicalWithIndexDefinition" minOccurs="0" maxOccurs="1" />
        </xs:all>
      </xs:complexType>
      <xs:complexType name="CamlViewRoot" mixed="true">
        <xs:sequence>
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##any" processContents="skip" />
        </xs:sequence>
        <xs:anyAttribute processContents="skip" />
      </xs:complexType>
      <xs:complexType name="CHOICEDEFINITION" mixed="true">
        <xs:attribute name="JumpTo" type="xs:string" />
      </xs:complexType>
      <xs:complexType name="CHOICEDEFINITIONS">
        <xs:sequence>
          <xs:element name="CHOICE" type="CHOICEDEFINITION" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContentTypeDefinition">
        <xs:all>
          <xs:element name="Fields" type="FieldRefDefinitionCTs" minOccurs="0" maxOccurs="1" />
          <xs:element name="FieldRefs" type="FieldRefDefinitionCTs" minOccurs="0" maxOccurs="1" />
          <xs:element name="XmlDocuments" type="XmlDocumentDefinitionCollection" minOccurs="0" maxOccurs="1" />
          <xs:element name="Folder" type="FolderReference" minOccurs="0" maxOccurs="1" />
          <xs:element name="DocumentTemplate" type="ContentTypeDocumentTemplateDefinition" minOccurs="0" maxOccurs="1" />
        </xs:all>
        <xs:attribute name="ID" type="ContentTypeId" use="required" />
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="Group" type="xs:string" use="optional" />
        <xs:attribute name="ReadOnly" type="TRUE_NegOne_Else_Anything" use="optional" default="FALSE"/>
        <xs:attribute name="Hidden" type="TRUE_NegOne_Else_Anything" use="optional" default="FALSE"/>
        <xs:attribute name="Description" type="xs:string" use="optional" />
        <xs:attribute name="Sealed" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="V2ListTemplateName" type="xs:string" use="optional"/>
        <xs:attribute name="Version" type="IntNonNegative" use="optional" default="0" />
        <xs:attribute name="FeatureId" type="UniqueIdentifierWithBraces" use="optional" />
        <xs:attribute name="Edited" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="ProgId" type="xs:string" use="optional" />
        <xs:attribute name="RequireClientRenderingOnNew" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="TRUE" />
      </xs:complexType>
      <xs:complexType name="ContentTypeReference">
        <xs:all>
          <xs:element name="Folder" type="FolderReference" minOccurs="0" maxOccurs="1" />
          <xs:element name="DocumentTemplate" type="ContentTypeDocumentTemplateDefinition" minOccurs="0" maxOccurs="1" />
        </xs:all>
        <xs:attribute name="ID" type="ContentTypeId" use="required" />
        <xs:attribute name="Edited" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="FALSE" />
      </xs:complexType>
      <xs:complexType name="ContentTypeDocumentTemplateDefinition">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="TargetName" type="RelativeUrl" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="ExtendedLogicalJoinDefinition">
        <xs:sequence>
          <xs:choice minOccurs="2" maxOccurs="2">
            <xs:element name="And" type="ExtendedLogicalJoinDefinition" />
            <xs:element name="BeginsWith" type="LogicalTestDefinition" />
            <xs:element name="Contains" type="LogicalTestDefinition" />
            <xs:element name="DateRangesOverlap" type="LogicalTestDefinitionDateRange" />
            <xs:element name="Eq" type="LogicalTestDefinition" />
            <xs:element name="Geq" type="LogicalTestDefinition" />
            <xs:element name="Gt" type="LogicalTestDefinition" />
            <xs:element name="In" type="LogicalTestInValuesDefinition" />
            <xs:element name="Includes" type="LogicalTestDefinition" />
            <xs:element name="IsNull" type="LogicalNullDefinition" />
            <xs:element name="IsNotNull" type="LogicalNullDefinition" />
            <xs:element name="Leq" type="LogicalTestDefinition" />
            <xs:element name="Lt" type="LogicalTestDefinition" />
            <xs:element name="Membership" type="MembershipDefinition" />
            <xs:element name="Neq" type="LogicalTestDefinition" />
            <xs:element name="NotIncludes" type="LogicalTestDefinition" />
            <xs:element name="Or" type="ExtendedLogicalJoinDefinition" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FieldDefinition" mixed="true">
        <xs:all>
          <xs:element name="CHOICES" type="CHOICEDEFINITIONS" minOccurs="0" maxOccurs="1" />
          <xs:element name="Customization" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:sequence>
                <xs:any minOccurs="1" maxOccurs="1" namespace="##any" processContents="skip" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Default" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="DefaultFormula" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="DefaultFormulaValue" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="DisplayBidiPattern" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="DisplayPattern" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="FieldRefs" minOccurs="0" maxOccurs="1">
            <xs:complexType mixed="true">
              <xs:sequence>
                <xs:element name="FieldRef" type="FieldRefDefinitionField" minOccurs="0" maxOccurs="unbounded" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Formula" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="MAPPINGS" type="MAPPINGDEFINITIONS" minOccurs="0" maxOccurs="1" />
          <xs:element name="ParserRefs" type="FieldParserRefs" minOccurs="0" maxOccurs="1" />
        </xs:all>
        <xs:attribute name="Aggregation" type="FieldAggregationAttribute" default="first"/>
        <xs:attribute name="aggregation" type="xs:string" />
        <xs:attribute name="AllowDeletion" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="AllowHyperlink" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="AllowMultiVote" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="AppendOnly" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="AuthoringInfo" type="xs:string" default=""/>
        <xs:attribute name="BaseRenderingType" type="FieldInternalType" />
        <xs:attribute name="BaseType" type="FieldInternalType" default="Text" />
        <xs:attribute name="Calculated" type="xs:string" />
        <xs:attribute name="CalType" type="xs:int" />
        <xs:attribute name="CalendarType" type="xs:int" />
        <xs:attribute name="CanToggleHidden" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="CountRelated" type="TRUE_If_Present" default="FALSE" />
        <xs:attribute name="ClassInfo" type="xs:string" default="" />
        <xs:attribute name="ColName" type="xs:string" />
        <xs:attribute name="ColName2" type="xs:string" />
        <xs:attribute name="Commas" type="TRUEFALSE" />
        <xs:attribute name="Customization" type="xs:string" />
        <xs:attribute name="Decimals" type="xs:int" default="-1"/>
        <xs:attribute name="DefaultURLDesc" type="xs:string" />
        <xs:attribute name="Description" type="xs:string" />
        <xs:attribute name="Direction" type="TextDirection" default="none" />
        <xs:attribute name="Dir" type="xs:string" />
        <xs:attribute name="DisplaceOnUpgrade" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="DisplayImage" type="xs:string" />
        <xs:attribute name="DisplayName" type="xs:string" />
        <xs:attribute name="DisplayNameSrcField" type="xs:string" />
        <xs:attribute name="DisplaySize" type="xs:int" />
        <xs:attribute name="Div" type="xs:string" default="1.0" />
        <xs:attribute name="EnableLookup" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ExceptionImage" type="xs:string" />
        <xs:attribute name="Ext" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="FieldRef" type="xs:string" />
        <xs:attribute name="FillInChoice" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Filterable" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="FilterableNoRecurrence" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ForcedDisplay" type="xs:string" />
        <xs:attribute name="Format" type="xs:string" />
        <xs:attribute name="FromBaseType" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="GridEndNum" type="xs:int" />
        <xs:attribute name="GridNATxt" type="xs:string" default="" />
        <xs:attribute name="GridStartNum" type="IntPositive" />
        <xs:attribute name="GridTxtRng1" type="xs:string" default="" />
        <xs:attribute name="GridTxtRng2" type="xs:string" default="" />
        <xs:attribute name="GridTxtRng3" type="xs:string" default="" />
        <xs:attribute name="Group" type="xs:string" />
        <xs:attribute name="HeaderImage" type="xs:string" />
        <xs:attribute name="Height" type="xs:int" />
        <xs:attribute name="Hidden" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" />
        <xs:attribute name="Id" type="xs:string" />
        <xs:attribute name="IMEMode" type="IMEMode" />
        <xs:attribute name="Indexed" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ImnHeader" type="xs:string" />
        <xs:attribute name="IsolateStyles" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="JoinColName" type="xs:string" default="tp_ID" />
        <xs:attribute name="JoinRowOrdinal" type="xs:int" fixed="0" />
        <xs:attribute name="JoinType" type="JoinType" default="LEFT OUTER" />
        <xs:attribute name="JumpTo" type="xs:string" />
        <xs:attribute name="JumpToFillinChoice" type="xs:string" />
        <xs:attribute name="JumpToNo" type="xs:string" />
        <xs:attribute name="JumpToYes" type="xs:string" />
        <xs:attribute name="LCID" type="xs:int" />
        <xs:attribute name="List" type="xs:string" />
        <xs:attribute name="Max" type="xs:float" />
        <xs:attribute name="MaxLength" type="xs:int" />
        <xs:attribute name="maxLength" type="xs:string" />
        <xs:attribute name="Min" type="xs:string" />
        <xs:attribute name="Mult" type="xs:string" />
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="NegativeFormat" type="xs:string" />
        <xs:attribute name="node" type="xs:string" />
        <xs:attribute name="Node" type="xs:string" />
        <xs:attribute name="NoEditFormBreak" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="NumLines" type="xs:string" default="6" />
        <xs:attribute name="Percentage" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PIAttribute" type="xs:string" />
        <xs:attribute name="PIN" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PITarget" type="xs:string" />
        <xs:attribute name="PrependId" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Presence" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PreviousName" type="xs:string" />
        <xs:attribute name="PrimaryKey" type="TRUEFALSE" />
        <xs:attribute name="PrimaryPIAttribute" type="xs:string" />
        <xs:attribute name="PrimaryPITarget" type="xs:string" />
        <xs:attribute name="ReadOnly" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ReadOnlyEnforced" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RenderXMLUsingPattern" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Required" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RestrictedMode" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="ResultType" type="FieldInternalType" />
        <xs:attribute name="ResyncOnChange" type="TRUEFALSE" default="FALSE"/>
        <xs:attribute name="RichText" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RichTextMode" type="FieldRichTextMode" default="Compatible" />
        <xs:attribute name="RowOrdinal" type="xs:int" default="0" />
        <xs:attribute name="RowOrdinal2" type="xs:int" default="0" />
        <xs:attribute name="Sealed" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="SeparateLine" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="SetAs" type="xs:string" />
        <xs:attribute name="ShowAddressBookButton" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ShowField" type="xs:string" />
        <xs:attribute name="ShowInDisplayForm" type="TRUEFALSE" />
        <xs:attribute name="ShowInEditForm" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="ShowInFileDialog" type="TRUEFALSE" />
        <xs:attribute name="ShowInFileDlg" type="TRUEFALSE" />
        <xs:attribute name="ShowInListSettings" type="TRUEFALSE" />
        <xs:attribute name="ShowInNewForm" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="ShowInVersionHistory" type="TRUEFALSE" />
        <xs:attribute name="ShowInViewForms" type="TRUEFALSE" />
        <xs:attribute name="Sortable" type="TRUEFALSE" />
        <xs:attribute name="SourceID" type="xs:string" />
        <xs:attribute name="StaticName" type="xs:string" />
        <xs:attribute name="StorageTZ" type="xs:string" />
        <xs:attribute name="StripWS" type="xs:string" />
        <xs:attribute name="SuppressNameDisplay" type="TRUEFALSE" />
        <xs:attribute name="TextOnly" type="TRUEFALSE" />
        <xs:attribute name="Title" type="xs:string" />
        <xs:attribute name="TitleField" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Type" type="xs:string" use="required" />
        <xs:attribute name="UniqueId" type="xs:string" />
        <xs:attribute name="UnlimitedLengthInDocumentLibrary" type="TRUEFALSE" />
        <xs:attribute name="URLEncode" type="TRUEFALSE" />
        <xs:attribute name="URLEncodeAsURL" type="TRUEFALSE" />
        <xs:attribute name="UserSelectionMode" type="xs:string" />
        <xs:attribute name="UserSelectionScope" type="xs:int" />
        <xs:attribute name="Version" type="xs:int" default="0" />
        <xs:attribute name="Viewable" type="FALSE_Case_Insensitive_Else_Anything" />
        <xs:attribute name="WebId" type="UniqueIdentifierWithoutBraces" />
        <xs:attribute name="Width" type="xs:int" />
        <xs:attribute name="WikiLinking" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="WorkflowStatusURL" type="xs:string" use="optional" />
        <xs:attribute name="XName" type="xs:string" />
        <xs:anyAttribute processContents="skip" />
      </xs:complexType>
      <xs:complexType name="FieldDefinitionCTRemove">
        <xs:complexContent>
          <xs:extension base="FieldDefinition"/>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldDefinitionDatabase">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="FieldRef" type="FieldRefDefinitionTP" />
            <xs:element name="Field" type="FieldDefinitionTP" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FieldDefinitionDatabaseWithVersion" mixed="true">
        <xs:all>
          <xs:element name="tp_Fields" type="FieldDefinitionDatabase" minOccurs="1" maxOccurs="1"/>
        </xs:all>
      </xs:complexType>
      <xs:complexType name="FieldDefinitions">
        <xs:sequence>
          <xs:element name="Field" type="FieldDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FieldDefinitionTP" mixed="true">
        <xs:all>
          <xs:element name="CHOICES" type="CHOICEDEFINITIONS" minOccurs="0" maxOccurs="1" />
          <xs:element name="Customization" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:sequence>
                <xs:any minOccurs="1" maxOccurs="1" namespace="##any" processContents="skip" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Default" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="DefaultFormula" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="DisplayBidiPattern" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="DisplayPattern" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="FieldRefs" minOccurs="0" maxOccurs="1">
            <xs:complexType mixed="true">
              <xs:sequence>
                <xs:element name="FieldRef" type="FieldRefDefinitionField" minOccurs="0" maxOccurs="unbounded" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Formula" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="MAPPINGS" type="MAPPINGDEFINITIONS" minOccurs="0" maxOccurs="1" />
          <xs:element name="ParserRefs" type="FieldParserRefs" minOccurs="0" maxOccurs="1" />
        </xs:all>
        <xs:attribute name="Aggregation" type="FieldAggregationAttribute" default="first"/>
        <xs:attribute name="aggregation" type="xs:string" />
        <xs:attribute name="AllowDeletion" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="AllowHyperlink" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="AllowMultiVote" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="AppendOnly" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="AuthoringInfo" type="xs:string" default=""/>
        <xs:attribute name="BaseRenderingType" type="FieldInternalType" />
        <xs:attribute name="BaseType" type="FieldInternalType" default="Text" />
        <xs:attribute name="Calculated" type="xs:string" />
        <xs:attribute name="CalType" type="xs:int" />
        <xs:attribute name="CalendarType" type="xs:int" />
        <xs:attribute name="CanToggleHidden" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="CountRelated" type="TRUE_If_Present" default="FALSE" />
        <xs:attribute name="ClassInfo" type="xs:string" default="" />
        <xs:attribute name="ColName" type="xs:string" />
        <xs:attribute name="ColName2" type="xs:string" />
        <xs:attribute name="Commas" type="TRUEFALSE" />
        <xs:attribute name="Customization" type="xs:string" />
        <xs:attribute name="Decimals" type="xs:int" default="-1"/>
        <xs:attribute name="DefaultURLDesc" type="xs:string" />
        <xs:attribute name="Description" type="xs:string" />
        <xs:attribute name="Direction" type="TextDirection" default="none" />
        <xs:attribute name="Dir" type="xs:string" />
        <xs:attribute name="DisplaceOnUpgrade" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="DisplayImage" type="xs:string" />
        <xs:attribute name="DisplayName" type="xs:string" />
        <xs:attribute name="DisplayNameSrcField" type="xs:string" />
        <xs:attribute name="DisplaySize" type="xs:int" />
        <xs:attribute name="Div" type="xs:string" default="1.0" />
        <xs:attribute name="EnableLookup" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ExceptionImage" type="xs:string" />
        <xs:attribute name="Ext" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="FieldRef" type="xs:string" />
        <xs:attribute name="FillInChoice" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Filterable" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="FilterableNoRecurrence" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ForcedDisplay" type="xs:string" />
        <xs:attribute name="Format" type="xs:string" />
        <xs:attribute name="FromBaseType" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="GridEndNum" type="xs:int" />
        <xs:attribute name="GridNATxt" type="xs:string" default="" />
        <xs:attribute name="GridStartNum" type="IntPositive" />
        <xs:attribute name="GridTxtRng1" type="xs:string" default="" />
        <xs:attribute name="GridTxtRng2" type="xs:string" default="" />
        <xs:attribute name="GridTxtRng3" type="xs:string" default="" />
        <xs:attribute name="Group" type="xs:string" />
        <xs:attribute name="HeaderImage" type="xs:string" />
        <xs:attribute name="Height" type="xs:int" />
        <xs:attribute name="Hidden" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" />
        <xs:attribute name="Id" type="xs:string" />
        <xs:attribute name="IMEMode" type="IMEMode" />
        <xs:attribute name="Indexed" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ImnHeader" type="xs:string" />
        <xs:attribute name="IsolateStyles" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="JoinColName" type="xs:string" default="tp_ID" />
        <xs:attribute name="JoinRowOrdinal" type="xs:int" fixed="0" />
        <xs:attribute name="JoinType" type="JoinType" default="LEFT OUTER" />
        <xs:attribute name="JumpTo" type="xs:string" />
        <xs:attribute name="JumpToFillinChoice" type="xs:string" />
        <xs:attribute name="JumpToNo" type="xs:string" />
        <xs:attribute name="JumpToYes" type="xs:string" />
        <xs:attribute name="LCID" type="xs:int" />
        <xs:attribute name="List" type="xs:string" />
        <xs:attribute name="Max" type="xs:float" />
        <xs:attribute name="MaxLength" type="xs:int" />
        <xs:attribute name="maxLength" type="xs:string" />
        <xs:attribute name="Min" type="xs:string" />
        <xs:attribute name="Mult" type="xs:string" />
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="NegativeFormat" type="xs:string" />
        <xs:attribute name="node" type="xs:string" />
        <xs:attribute name="Node" type="xs:string" />
        <xs:attribute name="NoEditFormBreak" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="NumLines" type="xs:string" default="6" />
        <xs:attribute name="Percentage" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PIAttribute" type="xs:string" />
        <xs:attribute name="PIN" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PITarget" type="xs:string" />
        <xs:attribute name="PrependId" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Presence" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PreviousName" type="xs:string" />
        <xs:attribute name="PrimaryKey" type="TRUEFALSE" />
        <xs:attribute name="PrimaryPIAttribute" type="xs:string" />
        <xs:attribute name="PrimaryPITarget" type="xs:string" />
        <xs:attribute name="ReadOnly" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ReadOnlyEnforced" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RenderXMLUsingPattern" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Required" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RestrictedMode" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="ResultType" type="FieldInternalType" />
        <xs:attribute name="ResyncOnChange" type="TRUEFALSE" default="FALSE"/>
        <xs:attribute name="RichText" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RichTextMode" type="FieldRichTextMode" default="Compatible" />
        <xs:attribute name="RowOrdinal" type="xs:int" default="0" />
        <xs:attribute name="RowOrdinal2" type="xs:int" default="0" />
        <xs:attribute name="Sealed" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="SeparateLine" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="SetAs" type="xs:string" />
        <xs:attribute name="ShowAddressBookButton" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ShowField" type="xs:string" />
        <xs:attribute name="ShowInDisplayForm" type="TRUEFALSE" />
        <xs:attribute name="ShowInEditForm" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="ShowInFileDialog" type="TRUEFALSE" />
        <xs:attribute name="ShowInFileDlg" type="TRUEFALSE" />
        <xs:attribute name="ShowInListSettings" type="TRUEFALSE" />
        <xs:attribute name="ShowInNewForm" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="ShowInVersionHistory" type="TRUEFALSE" />
        <xs:attribute name="ShowInViewForms" type="TRUEFALSE" />
        <xs:attribute name="Sortable" type="TRUEFALSE" />
        <xs:attribute name="SourceID" type="xs:string" />
        <xs:attribute name="StaticName" type="xs:string" />
        <xs:attribute name="StorageTZ" type="xs:string" />
        <xs:attribute name="StripWS" type="xs:string" />
        <xs:attribute name="SuppressNameDisplay" type="TRUEFALSE" />
        <xs:attribute name="TextOnly" type="TRUEFALSE" />
        <xs:attribute name="Title" type="xs:string" />
        <xs:attribute name="TitleField" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Type" type="xs:string" use="optional" />
        <xs:attribute name="UniqueId" type="xs:string" />
        <xs:attribute name="UnlimitedLengthInDocumentLibrary" type="TRUEFALSE" />
        <xs:attribute name="URLEncode" type="TRUEFALSE" />
        <xs:attribute name="URLEncodeAsURL" type="TRUEFALSE" />
        <xs:attribute name="UserSelectionMode" type="xs:string" />
        <xs:attribute name="UserSelectionScope" type="xs:int" />
        <xs:attribute name="Version" type="xs:int" default="0" />
        <xs:attribute name="Viewable" type="FALSE_Case_Insensitive_Else_Anything" />
        <xs:attribute name="WebId" type="UniqueIdentifierWithoutBraces" />
        <xs:attribute name="Width" type="xs:int" />
        <xs:attribute name="WikiLinking" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="WorkflowStatusURL" type="xs:string" use="optional" />
        <xs:attribute name="XName" type="xs:string" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="FieldParserRef">
        <xs:attribute name="Name" type="xs:string" />
        <xs:attribute name="ProgId" type="xs:string" />
      </xs:complexType>
      <xs:complexType name="FieldParserRefs">
        <xs:sequence>
          <xs:element name="ParserRef" type="FieldParserRef" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionAggregation">
        <xs:attribute name="Name" type="xs:string" use="required"/>
        <xs:attribute name="Type" type="AggregationsType" use="required"/>
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionCT">
        <xs:all>
          <xs:element name="Default" type="xs:string" minOccurs="0" maxOccurs="1" />
        </xs:all>
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="optional" />
        <xs:attribute name="Required" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="Hidden" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="Customization" type="xs:string" use="optional" />
        <xs:attribute name="ShowInNewForm" type="FALSE_Case_Insensitive_Else_Anything" use="optional" default="TRUE" />
        <xs:attribute name="ShowInEditForm" type="FALSE_Case_Insensitive_Else_Anything" use="optional" default="TRUE" />
        <xs:attribute name="DisplayName" type="xs:string" use="optional" />
        <xs:attribute name="ReadOnly" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="PITarget" type="xs:string" use="optional" />
        <xs:attribute name="PrimaryPITarget" type="xs:string" use="optional" />
        <xs:attribute name="PIAttribute" type="xs:string" use="optional" />
        <xs:attribute name="PrimaryPIAttribute" type="xs:string" use="optional" />
        <xs:attribute name="Aggregation" type="xs:string" use="optional" />
        <xs:attribute name="Node" type="xs:string" use="optional" />
        <xs:attribute name="Format" type="xs:string" use="optional" />
        <xs:attribute name="NumLines" type="xs:string" default="6" />
        <xs:attribute name="Sealed" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="Sortable" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="TRUE" />
        <xs:attribute name="FromBaseType" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="Filterable" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="TRUE" />
        <xs:attribute name="FilterableNoRecurrence" type="TRUE_Case_Sensitive_Else_Anything" use="optional" default="FALSE" />
        <xs:attribute name="ShowInDisplayForm" use="optional" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ShowInFileDlg" type="FALSE_Case_Insensitive_Else_Anything" use="optional" default="TRUE" />
        <xs:attribute name="ShowInListSettings" use="optional" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Description" type="xs:string" use="optional" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionCTs" mixed="true" >
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="FieldRef" type="FieldRefDefinitionCT" />
            <xs:element name="Field" type="FieldDefinitionCTRemove" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionField" mixed="true" >
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="optional" />
        <xs:attribute name="ShowField" type="xs:string" use="optional" />
        <xs:attribute name="RefType" type="FieldRefType" use="optional" />
        <xs:attribute name="CreateURL" type="xs:string" use="optional" />
        <xs:attribute name="Key" type="xs:string" use="optional" />
        <xs:attribute name="DisplayName" type="xs:string" use="optional" />
        <xs:attribute name="Format" type="xs:string" use="optional" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionGroupBy">
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="optional" />
        <xs:attribute name="Name" type="xs:string" />
        <xs:attribute name="Ascending" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionOrderBy">
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="optional" />
        <xs:attribute name="Name" type="xs:string" use="optional" />
        <xs:attribute name="Ascending" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionQueryDate">
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="optional" />
        <xs:attribute name="Name" type="xs:string" use="optional" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionQueryNull">
        <xs:attribute name="Name" type="xs:string" use="required" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionQueryTest">
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="optional" />
        <xs:attribute name="Name" type="xs:string" use="optional" />
        <xs:attribute name="LookupId" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionTP">
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="ColName" type="xs:string" use="optional" />
        <xs:attribute name="ColName2" type="xs:string" use="optional" />
        <xs:attribute name="RowOrdinal" type="xs:int" default="0" use="optional" />
        <xs:attribute name="RowOrdinal2" type="xs:int" default="0" use="optional" />
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="optional" />
        <xs:attribute name="SourceID" type="xs:string" use="optional" />
        <xs:attribute name="StaticName" type="xs:string" use="optional" />
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionView">
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="Explicit" type="TRUE_If_Present" use="optional" default="FALSE"/>
      </xs:complexType>
      <xs:complexType name="FieldRefDefinitionViewData">
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="Type" type="xs:string" use="required" />
      </xs:complexType>
      <xs:complexType name="FolderReference">
        <xs:sequence />
        <xs:attribute name="TargetName" type="RelativeUrl" use="required" />
      </xs:complexType>
      <xs:complexType name="FormatDefDefinition">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="Type" type="xs:string" use="required" />
            <xs:attribute name="Value" type="xs:string" use="required" />
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="FormatDefinition">
        <xs:sequence>
          <xs:element name="FormatDef" type="FormatDefDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string" use="required" />
      </xs:complexType>
      <xs:complexType name="FormDefinition">
        <xs:all>
          <xs:element name="ListFormOpening" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ListFormButtons" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ListFormBody" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ListFormClosing" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
        </xs:all>
        <xs:attribute name="Path" type="RelativeFilePath" />
        <xs:attribute name="SetupPath" type="RelativeFilePath" />
        <xs:attribute name="Url" type="RelativeUrl" />
        <xs:attribute name="Type" type="FormType" />
        <xs:attribute name="UseLegacyForm" type="TRUEFALSE" default="FALSE"/>
        <xs:attribute name="Template" type="xs:string" />
        <xs:attribute name="WebPartZoneID" type="xs:string" />
        <xs:attribute name="FormID" type="xs:int" default="0" />
        <xs:attribute name="Name" type="UniqueIdentifierWithBraces" />
        <xs:attribute name="ToolbarTemplate" type="xs:string" />
        <xs:attribute name="Default" type="TRUEFALSE" default="FALSE" />
      </xs:complexType>
      <xs:complexType name="FormDefinitions">
        <xs:sequence>
          <xs:element name="Form" type="FormDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GroupByDefinition">
        <xs:sequence>
          <xs:element name="FieldRef" type="FieldRefDefinitionGroupBy" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Collapse" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE"/>
        <xs:attribute name="GroupLimit" type="IntNonNegative" use="optional" default="100"/>
      </xs:complexType>    
      <xs:complexType name="ListFormSet">
        <xs:sequence>
          <xs:element name="Form" type="FormDefinition" minOccurs="0" maxOccurs="4" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ListMetaDataDefault">
        <xs:sequence>
          <xs:element name="Forms" type="ListFormSet" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ListSecurity">
        <xs:all>
          <xs:element name="ReadSecurity" type="xs:int" minOccurs="0" maxOccurs="1" />
          <xs:element name="WriteSecurity" type="xs:int" minOccurs="0" maxOccurs="1" />
          <xs:element name="SchemaSecurity" type="xs:int" minOccurs="0" maxOccurs="1" />
        </xs:all>
      </xs:complexType>
      <xs:complexType name="ListTemplateDefinition">
        <xs:attribute name="AllowDeletion" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="AllowEveryoneViewItems" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="AlwaysIncludeContent" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="BaseType" type="ListTemplateBaseType" use="required" />
        <xs:attribute name="CacheSchema" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Catalog" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Category" type="ListTemplateCategoryType" />
        <xs:attribute name="Description" type="xs:string" />
        <xs:attribute name="DisableAttachments" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="DisallowContentTypes" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="DisplayName" type="xs:string" />
        <xs:attribute name="DocumentTemplate" type="xs:int" />
        <xs:attribute name="DontSaveInTemplate" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="DraftVersionVisibility" type="xs:int" default="0" />
        <xs:attribute name="EditPage" type="xs:string" />
        <xs:attribute name="EmailAssignTo" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="EnableContentTypes" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="EnableMinorVersions" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="EnableThumbnails" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="FeatureId" type="UniqueIdentifierWithOrWithoutBracesWithOrWithoutDashes" />
        <xs:attribute name="FolderCreation" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="ForceCheckout" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Hidden" type="TRUEFALSE" default="FALSE"/>
        <xs:attribute name="HiddenList" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Image" type="RelativeUrl" />
        <xs:attribute name="MajorVersionLimit" type="IntNonNegative" use="optional" />
        <xs:attribute name="MajorWithMinorVersionsLimit" type="IntNonNegative" use="optional" />
        <xs:attribute name="ModeratedList" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="MultipleMtgDataList" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="MustSaveRootFiles" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Name" type="xs:string" />
        <xs:attribute name="NewPage" type="xs:string" />
        <xs:attribute name="NoCrawl" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="OnQuickLaunch" type="TRUEFALSE" />
        <xs:attribute name="OrderedList" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Path" type="xs:string" />
        <xs:attribute name="PrivateList" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PublicList" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RootWebOnly" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="SecurityBits" type="xs:string" />
        <xs:attribute name="SetupPath" type="RelativeFilePath" />
        <xs:attribute name="Sequence" type="xs:int" />
        <xs:attribute name="SyncType" type="xs:string" />
        <xs:attribute name="ThumbnailSize" type="xs:int" default="0" />
        <xs:attribute name="Type" type="xs:int" use="required"/>
        <xs:attribute name="Unique" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="UseRootFolderForNavigation" type="TRUEFALSE" />
        <xs:attribute name="VersioningEnabled" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="WebImageHeight" type="xs:int" default="0" />
        <xs:attribute name="WebImageWidth" type="xs:int" default="0" />
      </xs:complexType>
      <xs:complexType name="ListTemplateDefinitions" mixed="true">
        <xs:sequence>
          <xs:element name="ListTemplate" type="ListTemplateDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LogicalJoinDefinition">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="And" type="ExtendedLogicalJoinDefinition" />
          <xs:element name="BeginsWith" type="LogicalTestDefinition" />
          <xs:element name="Contains" type="LogicalTestDefinition" />
          <xs:element name="DateRangesOverlap" type="LogicalTestDefinitionDateRange" />
          <xs:element name="Eq" type="LogicalTestDefinition" />
          <xs:element name="Geq" type="LogicalTestDefinition" />
          <xs:element name="Gt" type="LogicalTestDefinition" />
          <xs:element name="In" type="LogicalTestInValuesDefinition" />
          <xs:element name="Includes" type="LogicalTestDefinition" />
          <xs:element name="IsNotNull" type="LogicalNullDefinition" />
          <xs:element name="IsNull" type="LogicalNullDefinition" />
          <xs:element name="Leq" type="LogicalTestDefinition" />
          <xs:element name="Lt" type="LogicalTestDefinition" />
          <xs:element name="Membership" type="MembershipDefinition" />
          <xs:element name="Neq" type="LogicalTestDefinition" />
          <xs:element name="NotIncludes" type="LogicalTestDefinition" />
          <xs:element name="Or" type="ExtendedLogicalJoinDefinition" />
        </xs:choice>
      </xs:complexType>
      <xs:complexType name="LogicalNullDefinition">
        <xs:all>
          <xs:element name="FieldRef" type="FieldRefDefinitionQueryNull" minOccurs="1" maxOccurs="1" />
        </xs:all>
      </xs:complexType>
      <xs:complexType name="LogicalTestDefinition">
        <xs:all>
          <xs:element name="FieldRef" type="FieldRefDefinitionQueryTest" minOccurs="1" maxOccurs="1" />
          <xs:element name="Value" type="ValueDefinition" minOccurs="1" maxOccurs="1" />
        </xs:all>
      </xs:complexType>
      <xs:complexType name="LogicalTestDefinitionDateRange">
        <xs:sequence>
          <xs:element name="FieldRef" type="FieldRefDefinitionQueryDate" minOccurs="2" maxOccurs="3" />
          <xs:element name="Value" type="ValueDefinitionDateRange" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MAPPINGDEFINITION">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="Value" type="xs:string" />
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="MAPPINGDEFINITIONS">
        <xs:sequence>
          <xs:element name="MAPPING" type="MAPPINGDEFINITION" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MembershipDefinition">
        <xs:complexContent>
          <xs:extension base="LogicalNullDefinition">
            <xs:attribute name="Type" type="xs:string" use="optional" />
            <xs:attribute name="ID" type="xs:integer" use="optional" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OrderByDefinition">
        <xs:sequence>
          <xs:element name="FieldRef" type="FieldRefDefinitionOrderBy" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Override" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE"/>
      </xs:complexType>
      <xs:complexType name="RowLimitDefinition">
        <xs:simpleContent>
          <xs:extension base="xs:int">
            <xs:attribute name="Paged" type="TRUE_Case_Insensitive_Else_Anything" use="optional" default="FALSE"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="ToolbarDefinition">
        <xs:complexContent>
          <xs:extension base="CamlViewRoot">
            <xs:attribute name="Position" type="ToolbarPosition" />
            <xs:attribute name="Type" type="ToolbarType" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ValueDefinition" mixed="true">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any namespace="##any" processContents="skip" />
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="Type" type="xs:string" use="optional" />
      </xs:complexType>
      <xs:complexType name="ValueDefinitionDateRange" mixed="true">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="1">
            <xs:element name="Month">
              <xs:complexType />
            </xs:element>
            <xs:element name="Now">
              <xs:complexType />
            </xs:element>
            <xs:element name="Today">
              <xs:complexType />
            </xs:element>
            <xs:element name="Week">
              <xs:complexType />
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="Type" type="xs:string" use="optional" />
        <xs:attribute name="IncludeTimeValue" type="TRUEFALSE" use="optional" />
        <xs:attribute name="StorageTZ" type="TRUEFALSE" use="optional" />
      </xs:complexType>
      <xs:complexType name="ViewDefinition">
        <xs:group ref="ViewDefinitionChildElementGroup"/>
        <xs:attribute name="AggregateView" type="TRUEFALSE"  default="FALSE"/>
        <xs:attribute name="BaseViewID" type="xs:int" />
        <xs:attribute name="CssStyleSheet" type="xs:string" />
        <xs:attribute name="DefaultView" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="DisplayName" type="xs:string" />
        <xs:attribute name="FailIfEmpty" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="FileDialog" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="FPModified" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="Hidden" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="List" type="UniqueIdentifierWithoutBraces" />
        <xs:attribute name="Name" type="UniqueIdentifierWithBraces" />
        <xs:attribute name="ContentTypeID" type="ContentTypeId" />
        <xs:attribute name="OrderedView" type="TRUEFALSE" />
        <xs:attribute name="DefaultViewForContentType" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="IncludeRootFolder" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="PageType" type="xs:string" />
        <xs:attribute name="Path" type="RelativeFilePath" />
        <xs:attribute name="Personal" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ReadOnly" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RecurrenceRowset" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="RequiresClientIntegration" type="TRUEFALSE" default="FALSE"/>
        <xs:attribute name="RowLimit" type="xs:int" />
        <xs:attribute name="ShowHeaderUI" type="TRUEFALSE"  default="FALSE" />
        <xs:attribute name="Type" type="ViewType" default="HTML"/>
        <xs:attribute name="Url" type="RelativeUrl" />
        <xs:attribute name="UseSchemaXmlToolbar" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="WebPartOrder" type="xs:int" />
        <xs:attribute name="WebPartZoneID" type="xs:string" />
        <xs:attribute name="FreeForm" type="TRUEFALSE" />
        <xs:attribute name="ImageUrl" type="xs:string" />
        <xs:attribute name="SetupPath" type="RelativeFilePath" />
        <xs:attribute name="ToolbarTemplate" type="xs:string" />
        <xs:attribute name="MobileView" type="TRUEFALSE" default="FALSE"/>
        <xs:attribute name="MobileDefaultView" type="TRUEFALSE" />
        <xs:attribute name="MobileUrl" type="RelativeUrl" />
        <xs:attribute name="Level" type="ViewPageLevel" default="1" />
        <xs:attribute name="FrameState" type="xs:string" default="Normal" />
        <xs:attribute name="IsIncluded" type="TRUEFALSE" default="TRUE" />
        <xs:attribute name="IncludeVersions" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="HackLockWeb" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="ModerationType" type="ViewModerationType" default="" />
        <xs:attribute name="Scope" type="ViewScope" default="" />
        <xs:attribute name="Threaded" type="TRUEFALSE" default="FALSE" />
        <xs:attribute name="TabularView" type="FALSE_Case_Insensitive_Else_Anything" default="TRUE" />
      </xs:complexType>
      <xs:group name="ViewDefinitionChildElementGroup">
        <xs:all>
          <xs:element name="PagedRowset" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="Toolbar" type="ToolbarDefinition" minOccurs="0" maxOccurs="1" />
          <xs:element name="Query" type="CamlQueryRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ViewFields" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="FieldRef" type="FieldRefDefinitionView" minOccurs="0" maxOccurs="unbounded" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="GroupByHeader" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="GroupByFooter" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ViewHeader" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ViewBody" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ViewFooter" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="RowLimitExceeded" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ViewEmpty" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="PagedRecurrenceRowset" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="PagedClientCallbackRowset" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="Aggregations" type="AggregationsDefinition" minOccurs="0" maxOccurs="1" />
          <xs:element name="OpenApplicationExtension" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="RowLimit" type="RowLimitDefinition" minOccurs="0" maxOccurs="1" default="2147483647" />
          <xs:element name="MobileItemLimit " type="RowLimitDefinition" minOccurs="0" maxOccurs="1" default="2147483647" />
          <xs:element name="ViewStyle" type="ViewStyleReference" minOccurs="0" maxOccurs="1" />
          <xs:element name="CalendarViewStyles" type="CalendarViewStylesDefinition" minOccurs="0" maxOccurs="1" />
          <xs:element name="ViewBidiHeader" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="Script" type="CamlViewRoot" minOccurs="0" maxOccurs="1" />
          <xs:element name="ViewData" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="FieldRef" type="FieldRefDefinitionViewData" minOccurs="3" maxOccurs="5" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Formats" type="ViewFormatDefinitions" minOccurs="0" maxOccurs="1" />
        </xs:all>
      </xs:group>
      <xs:complexType name="ViewDefinitions">
        <xs:sequence>
          <xs:element name="View" type="ViewDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ViewFormatDefinitions">
        <xs:sequence>
          <xs:element name="FormatDef" type="FormatDefDefinition" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="Format" type="FormatDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ViewStyleReference">
        <xs:attribute name="ID" type="xs:int" use="optional" />
      </xs:complexType>
      <xs:complexType name="XmlDocumentDefinition" mixed="true">
        <!--If using anyType, the getContentTypeResult.ContentType.XmlDocuments[0].Text is null-->
        <!--<xs:complexContent>
          <xs:restriction base="xs:anyType">-->
        <xs:sequence>
          <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="skip" />
        </xs:sequence>
        <xs:attribute name="NamespaceURI" type="xs:string" use="required" />
        <!--</xs:restriction>
        </xs:complexContent>-->
      </xs:complexType>
      <xs:complexType name="XmlDocumentDefinitionCollection">
        <xs:sequence>
          <xs:element name="XmlDocument" type="XmlDocumentDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>

      <xs:element name="customXsn">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="xsnLocation" type="xs:string" />
            <xs:element name="cached" type="xs:boolean" />
            <xs:element name="openByDefault" type="xs:boolean" />
            <xs:element name="xsnScope" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="policy">
        <xs:sequence>
          <xs:element name="Name" type="xs:string" />
          <xs:element name="Description" type="xs:string" minOccurs="0" />
          <xs:element name="Statement" type="xs:string" minOccurs="0" />
          <xs:element name="PolicyItems" minOccurs="0" >
            <xs:complexType>
              <xs:sequence>
                <xs:element name="PolicyItem" type="policyItem" minOccurs="0" maxOccurs="unbounded" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="UniqueIdentifierWithoutBracesOrEmpty" use="required" />
        <xs:attribute name="local" type="xs:boolean" use="required" />
      </xs:complexType>
      <xs:element name="PolicyDirtyBag">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element name="Microsoft.Office.RecordsManagement.PolicyFeatures.PolicyLabel" type="PolicyFeatureOperation" minOccurs="0" />
            <xs:element name="Microsoft.Office.RecordsManagement.PolicyFeatures.PolicyAudit" type="PolicyFeatureOperation" minOccurs="0" />
            <xs:element name="Microsoft.Office.RecordsManagement.PolicyFeatures.Expiration" type="PolicyFeatureOperation" minOccurs="0" />
            <xs:element name="Microsoft.Office.RecordsManagement.PolicyFeatures.Barcode" type="PolicyFeatureOperation" minOccurs="0" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="PolicyFeatureOperation">
        <xs:attribute name="op" type="xs:string" use="required" />
      </xs:complexType>
      <xs:complexType name="policyItem">
        <xs:sequence>
          <xs:element name="Name" type="xs:string" />
          <xs:element name="Statement" type="xs:string" minOccurs="0" />
          <xs:element name="Description" type="xs:string" minOccurs="0" />
          <xs:element name="CustomData" type="customData" minOccurs="0" />
        </xs:sequence>
        <xs:attribute name="featureId" type="xs:string" use="required" />
        <xs:attribute name="BlockPreview" type="xs:boolean" />
        <xs:attribute name="UniqueId" type="xs:string" />
      </xs:complexType>
      <xs:complexType name="customData">
        <xs:sequence>
          <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="barcode">
        <xs:sequence>
          <xs:element name="event" type="PolicyEventDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="label">
        <xs:sequence>
          <xs:element name="properties" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="width" type="xs:decimal" minOccurs="0" />
                <xs:element name="height" type="xs:decimal" minOccurs="0" />
                <xs:element name="justification" type="xs:string" minOccurs="0" />
                <xs:element name="fontstyle" type="xs:string" minOccurs="0" />
                <xs:element name="font" type="xs:string" minOccurs="0" />
                <xs:element name="fontsize" type="xs:int" minOccurs="0" />
                <xs:element name="lock" type="xs:boolean" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="event" type="PolicyEventDefinition" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="segment" type="PolicySegmentDefinition" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="audit">
        <xs:all>
          <xs:element name="Update" minOccurs="0" />
          <xs:element name="View" minOccurs="0" />
          <xs:element name="CheckInOut" minOccurs="0" />
          <xs:element name="MoveCopy" minOccurs="0" />
          <xs:element name="DeleteRestore" minOccurs="0" />
        </xs:all>
      </xs:complexType>
      <xs:element name="data">
        <xs:complexType >
          <xs:sequence>
            <xs:element name="formula" type="PolicyFormulaDefinition" />
            <xs:element name="action" type="PolicyActionDefinition" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="PolicyEventDefinition">
        <xs:attribute name="type" type="xs:string" use="required" />
      </xs:complexType>
      <xs:complexType name="PolicySegmentDefinition">
        <xs:attribute name="type" type="xs:string" use="required" />
      </xs:complexType>
      <xs:complexType name="PolicyFormulaDefinition">
        <xs:sequence>
          <xs:element name="number" type="xs:int" />
          <xs:element name="property" type="xs:string" />
          <xs:element name="propertyId" type="xs:string" />
          <xs:element name="period" type="xs:string" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" />
      </xs:complexType>
      <xs:complexType name="PolicyActionDefinition">
        <xs:attribute name="type" type="xs:string" />
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="destnExplanation" type="xs:string" />
        <xs:attribute name="destnName" type="xs:string" />
        <xs:attribute name="destnUrl" type="xs:string" />
        <xs:attribute name="destnId" type="xs:string" />
      </xs:complexType>

      <xs:complexType name="ReceiverDefinitions">
        <xs:sequence>
          <xs:element name="Receiver" type="ReceiverDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="ListTemplateId" type="xs:int" />
        <xs:attribute name="ListUrl" type="xs:string" />
        <xs:attribute name="ListTemplateOwner" type="xs:string" />
        <xs:attribute name="Scope" type="xs:string" />
      </xs:complexType>
      <xs:complexType name="ReceiverDefinition">
        <xs:all>
          <xs:element name="Name" type="String255Chars" minOccurs="1" maxOccurs="1" />
          <xs:element name="Synchronization" type="xs:string" minOccurs="0" maxOccurs="1" />
          <xs:element name="Type" type="xs:integer" minOccurs="1" maxOccurs="1" />
          <xs:element name="SequenceNumber" type="xs:integer" minOccurs="1" maxOccurs="1" />
          <xs:element name="Assembly" type="AssemblyStrongName" minOccurs="1" maxOccurs="1" />
          <xs:element name="Class" type="AssemblyClass" minOccurs="1" maxOccurs="1" />
          <xs:element name="Data" type="String255Chars" minOccurs="0" maxOccurs="1" />
        </xs:all>
      </xs:complexType>
      <xs:complexType name="ValueDefinitionCollection">
        <xs:sequence>
          <xs:element name="Value" type="ValueDefinition" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LogicalTestInValuesDefinition">
        <xs:all>
          <xs:element name="FieldRef" type="FieldRefDefinitionQueryTest" minOccurs="1" maxOccurs="1" />
          <xs:element name="Values" type="ValueDefinitionCollection" minOccurs="1" maxOccurs="1" />
        </xs:all>
      </xs:complexType>
      <xs:complexType name="LogicalWithIndexDefinition">
        <xs:choice minOccurs="1" maxOccurs="1">
          <xs:element name="And" type="ExtendedLogicalJoinDefinitionWithIndex" />
          <xs:element name="Eq" type="LogicalTestDefinition" />
        </xs:choice>
        <xs:attribute name="ID" type="UniqueIdentifierWithOrWithoutBraces" use="required" />
      </xs:complexType>
      <xs:complexType name="ExtendedLogicalJoinDefinitionWithIndex">
        <xs:choice>
          <xs:sequence>
            <xs:element name="Eq" type="LogicalTestDefinition" />
            <xs:choice minOccurs="1" maxOccurs="1">
              <xs:element name="Geq" type="LogicalTestDefinition" />
              <xs:element name="Gt" type="LogicalTestDefinition" />
              <xs:element name="Eq" type="LogicalTestDefinition" />
              <xs:element name="In" type="LogicalTestInValuesDefinition" />
              <xs:element name="Leq" type="LogicalTestDefinition" />
              <xs:element name="Lt" type="LogicalTestDefinition" />
            </xs:choice>
          </xs:sequence>
          <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
              <xs:element name="Geq" type="LogicalTestDefinition" />
              <xs:element name="Gt" type="LogicalTestDefinition" />
              <xs:element name="In" type="LogicalTestInValuesDefinition" />
              <xs:element name="Leq" type="LogicalTestDefinition" />
              <xs:element name="Lt" type="LogicalTestDefinition" />
            </xs:choice>
            <xs:element name="Eq" type="LogicalTestDefinition" />
          </xs:sequence>
        </xs:choice>
      </xs:complexType>

    </xs:schema>

    <!--Add a data complexType used in [MS-LISTSWS] section 3.1.4.23.2.2, extracted from [MS-XSSK] section 5 -->
    <xs:schema id='XSSK'
targetNamespace='http://schemas.microsoft.com/2008/03/sync/'
xmlns:sync='http://schemas.microsoft.com/2008/03/sync/'
xmlns:xs='http://www.w3.org/2001/XMLSchema'
attributeFormDefault='qualified'
elementFormDefault='qualified'>
      <xs:element name='syncKnowledge'>
        <xs:complexType>
          <xs:sequence>
            <xs:element name='idFormatGroup' minOccurs='1' maxOccurs='1'>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name='replicaIdFormat' minOccurs='1' maxOccurs='1'>
                    <xs:complexType>
                      <xs:attribute name='isVariable' type='xs:boolean' use='required' />
                      <xs:attribute name='maxLength' type='xs:unsignedInt' use='required' />
                    </xs:complexType>
                  </xs:element>
                  <xs:element name='itemIdFormat' minOccurs='1' maxOccurs='1'>
                    <xs:complexType>
                      <xs:attribute name='isVariable' type='xs:boolean' use='required' />
                      <xs:attribute name='maxLength' type='xs:unsignedInt' use='required' />
                    </xs:complexType>
                  </xs:element>
                  <xs:element name='changeUnitIdFormat' minOccurs='1' maxOccurs='1'>
                    <xs:complexType>
                      <xs:attribute name='isVariable' type='xs:boolean' use='required' />
                      <xs:attribute name='maxLength' type='xs:unsignedInt' use='required' />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name='replicaKeyMap' minOccurs='1' maxOccurs='1'>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name='replicaKeyMapEntry' minOccurs='1' maxOccurs='unbounded'>
                    <xs:complexType>
                      <xs:attribute name='replicaId' type='xs:base64Binary' use='required' />
                      <xs:attribute name='replicaKey' type='xs:unsignedInt' use='required' />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name='clockVector' type='sync:clockVectorType' minOccurs='1' maxOccurs='1' />
            <xs:element name='itemOverrides' minOccurs='0' maxOccurs='1'>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name='itemOverride' minOccurs='0' maxOccurs='unbounded'>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name='clockVector' type='sync:clockVectorType' minOccurs='1' maxOccurs='1' />
                      </xs:sequence>
                      <xs:attribute name='itemId' type='xs:base64Binary' use='required' />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name='changeUnitOverrides' minOccurs='0' maxOccurs='1'>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name='changeUnitOverride' minOccurs='0' maxOccurs='unbounded'>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name='clockVector' type='sync:clockVectorType' minOccurs='1' maxOccurs='1' />
                      </xs:sequence>
                      <xs:attribute name='itemId' type='xs:base64Binary' use='required' />
                      <xs:attribute name='changeUnitId' type='xs:base64Binary' use='required' />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name='rangeOverrides' minOccurs='0' maxOccurs='1'>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name='rangeOverride' minOccurs='0' maxOccurs='unbounded'>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name='clockVector' type='sync:clockVectorType' minOccurs='1' maxOccurs='1' />
                      </xs:sequence>
                      <xs:attribute name='closedLowerBound' type='xs:base64Binary' use='required' />
                      <xs:attribute name='closedUpperBound' type='xs:base64Binary' use='required' />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name='clockVectorType'>
        <xs:sequence>
          <xs:element name='clockVectorElement' minOccurs='0' maxOccurs='unbounded'>
            <xs:complexType>
              <xs:attribute name='replicaKey' type='xs:unsignedInt' use='required' />
              <xs:attribute name='tickCount' type='xs:unsignedLong' use='required' />
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>

    <s:schema
     id="listsws"
     targetNamespace="http://schemas.microsoft.com/sharepoint/soap/"
     elementFormDefault="qualified"
     xmlns:s="http://www.w3.org/2001/XMLSchema"
     xmlns:tns="http://schemas.microsoft.com/sharepoint/soap/"
     xmlns:core="http://schemas.microsoft.com/sharepoint/soap/"
     xmlns:rs="http://schemas.microsoft.com/sharepoint/soap/"
     xmlns:z="http://schemas.microsoft.com/sharepoint/soap/"
     xmlns:sync="http://schemas.microsoft.com/2008/03/sync/"
     xmlns:s1="http://microsoft.com/wsdl/types/"
     xmlns:ds="urn:schemas-microsoft-com:rowset">
      
      <s:import namespace="http://schemas.microsoft.com/2008/03/sync/" id="xssk"/>
      <s:import namespace="urn:schemas-microsoft-com:rowset" id="DataSchema"/>
      <s:element name="GetList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <!--Replace any element with "ListDefinitionSchema" type, from [MS-LISTSWS] section 2.2.4.12 -->
                  <s:element name="List" type="tns:ListDefinitionSchema" />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListAndView">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="viewName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListAndViewResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListAndViewResult">
              <s:complexType mixed="true">
                <!--Replace any element with "ListAndView" element, from [MS-LISTSWS] section 3.1.4.16.2.2 -->
                <s:sequence>
                  <s:element name="ListAndView">
                    <s:complexType mixed="true">
                      <s:sequence>
                        <s:element name="List" type="tns:ListDefinitionSchema" />
                        <s:element name="View" type="core:ViewDefinition" />
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="listName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteListResponse">
        <s:complexType />
      </s:element>
      <s:element name="AddList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="description" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="templateID" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddListResult">
              <s:complexType mixed="true">
                <!--Replace any element with "List" element([MS-LISTSWS] section 3.1.4.3.2.2); type "ListDefinitionSchema" [MS-LISTSWS] section 2.2.4.12 -->
                <s:sequence>
                  <s:element name="List" type="tns:ListDefinitionSchema" />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddListFromFeature">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="description" type="s:string" />
            <s:element name="featureID" minOccurs="0" >
              <s:simpleType>
                <s:restriction base="s:string">
                  <s:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}" />
                </s:restriction>
              </s:simpleType>
            </s:element>
            <s:element minOccurs="1" maxOccurs="1" name="templateID" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddListFromFeatureResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddListFromFeatureResult">
              <s:complexType mixed="true">
                <!--Replace any element with "List" element([MS-LISTSWS] section 3.1.4.3.2.2); type "ListDefinitionSchema" [MS-LISTSWS] section 2.2.4.12 -->
                <s:sequence>
                  <s:element name="List" type="tns:ListDefinitionSchema"  />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="listProperties">
              <s:complexType mixed="true">
                <s:sequence>
                  <!--Replace any element with "List" element([MS-LISTSWS] section 3.1.4.30.2.1);-->
                  <s:element name="List" minOccurs="0">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Validation"
                                   minOccurs="0">
                          <s:complexType>
                            <s:attribute name="Message" type="s:string" use="optional" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                      <s:attribute name="AllowMultiResponses" type="core:TRUEFALSE" />
                      <s:attribute name="Description" type="s:string" />
                      <s:attribute name="Direction" type="s:string" />
                      <s:attribute name="EnableAssignToEmail" type="core:TRUEFALSE" />
                      <s:attribute name="EnableAttachments" type="core:TRUEFALSE" />
                      <s:attribute name="EnableModeration" type="core:TRUEFALSE" />
                      <s:attribute name="EnableVersioning" type="core:TRUEFALSE" />
                      <s:attribute name="EnforceDataValidation" type="core:TRUEFALSE" use="optional"/>
                      <s:attribute name="Hidden" type="core:TRUEFALSE" />
                      <s:attribute name="MultipleDataList" type="core:TRUEFALSE" />
                      <s:attribute name="Ordered" type="core:TRUEFALSE" />
                      <s:attribute name="PreserveEmptyValues" type="core:TRUEFALSE" />
                      <s:attribute name="ShowUser" type="core:TRUEFALSE" />
                      <s:attribute name="StrictTypeCoercion" type="core:TRUEFALSE" />
                      <s:attribute name="Title" type="s:string" />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
            <!--Remove the any element and set the "newfields" element type to "UpdateListFieldsRequest" ([MS-LISTSWS] section 2.2.4.15);-->
            <!--Actual definition in [MS-LISTSWS] section 3.1.4.30.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="newFields" type="tns:UpdateListFieldsRequest" />
            <!--Remove the any element and set the "updateFields" element type to "UpdateListFieldsRequest" ([MS-LISTSWS] section 2.2.4.15);-->
            <!--Actual definition in [MS-LISTSWS] section 3.1.4.30.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="updateFields" type="tns:UpdateListFieldsRequest" />
            <!--Remove the any element and set the "deleteFields" element type to "UpdateListFieldsRequest" ([MS-LISTSWS] section 2.2.4.15);-->
            <!--Actual definition in [MS-LISTSWS] section 3.1.4.30.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="deleteFields" type="tns:UpdateListFieldsRequest" />
            <s:element minOccurs="0" maxOccurs="1" name="listVersion" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UpdateListResult">
              <s:complexType mixed="true">
                <!--Replace the "any" element with "Results" element [MS-LISTSWS] section 3.1.4.30.2.2;-->
                <!--Actual definition in [MS-LISTSWS] section 3.1.4.30.2.2-->
                <s:sequence>
                  <s:element name="Results">
                    <s:complexType mixed="true">
                      <s:sequence>
                        <s:element name="NewFields" type="tns:UpdateListFieldResults" />
                        <s:element name="UpdateFields"
                                   type="tns:UpdateListFieldResults" />
                        <s:element name="DeleteFields"
                                   type="tns:UpdateListFieldResults" />
                        <s:element name="ListProperties" type="tns:ListDefinitionCT" />
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListCollection">
        <s:complexType />
      </s:element>
      <s:element name="GetListCollectionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListCollectionResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <!--Replace "any" element with "Lists" element([MS-LISTSWS] section 3.1.4.17.2.2), type "ListDefinitionCT" from [MS-LISTSWS] section 2.2.4.11  -->
                  <s:element name="Lists">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="List" type="tns:ListDefinitionCT" minOccurs="0"
                                   maxOccurs="unbounded"/>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListItems">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="viewName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="query">
              <s:complexType mixed="true">
                <!--Replace "any" element with "Query" element([MS-LISTSWS] section 3.1.4.24.2.1), type "CamlQueryRoot" from [MS-WSSCAML] section 2.2.2.1  -->
                <s:sequence>
                  <s:element name="Query" type="core:CamlQueryRoot"/>
                </s:sequence>
              </s:complexType>
            </s:element>
            <!--Replace "any" element and set the "viewFields" element to type "CamlViewFields" from [MS-LISTSWS] section 2.2.4.5-->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.1 -->
            <s:element minOccurs="0" maxOccurs="1" name="viewFields" type="tns:CamlViewFields" />
            <s:element minOccurs="0" maxOccurs="1" name="rowLimit" type="s:string" />
            <!--Replace "any" element and set the "queryOptions" element to type "CamlQueryOptions" from [MS-LISTSWS] section 2.2.4.4-->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.1 -->
            <s:element name="queryOptions" type="tns:CamlQueryOptions" minOccurs="0" maxOccurs="1"/>
            <s:element minOccurs="0" maxOccurs="1" name="webID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListItemsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListItemsResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and set the "listitems" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.2-->
                <s:sequence>
                  <s:element name="listitems" >
                    <s:complexType mixed="true" >
                      <s:sequence>
                        <!--Replace "any" element and set the "data" element-->
                        <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.2-->
                        <s:element ref="ds:data" />
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListItemChanges">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <!--Replace "any" element with "viewFields" element, type is CamlViewFields, [MS-LISTSWS] section 3.1.4.21.2.1-->
            <!--Actual definition is in [MS-LISTSWS] section 2.2.4.5 -->
            <s:element minOccurs="0" maxOccurs="1" name="viewFields" type="tns:CamlViewFields"/>
            <s:element minOccurs="0" maxOccurs="1" name="since" type="s:string" />
            <!--Replace "any" element with "contains" element, type is CamlContains, [MS-LISTSWS] section 3.1.4.21.2.1-->
            <!--Actual definition is in [MS-LISTSWS] section 2.2.4.3 -->
            <s:element minOccurs="0" maxOccurs="1" name="contains" type="tns:CamlContains"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListItemChangesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListItemChangesResult">
              <s:complexType mixed="true">
                <!--Replace "any" element with "listitems" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.21.2.2 -->
                <s:sequence>
                  <s:element name="listitems" >
                    <s:complexType mixed="true">
                      <s:sequence>
                        <s:element ref="ds:data" minOccurs="0" maxOccurs="2" />
                      </s:sequence>
                      <s:attribute name="TimeStamp" type="s:string" />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>

      <!--Add a data complexType used by the "DataDefinition" type, described in [MS-LISTSWS] section 2.2.4.7 -->
      <!--Each z:row element describes a single list item-->
      <s:complexType name="DataDefinition" mixed="true">
        <s:sequence>
          <s:any minOccurs="0" maxOccurs='unbounded' />
        </s:sequence>
        <s:attribute name="ItemCount" type="s:string" use="required"/>
        <s:attribute name="ListItemCollectionPositionNext" type ="s:string" use="optional" />
      </s:complexType>

      <!--Add a ListDefinitionSchema complexType described in [MS-LISTSWS] section 2.2.4.12 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="ListDefinitionSchema">
        <s:complexContent>
          <s:extension base="tns:ListDefinitionCT">
            <s:sequence>
              <s:element name="Validation" minOccurs="0">
                <s:complexType>
                  <s:attribute name="Message" type="s:string" use="optional" />
                </s:complexType>
              </s:element>
              <s:element name="ValidationDisplayNames" minOccurs="0"
                         type="s:string" />
              <s:element name="Fields">
                <s:complexType mixed="true">
                  <s:sequence>
                    <s:element name="Field"
                               type="core:FieldDefinition"
                               minOccurs="0" maxOccurs="unbounded" />
                  </s:sequence>
                </s:complexType>
              </s:element>
              <s:element name="RegionalSettings" >
                <s:complexType mixed="true">
                  <s:sequence>
                    <s:element name="Language" type="s:string" />
                    <s:element name="Locale" type="s:string" />
                    <s:element name="AdvanceHijri" type="s:string" />
                    <s:element name="CalendarType" type="s:string" />
                    <s:element name="Time24" type="s:string" />
                    <s:element name="TimeZone" type="s:string" />
                    <s:element name="SortOrder" type="s:string" />
                    <s:element name="Presence" type="s:string" />
                  </s:sequence>
                </s:complexType>
              </s:element>
              <s:element name="ServerSettings" >
                <s:complexType mixed="true">
                  <s:sequence>
                    <s:element name="ServerVersion" type="s:string" />
                    <s:element name="RecycleBinEnabled" type="core:TRUEFALSE" />
                    <s:element name="ServerRelativeUrl" type="s:string" />
                  </s:sequence>
                </s:complexType>
              </s:element>
            </s:sequence>
          </s:extension>
        </s:complexContent>
      </s:complexType>

      <!--Add a ListDefinitionCT complexType described in [MS-LISTSWS] section 2.2.4.11 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="ListDefinitionCT">
        <s:attribute name="DocTemplateUrl" type="s:string" />
        <s:attribute name="DefaultViewUrl" type="s:string" use="required" />
        <s:attribute name="MobileDefaultViewUrl" type="s:string" />
        <s:attribute name="ID" type="s:string" use="required" />
        <s:attribute name="Title" type="s:string" use="required" />
        <s:attribute name="Description" type="s:string" />
        <s:attribute name="ImageUrl" type="s:string" use="required" />
        <s:attribute name="Name" type="s:string" use="required" />
        <s:attribute name="BaseType" type="s:string" use="required" />
        <s:attribute name="FeatureId" type="s:string" use="required" />
        <s:attribute name="ServerTemplate" type="s:string" use="required" />
        <s:attribute name="Created" type="s:string" use="required" />
        <s:attribute name="Modified" type="s:string" use="required" />
        <s:attribute name="LastDeleted" type="s:string" />
        <s:attribute name="Version" type="s:int" use="required" />
        <s:attribute name="Direction" type="s:string" use="required" />
        <s:attribute name="ThumbnailSize" type="s:string" />
        <s:attribute name="WebImageWidth" type="s:string" />
        <s:attribute name="WebImageHeight" type="s:string" />
        <s:attribute name="Flags" type="s:int" />
        <s:attribute name="ItemCount" type="s:int" use="required" />
        <!--The type "int64" is not defined in namespace s. Using "unsignedLong" instead.-->
        <!--<s:attribute name="AnonymousPermMask" type="s:int64" />-->
        <s:attribute name="AnonymousPermMask" type="s:unsignedLong" />
        <s:attribute name="RootFolder" type="s:string" />
        <s:attribute name="ReadSecurity" type="s:int" use="required" />
        <s:attribute name="WriteSecurity" type="s:int" use="required" />
        <s:attribute name="Author" type="s:string" />
        <s:attribute name="EventSinkAssembly" type="s:string" />
        <s:attribute name="EventSinkClass" type="s:string" />
        <s:attribute name="EventSinkData" type="s:string" />
        <s:attribute name="EmailInsertsFolder" type="s:string" />
        <s:attribute name="EmailAlias" type="s:string" />
        <s:attribute name="WebFullUrl" type="s:string" />
        <s:attribute name="WebId" type="s:string" />
        <s:attribute name="SendToLocation" type="s:string" />
        <s:attribute name="ScopeId" type="s:string" />
        <s:attribute name="MajorVersionLimit" type="s:int" />
        <s:attribute name="MajorWithMinorVersionsLimit" type="s:int" />
        <s:attribute name="WorkFlowId" type="s:string" />
        <s:attribute name="HasUniqueScopes" type="core:TRUEFALSE" />
        <s:attribute name="NoThrottleListOperations" type="core:TRUEFALSE" />
        <s:attribute name="HasRelatedLists" type="s:string" />
        <s:attribute name="AllowDeletion" type="core:TRUEFALSE" />
        <s:attribute name="AllowMultiResponses" type="core:TRUEFALSE" />
        <s:attribute name="EnableAttachments" type="core:TRUEFALSE" />
        <s:attribute name="EnableModeration" type="core:TRUEFALSE" />
        <s:attribute name="EnableVersioning" type="core:TRUEFALSE" />
        <s:attribute name="HasExternalDataSource" type="core:TRUEFALSE" />
        <s:attribute name="Hidden" type="core:TRUEFALSE" />
        <s:attribute name="MultipleDataList" type="core:TRUEFALSE" />
        <s:attribute name="Ordered" type="core:TRUEFALSE" />
        <s:attribute name="ShowUser" type="core:TRUEFALSE" />
        <s:attribute name="EnablePeopleSelector" type="core:TRUEFALSE" />
        <s:attribute name="EnableResourceSelector" type="core:TRUEFALSE" />
        <s:attribute name="EnableMinorVersion" type="core:TRUEFALSE" />
        <s:attribute name="RequireCheckout" type="core:TRUEFALSE" />
        <s:attribute name="ThrottleListOperations" type="core:TRUEFALSE" />
        <s:attribute name="ExcludeFromOfflineClient" type="core:TRUEFALSE" />
        <s:attribute name="CanOpenFileAsync" type="core:TRUEFALSE" />
        <s:attribute name="EnableFolderCreation" type="core:TRUEFALSE" />
        <s:attribute name="IrmEnabled" type="core:TRUEFALSE" />
        <s:attribute name="IsApplicationList" type="core:TRUEFALSE" />
        <s:attribute name="PreserveEmptyValues" type="core:TRUEFALSE" />
        <s:attribute name="StrictTypeCoercion" type="core:TRUEFALSE" />
        <s:attribute name="EnforceDataValidation" type="core:TRUEFALSE" use="optional"/>
        <s:attribute name="MaxItemsPerThrottledOperation" type="s:int" />
        <s:attribute name="EnableAssignedToEmail" type="core:TRUEFALSE" use="optional"/>
        <s:attribute name="Followable" type="core:TRUEFALSE" />
        <s:attribute name="Acl" type="s:string" use="optional"/>
        <s:attribute name="Flags2" type="s:string" use="optional"/>
        <s:attribute name="RootFolderId" type="s:string" use="optional"/>
        <s:attribute name="IrmSyncable" type="core:TRUEFALSE" use="optional"/>
        <s:attribute name="ComplianceTag" type="s:string" use="optional"/>
        <s:attribute name="ComplianceFlags" type="s:string" use="optional"/>
        <s:attribute name="UserModified" type="s:string" use="optional"/>
        <s:attribute name="ListSchemaVersion" type="s:string" use="optional"/>
        <s:attribute name="AclVersion" type="s:string" use="optional"/>
      </s:complexType>

      <!--Add a UpdateListFieldsRequest complexType described in [MS-LISTSWS] section 2.2.4.15 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="UpdateListFieldsRequest" mixed="true">
        <s:sequence>
          <s:element name="Fields" minOccurs="0">
            <s:complexType mixed="true">
              <s:sequence>
                <s:element name="Method" maxOccurs="unbounded">
                  <s:complexType mixed="true">
                    <s:sequence>
                      <s:element name="Field" type="core:FieldDefinition"/>
                    </s:sequence>
                    <s:attribute name="ID" type="s:string"/>
                    <s:attribute name="AddToView" type="s:string"/>
                  </s:complexType>
                </s:element>
              </s:sequence>
            </s:complexType>
          </s:element>
        </s:sequence>
      </s:complexType>

      <!--Add a UpdateListFieldResults complexType described in [MS-LISTSWS] section 2.2.4.14 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="UpdateListFieldResults">
        <s:sequence>
          <s:element name="Method" minOccurs="0" maxOccurs="unbounded">
            <s:complexType mixed="true">
              <s:sequence>
                <s:element name="ErrorCode" type="s:string" />
                <s:element name="ErrorText" type="s:string" minOccurs="0" />
                <s:element name="Field" type="core:FieldDefinition" minOccurs="0"/>
              </s:sequence>
              <s:attribute name="ID" type="s:string" />
            </s:complexType>
          </s:element>
        </s:sequence>
      </s:complexType>

      <!--Add a CamlViewFields complexType described in [MS-LISTSWS] section 2.2.4.5 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="CamlViewFields">
        <s:sequence>
          <s:element name="ViewFields" minOccurs="0" >
            <s:complexType mixed="true" >
              <s:sequence>
                <s:element name="FieldRef" minOccurs="0" maxOccurs="unbounded">
                  <s:complexType>
                    <s:attribute name="Name" type="s:string" />
                  </s:complexType>
                </s:element>
              </s:sequence>
              <s:attribute name="Properties" type="core:TRUEFALSE" />
            </s:complexType>
          </s:element>
        </s:sequence>
      </s:complexType>

      <!--Add a CamlQueryOptions complexType described in [MS-LISTSWS] section 2.2.4.4 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="CamlQueryOptions">
        <s:sequence>
          <s:element name="QueryOptions" minOccurs="0" >
            <s:complexType>
              <s:all>
                <s:element name="DateInUtc" type="core:TRUEFALSE" minOccurs="0" />
                <s:element name="Folder" type="s:string" minOccurs="0"  />
                <s:element name="Paging" minOccurs="0">
                  <s:complexType>
                    <s:attribute name="ListItemCollectionPositionNext"
                           type="s:string" />
                  </s:complexType>
                </s:element>
                <s:element name="IncludeMandatoryColumns"
                           type="core:TRUEFALSE" minOccurs="0" />
                <s:element name="MeetingInstanceID"
                           type="s:integer" minOccurs="0"   />
                <s:element name="ViewAttributes" minOccurs="0" >
                  <s:complexType>
                    <s:attribute name="Scope" type="tns:EnumViewAttributes"/>
                  </s:complexType>
                </s:element>
                <s:element name="RecurrencePatternXMLVersion"
                           type="tns:EnumRecurrencePatternXMLVersion"
                           minOccurs="0" />
                <s:element name="IncludePermissions" type="core:TRUEFALSE"
                           minOccurs="0" />
                <s:element name="ExpandUserField"
                           type="core:TRUEFALSE" minOccurs="0" />
                <s:element name="RecurrenceOrderBy"
                           type="core:TRUEFALSE" minOccurs="0"/>
                <s:element name="IncludeAttachmentUrls"
                           type="core:TRUEFALSE" minOccurs="0" />
                <!--This "IncludeAttachmentVersion" is Not defined in [MS-LISTSWS]-->
                <!--Add "IncludeAttachmentVersion" element to support original test case code-->
                <s:element name="IncludeAttachmentVersion" type="core:TRUEFALSE" minOccurs="0" />
                <s:element name="RemoveInvalidXmlCharacters"
                           type="core:TRUEFALSE" minOccurs="0" />
                <s:element name="OptimizeFor" type="tns:EnumOptimizeFor" minOccurs="0" />
                <s:element name="ExtraIds" type="s:string" minOccurs="0" />
                <s:element name="OptimizeLookups" type="core:TRUEFALSE" minOccurs="0" />
                <s:element name="IncludeFragmentChanges" type="core:TRUEFALSE" minOccurs="0" />
              </s:all>
            </s:complexType>
          </s:element>
        </s:sequence>
      </s:complexType>

      <!--Add a CamlContains complexType described in [MS-LISTSWS] section 2.2.4.3 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="CamlContains">
        <s:sequence>
          <s:element name="Contains">
            <s:complexType>
              <s:sequence>
                <s:element name="FieldRef" >
                  <s:complexType>
                    <s:attribute name="Name" type="s:string" />
                  </s:complexType>
                </s:element>
                <s:element name="Value" >
                  <s:complexType mixed="true">
                    <s:attribute name="Type" type="core:FieldInternalType" />
                  </s:complexType>
                </s:element>
              </s:sequence>
            </s:complexType>
          </s:element>
        </s:sequence>
      </s:complexType>

      <!--Add a ListItemChangeDefinition complexType described in [MS-LISTSWS] section 2.2.4.13 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="ListItemChangeDefinition" mixed="true">
        <s:attribute name="ChangeType" type="tns:ChangeTypeEnum" />
        <s:attribute name="AfterListId" type="core:UniqueIdentifierWithOrWithoutBraces" />
        <s:attribute name="AfterItemId" type="s:unsignedInt" />
        <s:attribute name="UniqueId" type="core:UniqueIdentifierWithOrWithoutBraces" />
        <s:attribute name="MetaInfo_vti_clientid" type="s:string" />
        <s:attribute name="ServerChangeUnit" type="s:string" />
      </s:complexType>

      <!--Add a ListItemChangeDefinition complexType described in [MS-LISTSWS] section 2.2.4.16 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="ViewChangeDefinition">
        <s:attribute name="ChangeType" type="tns:ChangeTypeEnum" />
        <s:attribute name="Id" type="core:UniqueIdentifierWithOrWithoutBraces" />
      </s:complexType>

      <!--Add a AddOrUpdateFieldsDefinition complexType described in [MS-LISTSWS] section 2.2.4.2 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="AddOrUpdateFieldsDefinition">
        <s:sequence>
          <s:element name="Fields">
            <s:complexType>
              <s:sequence>
                <s:element name="Method" minOccurs="0" maxOccurs="unbounded">
                  <s:complexType>
                    <s:sequence>
                      <s:element name="Field" type="tns:AddOrUpdateFieldDefinition" />
                    </s:sequence>
                    <s:attribute name="ID" type="s:string" use="required" />
                  </s:complexType>
                </s:element>
              </s:sequence>
            </s:complexType>
          </s:element>
        </s:sequence>
      </s:complexType>

      <!--Add a AddOrUpdateFieldDefinition complexType described in [MS-LISTSWS] section 2.2.4.1 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="AddOrUpdateFieldDefinition">
        <s:attribute name="Aggregation" type="s:string" />
        <s:attribute name="DisplayName" type="s:string" />
        <s:attribute name="Hidden" type="core:TRUE_Case_Sensitive_Else_Anything" />
        <s:attribute name="ID" type="core:UniqueIdentifierWithOrWithoutBraces" />
        <s:attribute name="Name" type="s:string" />
        <s:attribute name="Node" type="s:string" />
        <s:attribute name="PIAttribute" type="s:string" />
        <s:attribute name="PITarget" type="s:string" />
        <s:attribute name="PrimaryPIAttribute" type="s:string" />
        <s:attribute name="PrimaryPITarget" type="s:string" />
        <s:attribute name="ReadOnly" type="core:TRUE_Case_Sensitive_Else_Anything" />
        <s:anyAttribute namespace="##other" processContents="lax" />
      </s:complexType>

      <!--Add a ContentTypePropertyDefinition complexType described in [MS-LISTSWS] section 2.2.4.6 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="ContentTypePropertyDefinition">
        <s:sequence />
        <s:attribute name="Description" type="s:string" use="optional" />
        <s:attribute name="DocumentTemplate" type="s:string" use="optional" />
        <s:attribute name="Group" type="s:string" use="optional" />
        <s:attribute name="Title" type="s:string" use="optional" />
        <s:attribute name="NewDocumentControl" type="s:string" use="optional" />
        <s:attribute name="RequireClientRenderingOnNew"
                     type="s:string" use="optional" />
      </s:complexType>

      <!--Add a FieldReferenceDefinitionCT complexType described in [MS-LISTSWS] section 2.2.4.10 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="FieldReferenceDefinitionCT">
        <s:attribute name="Aggregation" type="s:string"/>
        <s:attribute name="Customization" type="s:string"/>
        <s:attribute name="DisplayName" type="s:string"/>
        <s:attribute name="Format" type="s:string"/>
        <s:attribute name="Hidden" type="core:TRUEFALSE"/>
        <s:attribute name="ID" type="core:UniqueIdentifierWithOrWithoutBraces"
                     use="required"/>
        <s:attribute name="Name" type="s:string" use="required"/>
        <s:attribute name="Node" type="s:string"/>
        <s:attribute name="PIAttribute" type="s:string"/>
        <s:attribute name="PITarget" type="s:string"/>
        <s:attribute name="PrimaryPIAttribute" type="s:string"/>
        <s:attribute name="PrimaryPITarget" type="s:string"/>
        <s:attribute name="ReadOnly" type="core:TRUEFALSE"/>
        <s:attribute name="Required" type="core:TRUEFALSE"/>
        <s:attribute name="ShowInEditForm" type="core:TRUEFALSE"/>
        <s:attribute name="ShowInNewForm" type="core:TRUEFALSE"/>
      </s:complexType>

      <!--Add a FileFolderChangeDefinition complexType that is not in [MS-LISTSWS] -->
      <!--This type is used for MOS2007/WSS3.0 product -->
      <s:complexType name="FileFolderChangeDefinition">
        <s:attribute name="ChangeType" type="tns:ChangeTypeEnum" />
        <s:attribute name="UniqueId" type="core:UniqueIdentifierWithOrWithoutBraces" />
        <s:attribute name="MetaInfo_vti_clientid" type="s:string" />
        <s:attribute name="ServerChangeUnit" type="s:string" />
      </s:complexType>

      <!--Add a FileFragmentChangeDefinition complexType that is not in [MS-LISTSWS] -->
      <!--This type is used for MOS2007/WSS3.0 product -->
      <s:complexType name="FileFragmentChangeDefinition">
        <s:attribute name="ChangeType" type="tns:ChangeTypeEnum" />
        <s:attribute name="UniqueId" type="core:UniqueIdentifierWithOrWithoutBraces" />
      </s:complexType>

      <!--Add a DeleteFieldsDefinition complexType described in [MS-LISTSWS] section 2.2.4.9 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="DeleteFieldsDefinition">
        <s:sequence>
          <s:element name="Fields" minOccurs="0">
            <s:complexType>
              <s:sequence>
                <s:element name="Method" minOccurs="0" maxOccurs="unbounded">
                  <s:complexType>
                    <s:sequence>
                      <s:element name="Field" type="tns:DeleteFieldDefinition" minOccurs="0" />
                    </s:sequence>
                    <s:attribute name="ID" type="s:string" use="required" />
                  </s:complexType>
                </s:element>
              </s:sequence>
            </s:complexType>
          </s:element>
        </s:sequence>
      </s:complexType>

      <!--Add a DeleteFieldDefinition complexType described in [MS-LISTSWS] section 2.2.4.8 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:complexType name="DeleteFieldDefinition">
        <s:attribute name="ID" type="core:UniqueIdentifierWithOrWithoutBraces" />
        <s:attribute name="Name" type="s:string" />
        <s:anyAttribute namespace="##other" processContents="lax" />
      </s:complexType>

      <!--Add a TRUEONLY simpleType described in [MS-LISTSWS] section 2.2.5.7 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:simpleType name="TRUEONLY">
        <s:restriction base="s:string">
          <s:enumeration value="TRUE" />
        </s:restriction>
      </s:simpleType>

      <!--Add a OnErrorEnum simpleType described in [MS-LISTSWS] section 2.2.5.6 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:simpleType name="OnErrorEnum">
        <s:restriction base="s:string">
          <s:enumeration value="Return" />
          <s:enumeration value="Continue" />
        </s:restriction>
      </s:simpleType>

      <!--Add a MethodCmdEnum simpleType described in [MS-LISTSWS] section 2.2.5.5 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:simpleType name="MethodCmdEnum">
        <s:restriction base="s:string">
          <s:enumeration value="New" />
          <s:enumeration value="Update" />
          <s:enumeration value="Delete" />
          <s:enumeration value="Moderate" />
          <s:enumeration value="Move" />
        </s:restriction>
      </s:simpleType>

      <!--Add a ChangeTypeEnum simpleType described in [MS-LISTSWS] section 2.2.5.1 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:simpleType name="ChangeTypeEnum">
        <s:restriction base="s:string">
          <s:enumeration value="Delete" />
          <s:enumeration value="InvalidToken" />
          <s:enumeration value="Restore" />
          <s:enumeration value="MoveAway" />
          <s:enumeration value="SystemUpdate" />
          <s:enumeration value="Rename" />
        </s:restriction>
      </s:simpleType>

      <!--Add a EnumViewAttributes simpleType described in [MS-LISTSWS] section 2.2.5.4 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:simpleType name="EnumViewAttributes">
        <s:restriction base="s:string">
          <s:enumeration value="Recursive" />
          <s:enumeration value="RecursiveAll" />
          <s:enumeration value="FilesOnly" />
          <s:enumeration value="" />
        </s:restriction>
      </s:simpleType>

      <!--Add a EnumRecurrencePatternXMLVersion simpleType described in [MS-LISTSWS] section 2.2.5.3 -->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:simpleType name="EnumRecurrencePatternXMLVersion">
        <s:restriction base="s:string">
          <s:enumeration value="v3" />
          <s:enumeration value="" />
        </s:restriction>
      </s:simpleType>

      <!--Add a EnumViewAttributes simpleType described in [MS-LISTSWS] section 2.2.5.2-->
      <!--SUT's Full wsdl does not include this type definition, it use the "any" element instead-->
      <s:simpleType name="EnumOptimizeFor">
        <s:restriction base="s:string">
          <s:enumeration value="ItemIds" />
          <s:enumeration value="FolderUrls" />
        </s:restriction>
      </s:simpleType>

      <!--Following elements are used for validating the response in "any" element, such as <s:any /> . Start-->
      <s:element name="errorstring" type="s:string" />
      <s:element name="errorcode" type="s:string" />
      <s:element name="ID" type="s:string" />
      <s:element name="ErrorText" type="s:string" />
      <s:element name="Success" type="s:string" />
      <!--Following elements are used for validating the response in "any" element, such as <s:any /> . End-->
      
      <s:element name="GetListItemChangesWithKnowledge">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="viewName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="query">
              <s:complexType mixed="true">
                <!--Replace "any" element with "Query" element([MS-LISTSWS] section 3.1.4.23.2.1), type "CamlQueryRoot" from [MS-WSSCAML] section 2.2.2.1  -->
                <s:sequence>
                  <s:element name="Query" type="core:CamlQueryRoot" />
                </s:sequence>
              </s:complexType>
            </s:element>
            <!--Replace "any" element and set the "viewFields" element to type "CamlViewFields" from [MS-LISTSWS] section 2.2.4.5-->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.1 -->
            <s:element minOccurs="0" maxOccurs="1" name="viewFields" type="tns:CamlViewFields" />
            <s:element minOccurs="0" maxOccurs="1" name="rowLimit" type="s:string" />
            <!--Replace "any" element and set the "queryOptions" element to type "CamlQueryOptions" from [MS-LISTSWS] section 2.2.4.4-->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.1 -->
            <s:element minOccurs="0" maxOccurs="1" name="queryOptions" type="tns:CamlQueryOptions"  />
            <s:element minOccurs="0" maxOccurs="1" name="syncScope" type="s:string" />
            <!--Replace "any" element and set the "knowledge" element to type "sync:syncKnowledge" from [MS-XSSK] section 2.1.3 -->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.1 -->
            <s:element minOccurs="0" maxOccurs="1" name="knowledge">
              <s:complexType>
                <s:sequence>
                  <s:element ref="sync:syncKnowledge" />
                </s:sequence>
              </s:complexType>
            </s:element>
            <!--Replace "any" element and set the "contains" element to type "CamlContains" from [MS-LISTSWS] section 2.2.4.3 -->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.24.2.1 -->
            <s:element minOccurs="0" maxOccurs="1" name="contains" type="tns:CamlContains"  />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListItemChangesWithKnowledgeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListItemChangesWithKnowledgeResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and set the "listitems" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.23.2.2 -->
                <s:sequence>
                  <s:element name="listitems" >
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Changes" >
                          <s:complexType>
                            <s:sequence>
                              <s:element name="Id" type="tns:ListItemChangeDefinition" minOccurs="0" maxOccurs="unbounded"/>
                              <s:element name="View" type="tns:ViewChangeDefinition" minOccurs="0"/>
                              <!--These 3 elements do not exist in 2010 and O15 protucts, but exist in 2007's full wsdl-->
                              <s:element name="File" type="tns:FileFolderChangeDefinition" minOccurs="0"/>
                              <s:element name="Folder" type="tns:FileFolderChangeDefinition" minOccurs="0"/>
                              <s:element name="FileFragment" type="tns:FileFragmentChangeDefinition" minOccurs="0"/>
                              <s:element name="MadeWithKnowledge" minOccurs="0" maxOccurs="1">
                                <s:complexType>
                                  <s:sequence>
                                    <s:element ref="sync:syncKnowledge"/>
                                  </s:sequence>
                                </s:complexType>
                              </s:element>
                            </s:sequence>
                            <s:attribute name="SchemaChanged" type="core:TRUEFALSE" />
                            <s:attribute name="ServerTime" type="s:string" />
                            <s:attribute name="MoreChanges" type="core:TRUEFALSE" />
                          </s:complexType>
                        </s:element>
                        <!--This is valid "any" elements,it might be rs:data/z:row-->
                        <s:element ref="ds:data" />
                      </s:sequence>
                      <s:attribute name="MinTimeBetweenSyncs" type="s:unsignedInt" />
                      <s:attribute name="RecommendedTimeBetweenSyncs" type="s:unsignedInt" />
                      <s:attribute name="MaxBulkDocumentSyncSize" type="s:unsignedInt" />
                      <s:attribute name="MaxRecommendedEmbeddedFileSize" type="s:unsignedInt" />
                      <s:attribute name="AlternateUrls" type="s:string" />
                      <s:attribute name="EffectivePermMask" type="s:string" />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListItemChangesSinceToken">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="viewName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="query">
              <s:complexType mixed="true">
                <!--Replace "any" element with "Query" element([MS-LISTSWS] section 3.1.4.23.2.1), type "CamlQueryRoot" from [MS-WSSCAML] section 2.2.2.1  -->
                <s:sequence>
                  <s:element name="Query" type="core:CamlQueryRoot" />
                </s:sequence>
              </s:complexType>
            </s:element>
            <!--Replace "any" element and set the "viewFields" element to type "CamlViewFields" from [MS-LISTSWS] section 2.2.4.5-->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.23.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="viewFields" type="tns:CamlViewFields"  />
            <s:element minOccurs="0" maxOccurs="1" name="rowLimit" type="s:string" />
            <!--Replace "any" element and set the "queryOptions" element to type "CamlQueryOptions" from [MS-LISTSWS] section 2.2.4.4-->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.23.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="queryOptions" type="tns:CamlQueryOptions" />
            <s:element minOccurs="0" maxOccurs="1" name="changeToken" type="s:string" />
            <!--Replace "any" element with "contains" element, type is CamlContains, [MS-LISTSWS] section 3.1.4.24.2.2-->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.23.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="contains" type="tns:CamlContains"  />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListItemChangesSinceTokenResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListItemChangesSinceTokenResult">
              <s:complexType mixed="true">
                <!--Replace "any" element with "listitems" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.22.2.2-->
                <s:sequence>
                  <s:element name="listitems" >
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Changes" >
                          <s:complexType>
                            <s:sequence>
                              <s:element name="List" type="tns:ListDefinitionSchema"
                                         minOccurs="0" />
                              <s:element name="Id" type="tns:ListItemChangeDefinition" minOccurs="0"/>
                            </s:sequence>
                            <s:attribute name="LastChangeToken" type="s:string" />
                            <s:attribute name="MoreChanges" type="core:TRUEFALSE" />
                          </s:complexType>
                        </s:element>
                        <!--Replace "any" element with "data" element, its type is "rs:DataDefinition"-->
                        <!--Actual "rs:DataDefinition" is in [MS-LISTSWS] section 2.2.4.7-->
                        <s:element ref="ds:data" />
                      </s:sequence>
                      <s:attribute name="MinTimeBetweenSyncs" type="s:unsignedInt" />
                      <s:attribute name="RecommendedTimeBetweenSyncs" type="s:unsignedInt" />
                      <s:attribute name="MaxBulkDocumentSyncSize" type="s:unsignedInt" />
                      <s:attribute name="MaxRecommendedEmbeddedFileSize" type="s:unsignedInt" />
                      <s:attribute name="AlternateUrls" type="s:string" />
                      <s:attribute name="EffectivePermMask" type="s:string" />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateListItems">
        <s:complexType>
          <s:sequence>
            <s:element name="listName" type="s:string" />
            <s:element name="updates">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Batch" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.31.2.1-->
                <s:sequence>
                  <s:element name="Batch">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Method" maxOccurs="unbounded">
                          <s:complexType mixed="true">
                            <s:sequence>
                              <s:element name="Field" maxOccurs="unbounded">
                                <s:complexType>
                                  <s:simpleContent>
                                    <s:extension base="s:string">
                                      <s:attribute name="Name" type="s:string"/>
                                      <s:attribute name="Property" type="s:string"/>
                                    </s:extension>
                                  </s:simpleContent>
                                </s:complexType>
                              </s:element>
                            </s:sequence>
                            <s:attribute name="ID" type="s:unsignedInt" use="required" />
                            <s:attribute name="Cmd" type="tns:MethodCmdEnum"
                               use="required" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                      <s:attribute name="ListVersion" type="s:unsignedInt" />
                      <s:attribute name="OnError" type="tns:OnErrorEnum" />
                      <s:attribute name="Version" type="s:string" />
                      <s:attribute name="ViewName" type="s:string" />
                      <s:attribute name="PreCalc"
                                   type="core:TRUE_Case_Sensitive_Else_Anything"  />
                      <s:attribute name="DateInUtc"
                                   type="core:TRUE_Case_Sensitive_Else_Anything"  />
                      <s:attribute name="Properties"
                                   type="core:TRUE_Case_Sensitive_Else_Anything" />
                      <s:attribute name="LockSchema"
                                   type="core:TRUE_Case_Sensitive_Else_Anything" />
                      <s:attribute name="RootFolder" type="s:string"  />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>

      <s:element name="UpdateListItemsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UpdateListItemsResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Results" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.31.2.2-->
                <s:sequence>
                  <s:element name="Results" >
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Result" maxOccurs="unbounded">
                          <s:complexType>
                            <s:sequence>
                              <s:element name="ErrorCode" type="s:string" />

                              <!--
								Remove the ErrorText element, because this element is not always returned.
								<s:element name="ErrorText" type="s:string" />
							  -->

                              <!--Keep this "any" element, it is z:row type-->
                              <!--Add maxOccurs='unbounded' for "z:row"-->
                              <s:any minOccurs="0" maxOccurs='unbounded' />
                            </s:sequence>
                            <s:attribute name="ID" type="s:string" />
                            <s:attribute name="List" type="s:string" />
                            <s:attribute name="Version" type="s:string"/>
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateListItemsWithKnowledge">
        <s:complexType>
          <s:sequence>
            <s:element name="listName" type="s:string" />
            <s:element name="updates">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Batch" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.32.2.1 -->
                <s:sequence>
                  <s:element name="Batch">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Method" maxOccurs="unbounded">
                          <s:complexType mixed="true">
                            <s:sequence>
                              <s:element name="Field" maxOccurs="unbounded">
                                <s:complexType>
                                  <s:simpleContent>
                                    <s:extension base="s:string">
                                      <s:attribute name="Name" type="s:string"/>
                                      <s:attribute name="Property" type="s:string"/>
                                    </s:extension>
                                  </s:simpleContent>
                                </s:complexType>
                              </s:element>
                            </s:sequence>
                            <s:attribute name="ID" type="s:unsignedInt" use="required" />
                            <s:attribute name="Cmd" type="tns:MethodCmdEnum"
                               use="required" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                      <s:attribute name="ListVersion" type="s:unsignedInt" />
                      <s:attribute name="OnError" type="tns:OnErrorEnum" />
                      <s:attribute name="Version" type="s:string" />
                      <s:attribute name="ViewName" type="s:string" />
                      <s:attribute name="PreCalc"
                                   type="core:TRUE_Case_Sensitive_Else_Anything"  />
                      <s:attribute name="DateInUtc"
                                   type="core:TRUE_Case_Sensitive_Else_Anything"  />
                      <s:attribute name="Properties"
                                   type="core:TRUE_Case_Sensitive_Else_Anything" />
                      <s:attribute name="LockSchema"
                                   type="core:TRUE_Case_Sensitive_Else_Anything" />
                      <s:attribute name="RootFolder" type="s:string"  />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
            <s:element minOccurs="0" maxOccurs="1" name="syncScope" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="knowledge">
              <s:complexType mixed="true">
                <s:sequence>
                  <!--This "any" element is valid, 
					it must be null as described in [MS-LISTSWS] section 3.1.4.32.2.1 -->
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateListItemsWithKnowledgeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UpdateListItemsWithKnowledgeResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Results" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.32.2.2-->
                <s:sequence>
                  <s:element name="Results" >
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Result" maxOccurs="unbounded">
                          <s:complexType>
                            <s:sequence>
                              <s:element name="ErrorCode" type="s:string" />
                              <!--This "any" element is valid, it is "z:row" type-->
                              <s:any minOccurs="0" maxOccurs='unbounded' />
                            </s:sequence>
                            <s:attribute name="ID" type="s:string" />
                            <s:attribute name="List" type="s:string" />
                            <s:attribute name="Version" type="s:string" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddDiscussionBoardItem">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="message" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddDiscussionBoardItemResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddDiscussionBoardItemResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <s:element name="listitems" >
                    <s:complexType>
                      <s:sequence>
                        <!--Replace "any" element and with the "listitems" element-->
                        <!--Actual definition is in [MS-LISTSWS] section 3.1.4.2.2.2-->
                        <s:element ref="ds:data" />
                      </s:sequence>
                      <s:anyAttribute />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddWikiPage">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="strListName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="listRelPageUrl" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="wikiContent" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddWikiPageResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddWikiPageResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <s:element name="listitems" >
                    <s:complexType>
                      <s:sequence>
                        <s:any />
                      </s:sequence>
                      <s:anyAttribute />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetVersionCollection">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="strlistID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="strlistItemID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="strFieldName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetVersionCollectionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetVersionCollectionResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Versions" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.25.2.2-->
                <s:sequence>
                  <s:element name="Versions">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Version" minOccurs="0" maxOccurs="unbounded">
                          <s:complexType>
                            <s:attribute name="Modified" type="s:string"/>
                            <s:attribute name="Editor" type="s:string"/>
                            <!--Replace "FieldName" attribute with the "anyAttribute" 
                            because the "FieldName" is variable. It depends on the request-->
                            <!--<s:attribute name="FieldName" type="s:string"/>-->
                            <s:anyAttribute processContents="skip" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddAttachment">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="listItemID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="fileName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="attachment" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddAttachmentResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddAttachmentResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAttachmentCollection">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="listItemID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAttachmentCollectionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAttachmentCollectionResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Attachments" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.14.2.2-->
                <s:sequence>
                  <s:element name="Attachments">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Attachment" type="s:string" minOccurs="0"
                               maxOccurs="unbounded">
                        </s:element>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteAttachment">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="listItemID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="url" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteAttachmentResponse">
        <s:complexType />
      </s:element>
      <s:element name="CheckOutFile">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="pageUrl" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="checkoutToLocal" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="lastmodified" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CheckOutFileResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CheckOutFileResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UndoCheckOut">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="pageUrl" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UndoCheckOutResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="UndoCheckOutResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CheckInFile">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="pageUrl" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="comment" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CheckinType" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CheckInFileResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CheckInFileResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListContentTypes">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListContentTypesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListContentTypesResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "ContentTypes" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.19.2.2-->
                <s:sequence>
                  <s:element name="ContentTypes" >
                    <s:complexType>
                      <s:sequence>
                        <s:element name="ContentType" maxOccurs="unbounded">
                          <s:complexType>
                            <s:sequence>
                              <s:element name="XmlDocuments"
                                         type="core:XmlDocumentDefinitionCollection"
                                         minOccurs="0">
                              </s:element>
                            </s:sequence>
                            <s:attribute name="Name" type="s:string" use="required" />
                            <s:attribute name="ID" type="core:ContentTypeId"
                                         use="required" />
                            <s:attribute name="Description" type="s:string"
                                         use="required" />
                            <s:attribute name="Scope" type="s:string" use="required" />
                            <s:attribute name="Version" type="s:int" use="required" />
                            <s:attribute name="BestMatch" type="tns:TRUEONLY"
                                         use="optional" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                      <s:attribute name="ContentTypeOrder" type="s:string" use="optional" />
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListContentTypesAndProperties">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="core:ContentTypeId" />
            <s:element minOccurs="0" maxOccurs="1" name="propertyPrefix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="includeWebProperties" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListContentTypesAndPropertiesResponse">
        <s:complexType>
          <!--Replace "any" element and with the "ContentTypes" element-->
          <!--Actual definition is in [MS-LISTSWS] section 3.1.4.20.2.2-->
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListContentTypesAndPropertiesResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <s:element name="ContentTypes" >
                    <s:complexType>
                      <s:sequence>
                        <s:element name="ContentType" maxOccurs="unbounded">
                          <s:complexType>
                            <s:sequence>
                              <s:element name="XmlDocuments"
                                         type="core:XmlDocumentDefinitionCollection"
                                         minOccurs="0">
                              </s:element>
                            </s:sequence>
                            <s:attribute name="Name" type="s:string" use="required" />
                            <s:attribute name="ID" type="core:ContentTypeId"
                                         use="required" />
                            <s:attribute name="Description" type="s:string"
                                         use="required" />
                            <s:attribute name="Scope" type="s:string" use="required" />
                            <s:attribute name="Version" type="s:int" use="required" />
                            <s:attribute name="BestMatch" type="tns:TRUEONLY"
                                         use="optional" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                      <s:attribute name="ContentTypeOrder" type="s:string" use="optional" />
                    </s:complexType>
                  </s:element>
                  <s:element name="Properties">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Property" minOccurs="0" maxOccurs="unbounded">
                          <s:complexType>
                            <s:attribute name="Key" type="s:string"
                                         use="required" />
                            <s:attribute name="Value" type="s:string"
                                         use="required" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListContentType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListContentTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetListContentTypeResult">
              <s:complexType mixed="true">
                <!-- Replace "any" element and with the "ContentType" element, and set type as "core:ContentTypeDefinition"(described in [MS-WSSCAML] section 2.4.1.1) -->
                <!-- Actual definition is in [MS-LISTSWS] section 3.1.4.20.2.2 -->
                <s:sequence>
                  <s:element name="ContentType" type="core:ContentTypeDefinition"/>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CreateContentType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="displayName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="parentType" type="s:string" />
            <!--Remove the"any" element and set element "fields"type as "tns:AddOrUpdateFieldsDefinition" (described in [MS-LISTSWS] section 2.2.4.2) -->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.9.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="fields" type="tns:AddOrUpdateFieldsDefinition" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeProperties">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "ContentType" element, and set type as "core:ContentTypeDefinition"(described in [MS-WSSCAML] section 2.4.1.1) -->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.20.2.2-->
                <s:sequence>
                  <s:element name="ContentType" type="tns:ContentTypePropertyDefinition"
                      minOccurs="0" />
                </s:sequence>
              </s:complexType>
            </s:element>
            <s:element minOccurs="0" maxOccurs="1" name="addToView" type="core:TRUE_Case_Sensitive_Else_Anything" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CreateContentTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CreateContentTypeResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateContentType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeProperties">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "ContentType" element, and set type as "core:ContentTypeDefinition"(described in [MS-WSSCAML] section 2.4.1.1) -->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.20.2.2-->
                <s:sequence>
                  <s:element name="ContentType" type="tns:ContentTypePropertyDefinition"
                       minOccurs="0" />
                </s:sequence>
              </s:complexType>
            </s:element>
            <!--Remove the"any" element and set element "newFields"type as "tns:AddOrUpdateFieldsDefinition" (described in [MS-LISTSWS] section 2.2.4.2) -->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.27.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="newFields" type="tns:AddOrUpdateFieldsDefinition" />
            <!--Remove the"any" element and set element "updateFields"type as "tns:AddOrUpdateFieldsDefinition" (described in [MS-LISTSWS] section 2.2.4.2) -->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.27.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="updateFields" type="tns:AddOrUpdateFieldsDefinition" />
            <!--Remove the"any" element and set element "deleteFields"type as "tns:AddOrUpdateFieldsDefinition" (described in [MS-LISTSWS] section 2.2.4.2) -->
            <!--Actual definition is in [MS-LISTSWS] section 3.1.4.27.2.1-->
            <s:element minOccurs="0" maxOccurs="1" name="deleteFields" type="tns:DeleteFieldsDefinition" />
            <s:element minOccurs="0" maxOccurs="1" name="addToView" type="core:TRUE_Case_Sensitive_Else_Anything" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateContentTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UpdateContentTypeResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Results" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.27.2.2-->
                <s:sequence>
                  <s:element name="Results">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="Method" minOccurs="0" maxOccurs="unbounded">
                          <s:complexType>
                            <s:sequence>
                              <s:element name="ErrorCode" type="s:string" />
                              <s:element name="FieldRef"
                                         type="tns:FieldReferenceDefinitionCT"
                                         minOccurs="0" />
                              <s:element name="Field" type="core:FieldDefinition"
                                         minOccurs="0" />
                              <s:element name="ErrorText"
                                         type="s:string" minOccurs="0" />
                            </s:sequence>
                            <s:attribute name="ID" type="s:string" use="required"/>
                          </s:complexType>
                        </s:element>
                        <s:element name="ListProperties">
                          <s:complexType>
                            <s:attribute name="Description" type="s:string"
                                         use="optional" />
                            <s:attribute name="FeatureId"
                                         type="core:UniqueIdentifierWithOrWithoutBraces"
                                         use="optional"/>
                            <s:attribute name="Group" type="s:string" use="optional" />
                            <s:attribute name="Hidden"
                                         type="core:TRUE_NegOne_Else_Anything"
                                         use="optional" />
                            <s:attribute name="ID" type="core:ContentTypeId"
                                         use="required" />
                            <s:attribute name="Name" type="s:string" use="required" />
                            <s:attribute name="ReadOnly"
                                         type="core:TRUE_NegOne_Else_Anything"
                                         use="optional" />
                            <s:attribute name="Sealed"
                                         type="core:TRUE_Case_Sensitive_Else_Anything"
                                         use="optional" />
                            <s:attribute name="V2ListTemplateName" type="s:string"
                                         use="optional"/>
                            <s:attribute name="Version" type="s:long" use="optional" />
                            <s:anyAttribute namespace="##other" processContents="lax" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteContentType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteContentTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DeleteContentTypeResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Success" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.11.2.2-->
                <s:sequence>
                  <s:element name="Success">
                    <s:complexType />
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateContentTypeXmlDocument">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="core:ContentTypeId" />
            <s:element minOccurs="0" maxOccurs="1" name="newDocument">
              <s:complexType mixed="true">
                <s:sequence>
                  <!--This is a valid "any" element, it means the valid XML document-->
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateContentTypeXmlDocumentResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UpdateContentTypeXmlDocumentResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <s:any/>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateContentTypesXmlDocument">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="newDocument">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "ContentTypes" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.28.2.1-->
                <s:sequence>
                  <s:element name="ContentTypes">
                    <s:complexType>
                      <s:sequence>
                        <s:element name="ContentType" maxOccurs="unbounded">
                          <s:complexType>
                            <s:sequence>
                              <!--This"any" element is meaning the xml document-->
                              <s:any />
                            </s:sequence>
                            <s:attribute name="ID" type="s:string" />
                          </s:complexType>
                        </s:element>
                      </s:sequence>
                    </s:complexType>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateContentTypesXmlDocumentResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UpdateContentTypesXmlDocumentResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Success" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.28.2.2-->
                <s:sequence>
                  <s:element name="Success" minOccurs="0">
                    <s:complexType />
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteContentTypeXmlDocument">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="core:ContentTypeId" />
            <s:element minOccurs="0" maxOccurs="1" name="documentUri" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteContentTypeXmlDocumentResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DeleteContentTypeXmlDocumentResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Success" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.12.2.2-->
                <s:sequence>
                  <s:element name="Success" minOccurs="0">
                    <s:complexType />
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ApplyContentTypeToList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="webUrl" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="contentTypeId" type="core:ContentTypeId" />
            <s:element minOccurs="0" maxOccurs="1" name="listName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ApplyContentTypeToListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ApplyContentTypeToListResult">
              <s:complexType mixed="true">
                <!--Replace "any" element and with the "Success" element-->
                <!--Actual definition is in [MS-LISTSWS] section 3.1.4.6.2.2-->
                <s:sequence>
                  <s:element name="Success">
                    <s:complexType/>
                  </s:element>
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>

    <xs:schema id="RowSchema" targetNamespace="#RowsetSchema" elementFormDefault="qualified"  
               xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="row">
        <xs:complexType>
          <xs:anyAttribute processContents="skip"/>
        </xs:complexType>
      </xs:element>
    </xs:schema>

  </wsdl:types>
  
  <wsdl:message name="GetListSoapIn">
    <wsdl:part name="parameters" element="tns:GetList" />
  </wsdl:message>
  <wsdl:message name="GetListSoapOut">
    <wsdl:part name="parameters" element="tns:GetListResponse" />
  </wsdl:message>
  <wsdl:message name="GetListAndViewSoapIn">
    <wsdl:part name="parameters" element="tns:GetListAndView" />
  </wsdl:message>
  <wsdl:message name="GetListAndViewSoapOut">
    <wsdl:part name="parameters" element="tns:GetListAndViewResponse" />
  </wsdl:message>
  <wsdl:message name="DeleteListSoapIn">
    <wsdl:part name="parameters" element="tns:DeleteList" />
  </wsdl:message>
  <wsdl:message name="DeleteListSoapOut">
    <wsdl:part name="parameters" element="tns:DeleteListResponse" />
  </wsdl:message>
  <wsdl:message name="AddListSoapIn">
    <wsdl:part name="parameters" element="tns:AddList" />
  </wsdl:message>
  <wsdl:message name="AddListSoapOut">
    <wsdl:part name="parameters" element="tns:AddListResponse" />
  </wsdl:message>
  <wsdl:message name="AddListFromFeatureSoapIn">
    <wsdl:part name="parameters" element="tns:AddListFromFeature" />
  </wsdl:message>
  <wsdl:message name="AddListFromFeatureSoapOut">
    <wsdl:part name="parameters" element="tns:AddListFromFeatureResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateListSoapIn">
    <wsdl:part name="parameters" element="tns:UpdateList" />
  </wsdl:message>
  <wsdl:message name="UpdateListSoapOut">
    <wsdl:part name="parameters" element="tns:UpdateListResponse" />
  </wsdl:message>
  <wsdl:message name="GetListCollectionSoapIn">
    <wsdl:part name="parameters" element="tns:GetListCollection" />
  </wsdl:message>
  <wsdl:message name="GetListCollectionSoapOut">
    <wsdl:part name="parameters" element="tns:GetListCollectionResponse" />
  </wsdl:message>
  <wsdl:message name="GetListItemsSoapIn">
    <wsdl:part name="parameters" element="tns:GetListItems" />
  </wsdl:message>
  <wsdl:message name="GetListItemsSoapOut">
    <wsdl:part name="parameters" element="tns:GetListItemsResponse" />
  </wsdl:message>
  <wsdl:message name="GetListItemChangesSoapIn">
    <wsdl:part name="parameters" element="tns:GetListItemChanges" />
  </wsdl:message>
  <wsdl:message name="GetListItemChangesSoapOut">
    <wsdl:part name="parameters" element="tns:GetListItemChangesResponse" />
  </wsdl:message>
  <wsdl:message name="GetListItemChangesWithKnowledgeSoapIn">
    <wsdl:part name="parameters" element="tns:GetListItemChangesWithKnowledge" />
  </wsdl:message>
  <wsdl:message name="GetListItemChangesWithKnowledgeSoapOut">
    <wsdl:part name="parameters" element="tns:GetListItemChangesWithKnowledgeResponse" />
  </wsdl:message>
  <wsdl:message name="GetListItemChangesSinceTokenSoapIn">
    <wsdl:part name="parameters" element="tns:GetListItemChangesSinceToken" />
  </wsdl:message>
  <wsdl:message name="GetListItemChangesSinceTokenSoapOut">
    <wsdl:part name="parameters" element="tns:GetListItemChangesSinceTokenResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateListItemsSoapIn">
    <wsdl:part name="parameters" element="tns:UpdateListItems" />
  </wsdl:message>
  <wsdl:message name="UpdateListItemsSoapOut">
    <wsdl:part name="parameters" element="tns:UpdateListItemsResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateListItemsWithKnowledgeSoapIn">
    <wsdl:part name="parameters" element="tns:UpdateListItemsWithKnowledge" />
  </wsdl:message>
  <wsdl:message name="UpdateListItemsWithKnowledgeSoapOut">
    <wsdl:part name="parameters" element="tns:UpdateListItemsWithKnowledgeResponse" />
  </wsdl:message>
  <wsdl:message name="AddDiscussionBoardItemSoapIn">
    <wsdl:part name="parameters" element="tns:AddDiscussionBoardItem" />
  </wsdl:message>
  <wsdl:message name="AddDiscussionBoardItemSoapOut">
    <wsdl:part name="parameters" element="tns:AddDiscussionBoardItemResponse" />
  </wsdl:message>
  <wsdl:message name="AddWikiPageSoapIn">
    <wsdl:part name="parameters" element="tns:AddWikiPage" />
  </wsdl:message>
  <wsdl:message name="AddWikiPageSoapOut">
    <wsdl:part name="parameters" element="tns:AddWikiPageResponse" />
  </wsdl:message>
  <wsdl:message name="GetVersionCollectionSoapIn">
    <wsdl:part name="parameters" element="tns:GetVersionCollection" />
  </wsdl:message>
  <wsdl:message name="GetVersionCollectionSoapOut">
    <wsdl:part name="parameters" element="tns:GetVersionCollectionResponse" />
  </wsdl:message>
  <wsdl:message name="AddAttachmentSoapIn">
    <wsdl:part name="parameters" element="tns:AddAttachment" />
  </wsdl:message>
  <wsdl:message name="AddAttachmentSoapOut">
    <wsdl:part name="parameters" element="tns:AddAttachmentResponse" />
  </wsdl:message>
  <wsdl:message name="GetAttachmentCollectionSoapIn">
    <wsdl:part name="parameters" element="tns:GetAttachmentCollection" />
  </wsdl:message>
  <wsdl:message name="GetAttachmentCollectionSoapOut">
    <wsdl:part name="parameters" element="tns:GetAttachmentCollectionResponse" />
  </wsdl:message>
  <wsdl:message name="DeleteAttachmentSoapIn">
    <wsdl:part name="parameters" element="tns:DeleteAttachment" />
  </wsdl:message>
  <wsdl:message name="DeleteAttachmentSoapOut">
    <wsdl:part name="parameters" element="tns:DeleteAttachmentResponse" />
  </wsdl:message>
  <wsdl:message name="CheckOutFileSoapIn">
    <wsdl:part name="parameters" element="tns:CheckOutFile" />
  </wsdl:message>
  <wsdl:message name="CheckOutFileSoapOut">
    <wsdl:part name="parameters" element="tns:CheckOutFileResponse" />
  </wsdl:message>
  <wsdl:message name="UndoCheckOutSoapIn">
    <wsdl:part name="parameters" element="tns:UndoCheckOut" />
  </wsdl:message>
  <wsdl:message name="UndoCheckOutSoapOut">
    <wsdl:part name="parameters" element="tns:UndoCheckOutResponse" />
  </wsdl:message>
  <wsdl:message name="CheckInFileSoapIn">
    <wsdl:part name="parameters" element="tns:CheckInFile" />
  </wsdl:message>
  <wsdl:message name="CheckInFileSoapOut">
    <wsdl:part name="parameters" element="tns:CheckInFileResponse" />
  </wsdl:message>
  <wsdl:message name="GetListContentTypesSoapIn">
    <wsdl:part name="parameters" element="tns:GetListContentTypes" />
  </wsdl:message>
  <wsdl:message name="GetListContentTypesSoapOut">
    <wsdl:part name="parameters" element="tns:GetListContentTypesResponse" />
  </wsdl:message>
  <wsdl:message name="GetListContentTypesAndPropertiesSoapIn">
    <wsdl:part name="parameters" element="tns:GetListContentTypesAndProperties" />
  </wsdl:message>
  <wsdl:message name="GetListContentTypesAndPropertiesSoapOut">
    <wsdl:part name="parameters" element="tns:GetListContentTypesAndPropertiesResponse" />
  </wsdl:message>
  <wsdl:message name="GetListContentTypeSoapIn">
    <wsdl:part name="parameters" element="tns:GetListContentType" />
  </wsdl:message>
  <wsdl:message name="GetListContentTypeSoapOut">
    <wsdl:part name="parameters" element="tns:GetListContentTypeResponse" />
  </wsdl:message>
  <wsdl:message name="CreateContentTypeSoapIn">
    <wsdl:part name="parameters" element="tns:CreateContentType" />
  </wsdl:message>
  <wsdl:message name="CreateContentTypeSoapOut">
    <wsdl:part name="parameters" element="tns:CreateContentTypeResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateContentTypeSoapIn">
    <wsdl:part name="parameters" element="tns:UpdateContentType" />
  </wsdl:message>
  <wsdl:message name="UpdateContentTypeSoapOut">
    <wsdl:part name="parameters" element="tns:UpdateContentTypeResponse" />
  </wsdl:message>
  <wsdl:message name="DeleteContentTypeSoapIn">
    <wsdl:part name="parameters" element="tns:DeleteContentType" />
  </wsdl:message>
  <wsdl:message name="DeleteContentTypeSoapOut">
    <wsdl:part name="parameters" element="tns:DeleteContentTypeResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateContentTypeXmlDocumentSoapIn">
    <wsdl:part name="parameters" element="tns:UpdateContentTypeXmlDocument" />
  </wsdl:message>
  <wsdl:message name="UpdateContentTypeXmlDocumentSoapOut">
    <wsdl:part name="parameters" element="tns:UpdateContentTypeXmlDocumentResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateContentTypesXmlDocumentSoapIn">
    <wsdl:part name="parameters" element="tns:UpdateContentTypesXmlDocument" />
  </wsdl:message>
  <wsdl:message name="UpdateContentTypesXmlDocumentSoapOut">
    <wsdl:part name="parameters" element="tns:UpdateContentTypesXmlDocumentResponse" />
  </wsdl:message>
  <wsdl:message name="DeleteContentTypeXmlDocumentSoapIn">
    <wsdl:part name="parameters" element="tns:DeleteContentTypeXmlDocument" />
  </wsdl:message>
  <wsdl:message name="DeleteContentTypeXmlDocumentSoapOut">
    <wsdl:part name="parameters" element="tns:DeleteContentTypeXmlDocumentResponse" />
  </wsdl:message>
  <wsdl:message name="ApplyContentTypeToListSoapIn">
    <wsdl:part name="parameters" element="tns:ApplyContentTypeToList" />
  </wsdl:message>
  <wsdl:message name="ApplyContentTypeToListSoapOut">
    <wsdl:part name="parameters" element="tns:ApplyContentTypeToListResponse" />
  </wsdl:message>
  <wsdl:portType name="ListsSoap">
    <wsdl:operation name="GetList">
      <wsdl:input message="tns:GetListSoapIn" />
      <wsdl:output message="tns:GetListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListAndView">
      <wsdl:input message="tns:GetListAndViewSoapIn" />
      <wsdl:output message="tns:GetListAndViewSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DeleteList">
      <wsdl:input message="tns:DeleteListSoapIn" />
      <wsdl:output message="tns:DeleteListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddList">
      <wsdl:input message="tns:AddListSoapIn" />
      <wsdl:output message="tns:AddListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddListFromFeature">
      <wsdl:input message="tns:AddListFromFeatureSoapIn" />
      <wsdl:output message="tns:AddListFromFeatureSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UpdateList">
      <wsdl:input message="tns:UpdateListSoapIn" />
      <wsdl:output message="tns:UpdateListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListCollection">
      <wsdl:input message="tns:GetListCollectionSoapIn" />
      <wsdl:output message="tns:GetListCollectionSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListItems">
      <wsdl:input message="tns:GetListItemsSoapIn" />
      <wsdl:output message="tns:GetListItemsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListItemChanges">
      <wsdl:input message="tns:GetListItemChangesSoapIn" />
      <wsdl:output message="tns:GetListItemChangesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListItemChangesWithKnowledge">
      <wsdl:input message="tns:GetListItemChangesWithKnowledgeSoapIn" />
      <wsdl:output message="tns:GetListItemChangesWithKnowledgeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListItemChangesSinceToken">
      <wsdl:input message="tns:GetListItemChangesSinceTokenSoapIn" />
      <wsdl:output message="tns:GetListItemChangesSinceTokenSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UpdateListItems">
      <wsdl:input message="tns:UpdateListItemsSoapIn" />
      <wsdl:output message="tns:UpdateListItemsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UpdateListItemsWithKnowledge">
      <wsdl:input message="tns:UpdateListItemsWithKnowledgeSoapIn" />
      <wsdl:output message="tns:UpdateListItemsWithKnowledgeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddDiscussionBoardItem">
      <wsdl:input message="tns:AddDiscussionBoardItemSoapIn" />
      <wsdl:output message="tns:AddDiscussionBoardItemSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddWikiPage">
      <wsdl:input message="tns:AddWikiPageSoapIn" />
      <wsdl:output message="tns:AddWikiPageSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetVersionCollection">
      <wsdl:input message="tns:GetVersionCollectionSoapIn" />
      <wsdl:output message="tns:GetVersionCollectionSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddAttachment">
      <wsdl:input message="tns:AddAttachmentSoapIn" />
      <wsdl:output message="tns:AddAttachmentSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAttachmentCollection">
      <wsdl:input message="tns:GetAttachmentCollectionSoapIn" />
      <wsdl:output message="tns:GetAttachmentCollectionSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DeleteAttachment">
      <wsdl:input message="tns:DeleteAttachmentSoapIn" />
      <wsdl:output message="tns:DeleteAttachmentSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckOutFile">
      <wsdl:input message="tns:CheckOutFileSoapIn" />
      <wsdl:output message="tns:CheckOutFileSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UndoCheckOut">
      <wsdl:input message="tns:UndoCheckOutSoapIn" />
      <wsdl:output message="tns:UndoCheckOutSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckInFile">
      <wsdl:input message="tns:CheckInFileSoapIn" />
      <wsdl:output message="tns:CheckInFileSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListContentTypes">
      <wsdl:input message="tns:GetListContentTypesSoapIn" />
      <wsdl:output message="tns:GetListContentTypesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListContentTypesAndProperties">
      <wsdl:input message="tns:GetListContentTypesAndPropertiesSoapIn" />
      <wsdl:output message="tns:GetListContentTypesAndPropertiesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetListContentType">
      <wsdl:input message="tns:GetListContentTypeSoapIn" />
      <wsdl:output message="tns:GetListContentTypeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CreateContentType">
      <wsdl:input message="tns:CreateContentTypeSoapIn" />
      <wsdl:output message="tns:CreateContentTypeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UpdateContentType">
      <wsdl:input message="tns:UpdateContentTypeSoapIn" />
      <wsdl:output message="tns:UpdateContentTypeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DeleteContentType">
      <wsdl:input message="tns:DeleteContentTypeSoapIn" />
      <wsdl:output message="tns:DeleteContentTypeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UpdateContentTypeXmlDocument">
      <wsdl:input message="tns:UpdateContentTypeXmlDocumentSoapIn" />
      <wsdl:output message="tns:UpdateContentTypeXmlDocumentSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UpdateContentTypesXmlDocument">
      <wsdl:input message="tns:UpdateContentTypesXmlDocumentSoapIn" />
      <wsdl:output message="tns:UpdateContentTypesXmlDocumentSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DeleteContentTypeXmlDocument">
      <wsdl:input message="tns:DeleteContentTypeXmlDocumentSoapIn" />
      <wsdl:output message="tns:DeleteContentTypeXmlDocumentSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ApplyContentTypeToList">
      <wsdl:input message="tns:ApplyContentTypeToListSoapIn" />
      <wsdl:output message="tns:ApplyContentTypeToListSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ListsSoap" type="tns:ListsSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetList">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListAndView">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListAndView" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteList">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddList">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddListFromFeature">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddListFromFeature" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateList">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListCollection">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListCollection" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItems">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItems" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItemChanges">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItemChanges" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItemChangesWithKnowledge">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesWithKnowledge" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItemChangesSinceToken">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesSinceToken" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateListItems">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateListItems" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateListItemsWithKnowledge">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateListItemsWithKnowledge" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddDiscussionBoardItem">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddDiscussionBoardItem" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddWikiPage">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddWikiPage" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetVersionCollection">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetVersionCollection" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddAttachment">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddAttachment" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAttachmentCollection">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetAttachmentCollection" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteAttachment">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteAttachment" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckOutFile">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/CheckOutFile" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UndoCheckOut">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UndoCheckOut" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckInFile">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/CheckInFile" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListContentTypes">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListContentTypes" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListContentTypesAndProperties">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListContentTypesAndProperties" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListContentType">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListContentType" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateContentType">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/CreateContentType" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateContentType">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateContentType" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteContentType">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteContentType" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateContentTypeXmlDocument">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypeXmlDocument" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateContentTypesXmlDocument">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypesXmlDocument" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteContentTypeXmlDocument">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteContentTypeXmlDocument" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ApplyContentTypeToList">
      <soap:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/ApplyContentTypeToList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ListsSoap12" type="tns:ListsSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetList">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListAndView">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListAndView" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteList">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddList">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddListFromFeature">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddListFromFeature" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateList">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListCollection">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListCollection" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItems">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItems" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItemChanges">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItemChanges" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItemChangesWithKnowledge">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesWithKnowledge" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListItemChangesSinceToken">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesSinceToken" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateListItems">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateListItems" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateListItemsWithKnowledge">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateListItemsWithKnowledge" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddDiscussionBoardItem">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddDiscussionBoardItem" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddWikiPage">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddWikiPage" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetVersionCollection">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetVersionCollection" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddAttachment">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/AddAttachment" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAttachmentCollection">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetAttachmentCollection" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteAttachment">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteAttachment" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckOutFile">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/CheckOutFile" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UndoCheckOut">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UndoCheckOut" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckInFile">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/CheckInFile" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListContentTypes">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListContentTypes" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListContentTypesAndProperties">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListContentTypesAndProperties" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetListContentType">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/GetListContentType" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateContentType">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/CreateContentType" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateContentType">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateContentType" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteContentType">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteContentType" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateContentTypeXmlDocument">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypeXmlDocument" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateContentTypesXmlDocument">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypesXmlDocument" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteContentTypeXmlDocument">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/DeleteContentTypeXmlDocument" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ApplyContentTypeToList">
      <soap12:operation soapAction="http://schemas.microsoft.com/sharepoint/soap/ApplyContentTypeToList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
</wsdl:definitions>
