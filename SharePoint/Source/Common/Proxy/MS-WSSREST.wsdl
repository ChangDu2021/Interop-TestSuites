<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://schemas.microsoft.com/sharepoint/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="http://schemas.microsoft.com/sharepoint/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <!--CSDL 1.1, http://schemas.microsoft.com/ado/2007/05/edm-->
    <xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:cg="http://schemas.microsoft.com/ado/2006/04/codegeneration"
               xmlns:edm="http://schemas.microsoft.com/ado/2007/05/edm"
               xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
               targetNamespace="http://schemas.microsoft.com/ado/2007/05/edm">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          Common Data Model Schema Definition Language.
          Copyright (c) Microsoft Corp. All rights reserved.
        </xs:documentation>
      </xs:annotation>
      <xs:import namespace="http://schemas.microsoft.com/ado/2006/04/codegeneration"/>
      <xs:import namespace="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"/>

      <xs:element name="Schema" type="edm:TSchema" />
      <xs:complexType name="TSchema">
        <xs:sequence>
          <xs:group ref="edm:GSchemaBodyElements" minOccurs="0" maxOccurs="unbounded" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Namespace" type="edm:TNamespaceName" use="required" />
        <xs:attribute name="Alias" type="edm:TSimpleIdentifier" use="optional" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:group name="GSchemaBodyElements">
        <xs:choice>
          <xs:element name="Using" type="edm:TUsing" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="Association" type="edm:TAssociation" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="ComplexType" type="edm:TComplexType" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="EntityType" type="edm:TEntityType" minOccurs="0" maxOccurs="unbounded" />
          <xs:element ref="edm:EntityContainer" minOccurs="1" maxOccurs="1" />
        </xs:choice>
      </xs:group>
      <!-- EDM SimpleType instances for use by EDM Instance documents-->
      <xs:simpleType name="EDMSimpleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Binary" />
          <xs:enumeration value="Boolean" />
          <xs:enumeration value="Byte" />
          <xs:enumeration value="DateTime" />
          <xs:enumeration value="DateTimeOffset" />
          <xs:enumeration value="Time" />
          <xs:enumeration value="Decimal" />
          <xs:enumeration value="Double" />
          <xs:enumeration value="Single" />
          <xs:enumeration value="Guid" />
          <xs:enumeration value="Int16" />
          <xs:enumeration value="Int32" />
          <xs:enumeration value="Int64" />
          <xs:enumeration value="String" />
          <xs:enumeration value="SByte" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TMax">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Max" />
        </xs:restriction>
      </xs:simpleType>
      <!-- Facets for Primitive types -->
      <xs:simpleType name="TMaxLengthFacet">
        <xs:union memberTypes="edm:TMax xs:nonNegativeInteger  " />
      </xs:simpleType>
      <xs:simpleType name="TIsFixedLengthFacet">
        <xs:restriction base="xs:boolean" />
      </xs:simpleType>
      <xs:simpleType name="TPrecisionFacet">
        <xs:restriction base="xs:nonNegativeInteger" />
      </xs:simpleType>
      <xs:simpleType name="TScaleFacet">
        <xs:restriction base="xs:nonNegativeInteger" />
      </xs:simpleType>
      <xs:simpleType name="TIsUnicodeFacet">
        <xs:restriction base="xs:boolean" />
      </xs:simpleType>
      <xs:simpleType name="TCollationFacet">
        <xs:restriction base="xs:string" />
      </xs:simpleType>
      <!--
        types at all levels
    -->
      <xs:complexType name="TDocumentation">
        <xs:annotation>
          <xs:documentation>The Documentation element is used to provide documentation of comments on the contents of the XML file.  It is valid under Schema, Type, Index and Relationship elements.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Summary" type="edm:TText" minOccurs="0" maxOccurs="1" />
          <xs:element name="LongDescription" type="edm:TText" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:anyAttribute processContents="lax" namespace="##other" />
      </xs:complexType>
      <xs:complexType name="TText" mixed="true">
        <xs:sequence>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:anyAttribute processContents="lax" namespace="##other" />
      </xs:complexType>
      <xs:complexType name="TXmlOrText" mixed="true">
        <xs:annotation>
          <xs:documentation>This type allows pretty much any content</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:anyAttribute processContents="skip" namespace="##any" />
      </xs:complexType>
      <!-- 
        types of the top level elements 
    -->
      <xs:complexType name="TUsing">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="Namespace" type="edm:TNamespaceName" use="required" />
        <xs:attribute name="Alias" type="edm:TSimpleIdentifier" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TAssociation">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="End" type="edm:TAssociationEnd" minOccurs="2" maxOccurs="2" />
          <xs:element name="ReferentialConstraint" type="edm:TConstraint" minOccurs="0" maxOccurs="1" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TComplexType">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="Property" type="edm:TComplexTypeProperty" minOccurs="0" maxOccurs="unbounded" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="edm:TDerivableTypeAttributes" />
        <xs:attribute ref="cg:TypeAccess" use="optional" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TConstraint">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="Principal" type="edm:TReferentialConstraintRoleElement" minOccurs="1" maxOccurs="1" />
          <xs:element name="Dependent" type="edm:TReferentialConstraintRoleElement" minOccurs="1" maxOccurs="1" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TReferentialConstraintRoleElement">
        <xs:sequence>
          <xs:element name="PropertyRef" type="edm:TPropertyRef" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Role" type="edm:TSimpleIdentifier" use="required" />
      </xs:complexType>
      <xs:complexType name="TNavigationProperty">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="Relationship" type="edm:TQualifiedName" use="required" />
        <xs:attribute name="ToRole" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="FromRole" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute ref="cg:GetterAccess" use="optional" />
        <xs:attribute ref="cg:SetterAccess" use="optional" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TEntityType">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="Key" type="edm:TEntityKeyElement" minOccurs="0" maxOccurs="1" />
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Property" type="edm:TEntityProperty" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="NavigationProperty" type="edm:TNavigationProperty" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="edm:TDerivableTypeAttributes" />
        <xs:attribute ref="cg:TypeAccess" use="optional" />
        <xs:attribute ref="m:HasStream" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TEntityKeyElement">
        <xs:sequence>
          <xs:element name="PropertyRef" type="edm:TPropertyRef" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TPropertyRef">
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
      </xs:complexType>
      <xs:group name="GEmptyElementExtensibility">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:group>
      <!-- 
        base types  
    -->
      <xs:complexType name="TAssociationEnd">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:group ref="edm:TOperations" minOccurs="0" maxOccurs="unbounded" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Type" type="edm:TQualifiedName" use="required" />
        <xs:attribute name="Role" type="edm:TSimpleIdentifier" use="optional" />
        <xs:attribute name="Multiplicity" type="edm:TMultiplicity" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:group name="TOperations">
        <xs:choice>
          <xs:element name="OnDelete" type="edm:TOnAction" maxOccurs="1" minOccurs="0" />
        </xs:choice>
      </xs:group>
      <xs:complexType name="TOnAction">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="Action" type="edm:TAction" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TEntityProperty">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="edm:TCommonPropertyAttributes" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TComplexTypeProperty">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="edm:TCommonPropertyAttributes" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:complexType name="TFunctionImportParameter">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="edm:TFunctionImportParameterAttributes" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>
      <xs:attributeGroup name="TCommonPropertyAttributes">
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="Type" type="edm:TPropertyType" use="required" />
        <xs:attribute name="Nullable" type="xs:boolean" default="true" use="optional" />
        <xs:attribute name="DefaultValue" type="xs:string" use="optional" />
        <xs:attribute name="CollectionKind" type="edm:TPropertyCollectionKind" use="optional" />
        <!-- Start Facets -->
        <xs:attribute name="MaxLength" type="edm:TMaxLengthFacet" use="optional" />
        <xs:attribute name="FixedLength" type="edm:TIsFixedLengthFacet" use="optional" />
        <xs:attribute name="Precision" type="edm:TPrecisionFacet" use="optional" />
        <xs:attribute name="Scale" type="edm:TScaleFacet" use="optional" />
        <xs:attribute name="Unicode" type="edm:TIsUnicodeFacet" use="optional" />
        <xs:attribute name="Collation" type="edm:TCollationFacet" use="optional" />
        <!--End Facets -->
        <xs:attribute name="ConcurrencyMode" type="edm:TConcurrencyMode" use="optional" />
        <xs:attribute ref="cg:SetterAccess" use="optional" />
        <xs:attribute ref="cg:GetterAccess" use="optional" />
      </xs:attributeGroup>
      <xs:attributeGroup name="TFunctionImportParameterAttributes">
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="Type" type="edm:TPropertyType" use="required" />
        <xs:attribute name="Mode" type="edm:TParameterMode" use="optional" />
        <xs:attribute name="MaxLength" type="edm:TMaxLengthFacet" use="optional" />
        <xs:attribute name="Precision" type="edm:TPrecisionFacet" use="optional" />
        <xs:attribute name="Scale" type="edm:TScaleFacet" use="optional" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:attributeGroup>
      <xs:attributeGroup name="TFunctionImportAttributes">
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="ReturnType" type="edm:TFunctionType" use="optional" />
        <xs:attribute name="EntitySet" type="edm:TSimpleIdentifier" use="optional" />
        <xs:attribute ref="cg:MethodAccess" use="optional" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:attributeGroup>
      <xs:attributeGroup name="TTypeAttributes">
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
      </xs:attributeGroup>
      <xs:attributeGroup name="TDerivableTypeAttributes">
        <xs:attributeGroup ref="edm:TTypeAttributes" />
        <xs:attribute name="BaseType" type="edm:TQualifiedName" use="optional" />
        <xs:attribute name="Abstract" type="xs:boolean" use="optional" default="false" />
      </xs:attributeGroup>
      <xs:attributeGroup name="TEntitySetAttributes">
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="EntityType" type="edm:TQualifiedName" use="required" />
        <xs:attribute ref="cg:GetterAccess" use="optional" />
      </xs:attributeGroup>
      <xs:element name="EntityContainer">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="FunctionImport">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
                    <xs:element name="Parameter" type="edm:TFunctionImportParameter" minOccurs="0" maxOccurs="unbounded" />
                  </xs:sequence>
                  <xs:attributeGroup ref="edm:TFunctionImportAttributes" />
                  <xs:attribute ref="m:HttpMethod" />

                </xs:complexType>
              </xs:element>
              <xs:element name="EntitySet">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
                  </xs:sequence>
                  <xs:attributeGroup ref="edm:TEntitySetAttributes" />
                  <xs:anyAttribute processContents="lax" namespace="##other" />
                </xs:complexType>
              </xs:element>
              <xs:element name="AssociationSet">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
                    <xs:element name="End" minOccurs="0" maxOccurs="2">
                      <!-- 
                       1. The number of Ends has to match with ones defined in AssociationType 
                       2. Value for attribute Name should match the defined ones and EntitySet should be of the 
                          defined Entity Type in AssociationType 
                    -->
                      <xs:complexType>
                        <xs:sequence>
                          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
                        </xs:sequence>
                        <xs:attribute name="Role" type="edm:TSimpleIdentifier" use="optional" />
                        <xs:attribute name="EntitySet" type="edm:TSimpleIdentifier" use="required" />
                      </xs:complexType>
                    </xs:element>
                    <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
                  </xs:sequence>
                  <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
                  <xs:attribute name="Association" type="edm:TQualifiedName" use="required" />
                  <xs:anyAttribute namespace="##other" processContents="lax" />
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:sequence>
          <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
          <xs:attribute name="Extends" type ="edm:TSimpleIdentifier" use="optional" />
          <xs:attribute ref="m:IsDefaultEntityContainer" />
        </xs:complexType>
      </xs:element>
      <!-- 
    general  (more or less) purpose simple types 
    -->
      <xs:simpleType name="TParameterMode">
        <xs:restriction base="xs:token">
          <xs:enumeration value="In" />
          <xs:enumeration value="Out" />
          <xs:enumeration value="InOut" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TPropertyCollectionKind">
        <xs:restriction base="xs:token">
          <xs:enumeration value="None" />
          <xs:enumeration value="List" />
          <xs:enumeration value="Bag" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TNamespaceName">
        <xs:restriction base="edm:TQualifiedName">
          <xs:maxLength value="512" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TQualifiedName">
        <xs:restriction base="xs:string">
          <!-- The below pattern represents the allowed identifiers in ECMA specification plus the '.' for namespace qualification  -->
          <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}(\.[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}){0,}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TSimpleIdentifier">
        <xs:restriction base="xs:string">
          <xs:maxLength value="480" />
          <!-- The below pattern represents the allowed identifiers in ECMA specification -->
          <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TPropertyType">
        <xs:union memberTypes="edm:EDMSimpleType edm:TQualifiedName  ">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <!-- The below pattern represents the allowed identifiers in ECMA specification plus the '.' for namespace qualification  -->
              <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}(\.[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}){0,}" />
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
      <xs:simpleType name="TFunctionType">
        <xs:union memberTypes="edm:TQualifiedName    ">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:pattern value="Collection\([^ \t]{1,}(\.[^ \t]{1,}){0,}\)" />
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
      <xs:simpleType name="TAction">
        <xs:restriction base="xs:token">
          <xs:enumeration value="Cascade" />
          <xs:enumeration value="None" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TMultiplicity">
        <xs:restriction base="xs:token">
          <xs:enumeration value="0..1" />
          <xs:enumeration value="1" />
          <xs:enumeration value="*" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TConcurrencyMode">
        <xs:restriction base="xs:token">
          <xs:enumeration value="None" />
          <xs:enumeration value="Fixed" />
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>

    <!--http://schemas.microsoft.com/ado/2006/04/codegeneration-->
    <xs:schema id="CodeGenerationSchema"
                  targetNamespace="http://schemas.microsoft.com/ado/2006/04/codegeneration"
                  elementFormDefault="unqualified"
                  xmlns="http://schemas.microsoft.com/ado/2006/04/codegeneration"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:attribute name="SetterAccess" type="TAccess"/>
      <xs:attribute name="GetterAccess" type="TAccess"/>
      <xs:attribute name="TypeAccess" type="TPublicOrInternalAccess"/>
      <xs:attribute name="MethodAccess" type="TAccess"/>

      <xs:simpleType name="TAccess">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Public" />
          <xs:enumeration value="Internal" />
          <xs:enumeration value="Protected" />
          <xs:enumeration value="Private" />
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="TPublicOrInternalAccess">
        <xs:restriction base="TAccess">
          <xs:enumeration value="Public" />
          <xs:enumeration value="Internal" />
        </xs:restriction>
      </xs:simpleType>

    </xs:schema>

    <!--http://schemas.microsoft.com/ado/2007/06/edmx-->
    <xs:schema elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:cg="http://schemas.microsoft.com/ado/2006/04/codegeneration"
           xmlns:csdl="http://schemas.microsoft.com/ado/2007/05/edm"
           xmlns:ssdl="http://schemas.microsoft.com/ado/2006/04/edm/ssdl"
           xmlns:msl="urn:schemas-microsoft-com:windows:storage:mapping:CS"
           xmlns:edmx="http://schemas.microsoft.com/ado/2007/06/edmx"
           xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
           targetNamespace="http://schemas.microsoft.com/ado/2007/06/edmx">

      <xs:annotation>
        <xs:documentation xml:lang="en">
          Entity Data Model Designer Schema
          Copyright (c) Microsoft Corp. All rights reserved.
        </xs:documentation>
      </xs:annotation>

      <xs:import namespace="http://schemas.microsoft.com/ado/2006/04/codegeneration" />
      <xs:import namespace="http://schemas.microsoft.com/ado/2006/04/edm/ssdl"  />
      <xs:import namespace="http://schemas.microsoft.com/ado/2007/05/edm"  />
      <xs:import namespace="urn:schemas-microsoft-com:windows:storage:mapping:CS" />
      <xs:import namespace="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"/>

      <xs:element name="Edmx" type="edmx:TEdmx" />

      <xs:complexType name="TEdmx">
        <xs:choice>
          <xs:group ref="edmx:GDesignerFirstGroup" minOccurs="1" maxOccurs="1"/>
          <xs:group ref="edmx:GDesignerLastGroup" minOccurs="1" maxOccurs="1"/>
          <xs:group ref="edmx:GDesignerOnly" minOccurs="1" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Version" type="xs:string" use="required" />
      </xs:complexType>

      <!-- GDesignerFirstGroup and GDesignerLastGroup allow us to define the xsd to be order-independent for the designer element & mutually-exclusive runtime & dataservices elements-->
      <xs:group name="GDesignerFirstGroup">
        <xs:sequence>
          <xs:group ref="edmx:GDesignerDataGroup" minOccurs="0"/>
          <xs:group ref="edmx:GRuntimeDataGroup" minOccurs="1"/>
        </xs:sequence>
      </xs:group>

      <xs:group name="GDesignerLastGroup">
        <xs:sequence>
          <xs:group ref="edmx:GRuntimeDataGroup" minOccurs="1"/>
          <xs:group ref="edmx:GDesignerDataGroup" minOccurs="0"/>
        </xs:sequence>
      </xs:group>

      <xs:group name="GDesignerOnly">
        <xs:sequence>
          <xs:group ref="edmx:GDesignerDataGroup" minOccurs="1"/>
        </xs:sequence>
      </xs:group>

      <xs:group name="GRuntimeDataGroup">
        <xs:choice>
          <xs:element name="Runtime" type="edmx:TRuntime" minOccurs="0" maxOccurs="1" />
          <xs:element name="DataServices" type="edmx:TDataServices" minOccurs="0" maxOccurs="1" />
        </xs:choice>
      </xs:group>

      <xs:group name="GDesignerDataGroup">
        <xs:sequence>
          <xs:element name="Designer" type="edmx:TDesigner" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
      </xs:group>

      <xs:complexType name="TDesigner">
        <xs:sequence>
          <xs:element name="Connection" type="edmx:TConnection" minOccurs="0" maxOccurs="1"/>
          <xs:element name="Options" type="edmx:TOptions" minOccurs="0" maxOccurs="1"/>
          <xs:element name="Diagrams" type="edmx:TDiagrams" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TOptions">
        <xs:sequence>
          <xs:element name="DesignerInfoPropertySet" type="edmx:TDesignerInfoPropertySet" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TDiagrams">
        <xs:sequence>
          <xs:element name="Diagram" type="edmx:TDiagram" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TConnection">
        <xs:sequence>
          <xs:element name="DesignerInfoPropertySet" type="edmx:TDesignerInfoPropertySet" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TDesignerInfoPropertySet">
        <xs:sequence>
          <xs:element name="DesignerProperty" type="edmx:TDesignerProperty" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TDesignerProperty">
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="Value" type="xs:string" use="required" />
      </xs:complexType>

      <xs:complexType name="TDiagram">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="EntityTypeShape" type="edmx:TEntityTypeShape" minOccurs="0" maxOccurs="1"/>
            <xs:element name="AssociationConnector" type="edmx:TAssociationConnector" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InheritanceConnector" type="edmx:TInheritanceConnector" minOccurs="0" maxOccurs="1"/>
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string" use="required"/>
        <!-- workaround for our model test to pass -->
        <xs:attribute name="DiagramId" type="xs:string" use="optional"/>
        <xs:attribute name="ZoomLevel" type="xs:int" use="optional"/>
        <xs:attribute name="ShowGrid" type="xs:boolean" use="optional"/>
        <xs:attribute name="SnapToGrid" type="xs:boolean" use="optional"/>
        <xs:attribute name="DisplayType" type="xs:boolean" use="optional"/>
      </xs:complexType>

      <xs:complexType name="TEntityTypeShape">
        <xs:attribute name="EntityType" type="xs:string" use="required"/>
        <xs:attribute name="PointX" type="xs:double" use="optional"/>
        <xs:attribute name="PointY" type="xs:double" use="optional"/>
        <xs:attribute name="Width" type="xs:double" use="optional"/>
        <!-- The Height attribute below is no longer used by the Entity Designer but is maintained in this schema for backwards-compatibility purposes. -->
        <xs:attribute name="Height" type="xs:double" use="optional"/>
        <xs:attribute name="IsExpanded" type="xs:boolean" use="optional"/>
        <xs:attribute name="FillColor" type="xs:string" use="optional"/>
      </xs:complexType>

      <xs:complexType name="TAssociationConnector">
        <xs:sequence>
          <xs:element name="ConnectorPoint" type="edmx:TConnectorPoint" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Association" type="xs:string" use="required"/>
        <xs:attribute name="ManuallyRouted" type="xs:boolean" use="optional"/>
      </xs:complexType>

      <xs:complexType name="TInheritanceConnector">
        <xs:sequence>
          <xs:element name="ConnectorPoint" type="edmx:TConnectorPoint" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="EntityType" type="xs:string" use="required"/>
        <xs:attribute name="ManuallyRouted" type="xs:boolean" use="optional"/>
      </xs:complexType>

      <xs:complexType name="TConnectorPoint">
        <xs:attribute name="PointX" type="xs:double" use="required"/>
        <xs:attribute name="PointY" type="xs:double" use="required"/>
      </xs:complexType>

      <xs:complexType name="TRuntime">
        <xs:all>
          <xs:element name="StorageModels" type="edmx:TRuntimeStorageModels" minOccurs="0" maxOccurs="1"/>
          <xs:element name="ConceptualModels" type="edmx:TRuntimeConceptualModels" minOccurs="0" maxOccurs="1"/>
          <xs:element name="Mappings" type="edmx:TRuntimeMappings" minOccurs="0" maxOccurs="1"/>
        </xs:all>
      </xs:complexType>

      <xs:complexType name="TRuntimeConceptualModels">
        <xs:sequence>
          <xs:element ref="csdl:Schema" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TRuntimeStorageModels">
        <xs:sequence>
          <xs:element ref="ssdl:Schema" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TRuntimeMappings">
        <xs:sequence>
          <xs:element ref="msl:Mapping" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TDataServices">
        <xs:sequence>
          <xs:element ref="csdl:Schema" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute ref="m:DataServiceVersion" use="required" />
      </xs:complexType>
    </xs:schema>

    <!--urn:schemas-microsoft-com:windows:storage:mapping:CS-->
    <xs:schema xmlns:tns="urn:schemas-microsoft-com:windows:storage:mapping:CS"
           attributeFormDefault="unqualified"
           elementFormDefault="qualified"
           targetNamespace="urn:schemas-microsoft-com:windows:storage:mapping:CS"
           xmlns:csmsl="urn:schemas-microsoft-com:windows:storage:mapping:CS"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:annotation>
        <xs:documentation xml:lang="en">
          Common Data Model Schema Definition Language.
          Copyright (c) Microsoft Corp. All rights reserved.
        </xs:documentation>
      </xs:annotation>

      <!-- Root Level element for CS Mapping -->
      <xs:element name="Mapping" type="csmsl:TMapping"/>

      <!-- Type of Root level mapping elements-->
      <xs:complexType name="TMapping">
        <!-- Top level Mapping element can have Alias elements followed by 
         EntityContainer Mapping element-->
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Alias" type="csmsl:TAlias"/>
          <!-- For now we will allow only one EntityContainerMapping to be mapped per MSL File.-->
          <xs:element name="EntityContainerMapping" type="csmsl:TEntityContainerMapping"/>
        </xs:sequence>
        <!-- Space represents the space that the mapping occurs. For CS Mapping
         it always has to be "C-S"-->
        <xs:attribute name="Space" type="csmsl:TSpace" use="required" fixed="C-S" />
      </xs:complexType>

      <!-- Type for QueryView Element -->
      <xs:complexType name="TQueryView">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="TypeName" type="xs:string" use="optional" />
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>




      <!-- Type for Alias Element-->
      <xs:complexType name="TAlias">
        <xs:attribute name="Key" type="csmsl:TSimpleIdentifier" use="required" />
        <xs:attribute name="Value" type="xs:string" use="required" />
      </xs:complexType>

      <!-- Type for EntityContainerMapping Element-->
      <xs:complexType name="TEntityContainerMapping">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element minOccurs="0" name="EntitySetMapping" type="csmsl:TEntitySetMapping"/>
            <xs:element minOccurs="0" name="AssociationSetMapping" type="csmsl:TAssociationSetMapping"/>
            <xs:element minOccurs="0" name="FunctionImportMapping" type="csmsl:TFunctionImportMapping"/>
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="CdmEntityContainer" type="csmsl:TSimpleIdentifier" use="required" />
        <xs:attribute name="StorageEntityContainer" type="xs:string" use="required" />
      </xs:complexType>

      <!-- Type for FunctionImport Mapping element -->
      <xs:complexType name="TFunctionImportMapping">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="ResultMapping" type="csmsl:TFunctionImportMappingResultMapping"/>
        </xs:sequence>
        <xs:attribute name="FunctionName" type="xs:string" use="required"/>
        <xs:attribute name="FunctionImportName" type="csmsl:TSimpleIdentifier" use="required"/>
      </xs:complexType>

      <!-- Type for FunctionImport/ResultMapping element -->
      <xs:complexType name="TFunctionImportMappingResultMapping">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EntityTypeMapping" type="csmsl:TFunctionImportEntityTypeMapping"/>
        </xs:sequence>
      </xs:complexType>

      <!-- Type for EntitySet Mapping element-->
      <xs:complexType name="TEntitySetMapping">
        <xs:choice>
          <xs:choice>
            <xs:sequence>
              <xs:element name="QueryView" type="csmsl:TQueryView" minOccurs="0" maxOccurs="unbounded"/>

              <xs:element name="EntityTypeMapping" type="csmsl:TEntityTypeMapping" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:sequence>
              <xs:element name="MappingFragment" type="csmsl:TMappingFragment" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:choice>
          <xs:group ref="csmsl:TPropertyGroup"/>
        </xs:choice>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required" />
        <xs:attribute name="TypeName" type="xs:string" use="optional" />
        <xs:attribute name="StoreEntitySet" type="xs:string" use="optional" />
      </xs:complexType>

      <!-- Type for AssociationSetMapping element-->
      <xs:complexType name="TAssociationSetMapping">
        <xs:sequence>
          <xs:element name="QueryView" type="xs:string" minOccurs="0" maxOccurs="1"/>
          <xs:element name="EndProperty" type="csmsl:TEndProperty" minOccurs="0" maxOccurs="2"/>
          <xs:element name="Condition" type="csmsl:TCondition" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="ModificationFunctionMapping" type="csmsl:TAssociationSetModificationFunctionMapping" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required" />
        <xs:attribute name="TypeName" type="csmsl:TQualifiedName" use="optional" />
        <xs:attribute name="StoreEntitySet" type="xs:string" use="optional" />
      </xs:complexType>

      <!-- Type for EntityTypeMapping element-->
      <xs:complexType name="TEntityTypeMapping">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="MappingFragment" type="csmsl:TMappingFragment"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ModificationFunctionMapping" type="csmsl:TEntityTypeModificationFunctionMapping"/>
        </xs:sequence>
        <xs:attribute name="TypeName" type="xs:string" use="required" />
      </xs:complexType>

      <!-- Type for FunctionImport EntityTypeMapping element-->
      <xs:complexType name="TFunctionImportEntityTypeMapping">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Condition" type="csmsl:TFunctionImportCondition"/>
        </xs:sequence>
        <xs:attribute name="TypeName" type="xs:string" use="required" />
      </xs:complexType>

      <!-- Type for MappingFragment Element-->
      <xs:complexType name="TMappingFragment">
        <xs:group ref="csmsl:TPropertyGroup" minOccurs="1" maxOccurs="1"/>
        <xs:attribute name="StoreEntitySet" type="xs:string" use="required" />
      </xs:complexType>

      <!-- Type for EntityTypeMapping/ModificationFunctionMapping element -->
      <xs:complexType name="TEntityTypeModificationFunctionMapping">
        <xs:all>
          <xs:element minOccurs="1" maxOccurs="1" name="DeleteFunction" type="csmsl:TEntityTypeModificationFunction"/>
          <xs:element minOccurs="1" maxOccurs="1" name="InsertFunction" type="csmsl:TEntityTypeModificationFunctionWithResult"/>
          <xs:element minOccurs="1" maxOccurs="1" name="UpdateFunction" type="csmsl:TEntityTypeModificationFunctionWithResult"/>
        </xs:all>
      </xs:complexType>

      <!-- Type for AssociationSetMapping/ModificationFunctionMapping element -->
      <xs:complexType name="TAssociationSetModificationFunctionMapping">
        <xs:all>
          <xs:element minOccurs="1" maxOccurs="1" name="DeleteFunction" type="csmsl:TAssociationSetModificationFunction"/>
          <xs:element minOccurs="1" maxOccurs="1" name="InsertFunction" type="csmsl:TAssociationSetModificationFunction"/>
        </xs:all>
      </xs:complexType>

      <!-- Type for entity type DeleteFunction -->
      <xs:complexType name="TEntityTypeModificationFunction">
        <xs:group ref="csmsl:TEntityTypeFunctionMappingPropertyGroup" minOccurs="1" maxOccurs="1"/>
        <xs:attribute name="FunctionName" type="xs:string" use="required"/>
        <xs:attribute name="RowsAffectedParameter" type="xs:string" use="optional"/>
      </xs:complexType>

      <!-- Extensions to modification function for entity type InsertFunction and UpdateFunction -->
      <xs:complexType name="TEntityTypeModificationFunctionWithResult">
        <xs:complexContent>
          <xs:extension base="csmsl:TEntityTypeModificationFunction">
            <xs:group ref="csmsl:TResultBindingGroup" minOccurs="1" maxOccurs="1"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <!-- Type for association set DeleteFunction and InsertFunction -->
      <xs:complexType name="TAssociationSetModificationFunction">
        <xs:group ref="csmsl:TAssociationSetFunctionMappingPropertyGroup" minOccurs="1" maxOccurs="1"/>
        <xs:attribute name="FunctionName" type="xs:string" use="required"/>
        <xs:attribute name="RowsAffectedParameter" type="xs:string" use="optional"/>
      </xs:complexType>

      <!-- Grouping for entity type function mappings -->
      <xs:group name="TEntityTypeFunctionMappingPropertyGroup">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element minOccurs="0" name="ScalarProperty" type="csmsl:TFunctionMappingScalarProperty"/>
            <xs:element minOccurs="0" name="AssociationEnd" type="csmsl:TFunctionMappingAssociationEnd"/>
            <xs:element minOccurs="0" name="ComplexProperty" type="csmsl:TFunctionMappingComplexProperty"/>
          </xs:choice>
        </xs:sequence>
      </xs:group>

      <!-- Grouping for entity type function mappings -->
      <xs:group name="TAssociationSetFunctionMappingPropertyGroup">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element minOccurs="1" name="EndProperty" type="csmsl:TFunctionMappingEndProperty"/>
          </xs:choice>
        </xs:sequence>
      </xs:group>

      <!-- Type for function mapping end property -->
      <xs:complexType name="TFunctionMappingEndProperty">
        <xs:group ref="csmsl:TFunctionMappingAssociationEndPropertyGroup" minOccurs="1" maxOccurs="1"/>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required"/>
      </xs:complexType>

      <!-- Type for function mapping scalar property -->
      <xs:complexType name="TFunctionMappingScalarProperty">
        <xs:attribute name="ParameterName" type="xs:string" use="required"/>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required"/>
        <xs:attribute name="Version" type="csmsl:TVersion" use="optional"/>
      </xs:complexType>

      <!-- Type for function mapping result binding -->
      <xs:complexType name="TResultBinding">
        <xs:attribute name="ColumnName" type="xs:string" use="required"/>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required"/>
      </xs:complexType>

      <!-- Type for function mapping association end -->
      <xs:complexType name="TFunctionMappingAssociationEnd">
        <xs:group ref="csmsl:TFunctionMappingAssociationEndPropertyGroup" minOccurs="1" maxOccurs="1"/>
        <xs:attribute name="AssociationSet" type="csmsl:TSimpleIdentifier" use="required"/>
        <xs:attribute name="From" type="csmsl:TSimpleIdentifier" use="required"/>
        <xs:attribute name="To" type="csmsl:TSimpleIdentifier" use="required"/>
      </xs:complexType>

      <!-- Grouping for property bindings in function mapping end property -->
      <xs:group name="TFunctionMappingAssociationEndPropertyGroup">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ScalarProperty" type="csmsl:TFunctionMappingScalarProperty"/>
        </xs:sequence>
      </xs:group>

      <!-- Type for function mapping complex property -->
      <xs:complexType name="TFunctionMappingComplexProperty">
        <xs:group ref="csmsl:TFunctionMappingComplexPropertyPropertyGroup" minOccurs="1" maxOccurs="1"/>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required"/>
        <xs:attribute name="TypeName" type="xs:string" use="required"/>
      </xs:complexType>

      <!-- Grouping for result bindings in function mappings -->
      <xs:group name="TResultBindingGroup">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResultBinding" type="csmsl:TResultBinding"/>
        </xs:sequence>
      </xs:group>

      <!-- Grouping for property bindings in function mapping association end -->
      <xs:group name="TFunctionMappingComplexPropertyPropertyGroup">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element minOccurs="0" name="ScalarProperty" type="csmsl:TFunctionMappingScalarProperty"/>
            <xs:element minOccurs="0" name="ComplexProperty" type="csmsl:TFunctionMappingComplexProperty"/>
          </xs:choice>
        </xs:sequence>
      </xs:group>

      <!-- Grouping these elements so that they can be reused
       These elements represent the property group
       that can either directly reside unser EntitySet, EntityType
       or MappingFragment-->
      <xs:group name="TPropertyGroup">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element minOccurs="0" name="ComplexProperty" type="csmsl:TComplexProperty"/>
            <xs:element minOccurs="0" name="ScalarProperty" type="csmsl:TScalarProperty"/>
            <xs:element minOccurs="0" name="Condition" type="csmsl:TCondition"/>
          </xs:choice>
        </xs:sequence>
      </xs:group>

      <!-- Type for Condition Element-->
      <xs:complexType name="TCondition">
        <xs:attribute name="Value" type="xs:string" use="optional" />
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="optional" />
        <xs:attribute name="ColumnName" type="xs:string" use="optional" />
        <xs:attribute name="IsNull" type="xs:boolean" use="optional" />
      </xs:complexType>

      <!-- Type for FunctionImport Condition element-->
      <xs:complexType name="TFunctionImportCondition">
        <xs:attribute name="Value" type="xs:string" use="optional" />
        <xs:attribute name="ColumnName" type="xs:string" use="required" />
        <xs:attribute name="IsNull" type="xs:boolean" use="optional" />
      </xs:complexType>

      <!-- Type for End Property Elements in Association Maps -->
      <xs:complexType name="TEndProperty">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="ScalarProperty" type="csmsl:TScalarProperty"/>
        </xs:sequence>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required" />
      </xs:complexType>

      <!-- Type for Complex Property Map elements-->
      <xs:complexType name="TComplexProperty">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="ScalarProperty" type="csmsl:TScalarProperty"/>
            <xs:element name="ComplexProperty" type="csmsl:TComplexProperty"/>
            <xs:element name="ComplexTypeMapping" type="csmsl:TComplexTypeMapping"/>
            <xs:element name="Condition" type="csmsl:TCondition"/>
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required" />
        <xs:attribute name="TypeName" type="xs:string" use="optional" />
        <xs:attribute name="IsPartial" type="xs:boolean" use="optional" />
      </xs:complexType>

      <!-- Type for Complex Type mapping element-->
      <xs:complexType name="TComplexTypeMapping">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="ScalarProperty" type="csmsl:TScalarProperty"/>
            <xs:element name="ComplexProperty" type="csmsl:TComplexProperty"/>
            <xs:element name="Condition" type="csmsl:TCondition"/>
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="TypeName" type="xs:string" use="optional" />
        <xs:attribute name="IsPartial" type="xs:boolean" use="optional" />
      </xs:complexType>

      <!-- Type for ScalarProperty Element-->
      <xs:complexType name="TScalarProperty">
        <xs:attribute name="Name" type="csmsl:TSimpleIdentifier" use="required" />
        <xs:attribute name="ColumnName" type="xs:string" use="required" />
      </xs:complexType>

      <!--Definition for SimpleIdentifier
      This is the same definition that is being used in the CSDL XSD
      -->
      <xs:simpleType name="TSimpleIdentifier">
        <xs:restriction base="xs:token">
          <!-- The below pattern represents the allowed identifiers in ECMA specification -->
          <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}"/>
        </xs:restriction>
      </xs:simpleType>


      <!--Definition for QualifiedName. QualifiedName is SimpleIdentifiers with '.'
      allowed. This is the same definition that is being used in the CSDL XSD
      -->
      <xs:simpleType name="TQualifiedName">
        <xs:restriction base="xs:token">
          <!-- The below pattern represents the allowed identifiers in ECMA specification plus the '.' for namespace qualification  -->
          <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}(\.[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}){0,}"/>
        </xs:restriction>
      </xs:simpleType>

      <!--Definition for Version, which can 'original' or 'current' as its value-->
      <xs:simpleType name="TVersion">
        <xs:restriction base="xs:token">
          <xs:enumeration value="Original"/>
          <xs:enumeration value="Current"/>
        </xs:restriction>
      </xs:simpleType>

      <!-- Type fopr Space or Type Attribute -->
      <xs:simpleType name="TSpace">
        <xs:restriction base="xs:token">
          <xs:enumeration value="C-S" />
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>

    <!--http://schemas.microsoft.com/ado/2006/04/edm/ssdl-->
    <xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:edm="http://schemas.microsoft.com/ado/2006/04/edm/ssdl"
           xmlns:gen="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator"
           targetNamespace="http://schemas.microsoft.com/ado/2006/04/edm/ssdl">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          Common Data Model Schema Definition Language.
          Copyright (c) Microsoft Corp. All rights reserved.
        </xs:documentation>
      </xs:annotation>
      <xs:import namespace="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" />
      <xs:element name="Schema" type="edm:TSchema"/>
      <xs:complexType name="TSchema">
        <xs:sequence>
          <xs:group ref="edm:GSchemaBodyElements" minOccurs="0" maxOccurs="unbounded"/>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Namespace" type="edm:TQualifiedName" use="required" />
        <xs:attribute name="Alias" type="edm:TSimpleIdentifier" use="optional" />
        <xs:attribute name="Provider" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="ProviderManifestToken" type="edm:TSimpleIdentifier" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <xs:group name="GSchemaBodyElements">
        <xs:choice>
          <xs:element name="Association" type="edm:TAssociation" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="EntityType" type="edm:TEntityType" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="edm:EntityContainer" minOccurs="1" maxOccurs="1"/>
          <xs:element name="Function" type="edm:TFunction" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
      </xs:group>

      <xs:simpleType name="TMax">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Max"/>
        </xs:restriction>
      </xs:simpleType>

      <!-- Facets for Primitive types -->
      <xs:simpleType name="TMaxLengthFacet">
        <xs:union memberTypes="edm:TMax xs:nonNegativeInteger"/>
      </xs:simpleType>

      <xs:simpleType name="TIsFixedLengthFacet">
        <xs:restriction base="xs:boolean"/>
      </xs:simpleType>

      <xs:simpleType name="TKindFacet">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Utc"/>
          <xs:enumeration value="Local"/>
          <xs:enumeration value="Unspecified"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="TPrecisionFacet">
        <xs:restriction base="xs:nonNegativeInteger"/>
      </xs:simpleType>

      <xs:simpleType name="TScaleFacet">
        <xs:restriction base="xs:nonNegativeInteger"/>
      </xs:simpleType>

      <xs:simpleType name="TIsUnicodeFacet">
        <xs:restriction base="xs:boolean"/>
      </xs:simpleType>

      <xs:simpleType name="TCollationFacet">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>

      <!-- 
        types of the top level elements 
    -->
      <xs:complexType name="TDocumentation">
        <xs:annotation>
          <xs:documentation>
            The Documentation element is used to provide documentation of comments on the contents of the XML file. It is valid under Schema, Type, Index and Relationship elements.
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Summary" type="edm:TText" minOccurs="0" maxOccurs="1" />
          <xs:element name="LongDescription" type="edm:TText" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:anyAttribute processContents="lax" namespace="##other" />
      </xs:complexType>

      <xs:complexType name="TText" mixed="true">
        <xs:sequence>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:anyAttribute processContents="lax" namespace="##other" />
      </xs:complexType>


      <xs:complexType name="TAssociation">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="End" type="edm:TAssociationEnd" minOccurs="2" maxOccurs="2"/>
          <xs:element name="ReferentialConstraint" type="edm:TConstraint" minOccurs="0" maxOccurs="1" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Name" type="edm:TUndottedIdentifier" use="required" />
        <!--<xs:attribute name="Identifying" type="xs:boolean" use="optional" default="false" />-->
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <xs:complexType name="TConstraint">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="Principal" type="edm:TReferentialConstraintRoleElement" minOccurs="1" maxOccurs="1" />
          <xs:element name="Dependent" type="edm:TReferentialConstraintRoleElement" minOccurs="1" maxOccurs="1" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <xs:complexType name="TReferentialConstraintRoleElement">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="PropertyRef" type="edm:TPropertyRef" minOccurs="1" maxOccurs="unbounded" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Role" type="edm:TSimpleIdentifier" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <xs:complexType name="TEntityType">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="Key" type="edm:TEntityKeyElement" minOccurs="0" maxOccurs="1"/>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Property" type="edm:TEntityProperty" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Name" type="edm:TUndottedIdentifier" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <xs:complexType name ="TEntityKeyElement">
        <xs:sequence>
          <xs:element name="PropertyRef" type="edm:TPropertyRef" minOccurs="1" maxOccurs="unbounded" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="TPropertyRef">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <xs:group name="GEmptyElementExtensibility">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:group>

      <!-- 
        base types  
    -->
      <xs:complexType name="TAssociationEnd">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:group ref="edm:TOperations" minOccurs="0" maxOccurs="unbounded" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Type" type="edm:TQualifiedName" use="required" />
        <xs:attribute name="Role" type="edm:TSimpleIdentifier" use="optional" />
        <xs:attribute name="Multiplicity" type="edm:TMultiplicity" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <xs:group name="TOperations">
        <xs:choice>
          <xs:element name="OnDelete" type="edm:TOnAction" maxOccurs="1" minOccurs="0" />
        </xs:choice>
      </xs:group>

      <xs:complexType name="TOnAction">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Action" type="edm:TAction" use="required" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <xs:complexType name="TEntityProperty">
        <xs:sequence>
          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attributeGroup ref="edm:TCommonPropertyAttributes"/>
        <xs:attribute name="StoreGeneratedPattern" type="edm:TStoreGeneratedPattern" use="optional" />
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <xs:attributeGroup name="TCommonPropertyAttributes">
        <xs:attribute name="Name" type="edm:TSimpleIdentifier" use="required" />
        <xs:attribute name="Type" type="edm:TPropertyType" use="required" />
        <xs:attribute name="Nullable" type="xs:boolean" default="true" use="optional" />
        <xs:attribute name="DefaultValue" type="xs:string" use="optional" />

        <!-- Start Facets -->
        <xs:attribute name="MaxLength" type="edm:TMaxLengthFacet" use="optional" />
        <xs:attribute name="FixedLength" type="edm:TIsFixedLengthFacet" use="optional" />
        <xs:attribute name="Precision" type="edm:TPrecisionFacet" use="optional" />
        <xs:attribute name="Scale" type="edm:TScaleFacet" use="optional" />
        <xs:attribute name="Unicode" type="edm:TIsUnicodeFacet" use="optional" />
        <xs:attribute name="Collation" type="edm:TCollationFacet" use="optional" />
        <!--End Facets -->
      </xs:attributeGroup>


      <xs:element name="EntityContainer">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="EntitySet">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
                    <xs:element name="DefiningQuery" type="edm:TCommandText" minOccurs="0" maxOccurs="1"/>
                    <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
                  </xs:sequence>
                  <xs:attribute name="Name" type="edm:TUndottedIdentifier" use="required" />
                  <xs:attribute name="EntityType" type="edm:TQualifiedName" use="required" />
                  <xs:attribute name="Schema" type="edm:TSimpleIdentifier" use="optional" />
                  <xs:attribute name="Table" type="edm:TSimpleIdentifier" use="optional" />
                  <xs:attribute ref="gen:Type" use="optional"/>
                  <xs:attribute ref="gen:Schema" use="optional"/>
                  <xs:attribute ref="gen:Name" use="optional"/>
                  <xs:anyAttribute processContents="lax" namespace="##other" />
                </xs:complexType>
              </xs:element>

              <xs:element name="AssociationSet">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
                    <xs:element name="End" minOccurs="0" maxOccurs="2">
                      <!-- 1. The number of Ends has to match with ones defined in AssociationType 
                                         2. Value for attribute Name should match the defined ones and EntitySet should be of the 
                                            defined Entity Type in AssociationType 
                                    -->
                      <xs:complexType>
                        <xs:sequence>
                          <xs:group ref="edm:GEmptyElementExtensibility" minOccurs="0" maxOccurs="1"/>
                        </xs:sequence>
                        <xs:attribute name="Role" type="edm:TSimpleIdentifier" use="optional" />
                        <xs:attribute name="EntitySet" type="edm:TSimpleIdentifier" use="required" />
                      </xs:complexType>
                    </xs:element>
                    <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
                  </xs:sequence>
                  <xs:attribute name="Name" type="edm:TUndottedIdentifier" use="required" />
                  <xs:attribute name="Association" type="edm:TQualifiedName" use="required" />
                  <xs:anyAttribute namespace="##other" processContents="lax" />
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:sequence>
          <xs:attribute name="Name" type="edm:TUndottedIdentifier" use="required" />
        </xs:complexType>
      </xs:element>

      <xs:complexType name="TFunction">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:element name="CommandText" type="edm:TCommandText" minOccurs="0" maxOccurs="1" />
          <xs:element name="Parameter" type="edm:TParameter" minOccurs="0" maxOccurs="unbounded" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Name" type="edm:TUndottedIdentifier" use="required" />
        <xs:attribute name="ReturnType" type="edm:TFunctionType" use="optional" />
        <xs:attribute name="Aggregate" type="xs:boolean" use="optional" />
        <xs:attribute name="BuiltIn" type="xs:boolean" use="optional" />
        <xs:attribute name="StoreFunctionName" type="xs:string" use="optional" />
        <xs:attribute name="NiladicFunction" type="xs:boolean" use="optional" />
        <xs:attribute name="IsComposable" type="xs:boolean" use="optional" default="true" />
        <xs:attribute name="ParameterTypeSemantics" type="edm:TParameterTypeSemantics" use="optional" default="AllowImplicitConversion" />
        <xs:attribute name="Schema" type="edm:TSimpleIdentifier" use="optional" />
        <xs:attribute ref="gen:Schema" use="optional"/>
        <xs:attribute ref="gen:Name" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <xs:complexType name="TParameter">
        <xs:sequence>
          <xs:element name="Documentation" type="edm:TDocumentation" minOccurs="0" maxOccurs="1" />
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="Type" type="edm:TFunctionType" use="required" />
        <xs:attribute name="Mode" type="edm:TParameterMode" use="optional" />
        <!-- Start Facets -->
        <xs:attribute name="MaxLength" type="edm:TMaxLengthFacet" use="optional" />
        <xs:attribute name="Precision" type="edm:TPrecisionFacet" use="optional" />
        <xs:attribute name="Scale" type="edm:TScaleFacet" use="optional" />
        <!--End Facets -->
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:complexType>

      <!-- 
    general (more or less) purpose simple types 
    -->

      <xs:simpleType name="TCommandText">
        <xs:restriction base="xs:string">
          <xs:whiteSpace value="preserve"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="TQualifiedName">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>

      <xs:simpleType name="TUndottedIdentifier">
        <xs:restriction base="xs:string">
          <!-- no periods -->
          <xs:pattern value="[^.]{1,}" />
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="TSimpleIdentifier">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>

      <xs:simpleType name="TPropertyType">
        <xs:union memberTypes="edm:TQualifiedName">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <!-- The below pattern represents the allowed identifiers in ECMA specification plus the '.' for namespace qualification -->
              <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}(\.[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}){0,}" />
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>

      <xs:simpleType name="TAction">
        <xs:restriction base="xs:token">
          <xs:enumeration value="Cascade" />
          <xs:enumeration value="Restrict" />
          <xs:enumeration value="None" />
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="TMultiplicity">
        <xs:restriction base="xs:token">
          <xs:enumeration value="0..1" />
          <xs:enumeration value="1" />
          <xs:enumeration value="*" />
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="TStoreGeneratedPattern">
        <xs:restriction base="xs:token">
          <xs:enumeration value="None" />
          <xs:enumeration value="Identity" />
          <xs:enumeration value="Computed" />
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="TParameterMode">
        <xs:restriction base="xs:token">
          <xs:enumeration value="In" />
          <xs:enumeration value="Out" />
          <xs:enumeration value="InOut" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TFunctionType">
        <xs:union memberTypes="edm:TQualifiedName ">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:pattern value="Collection\([^ \t]{1,}(\.[^ \t]{1,}){0,}\)" />
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
      <xs:simpleType name="TParameterTypeSemantics">
        <xs:restriction base="xs:token">
          <xs:enumeration value="ExactMatchOnly" />
          <xs:enumeration value="AllowImplicitPromotion" />
          <xs:enumeration value="AllowImplicitConversion" />
        </xs:restriction>
      </xs:simpleType>


    </xs:schema>

    <!--http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator-->
    <xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:source="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator"
           targetNamespace="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          Common Data Model Schema Definition Language.
          Copyright (c) Microsoft Corp. All rights reserved.
        </xs:documentation>
      </xs:annotation>

      <xs:attribute name="Type" type="source:TSourceType"/>
      <xs:attribute name="Schema" type="xs:string"/>
      <xs:attribute name="Name" type="xs:string"/>

      <xs:simpleType name="TSourceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Tables" />
          <xs:enumeration value="Views" />
        </xs:restriction>
      </xs:simpleType>

    </xs:schema>

    <!--http://schemas.microsoft.com/ado/2007/08/dataservices/metadata-->
    <xs:schema targetNamespace="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
              attributeFormDefault="qualified" elementFormDefault="qualified"
              xmlns:edmx="http://schemas.microsoft.com/ado/2007/06/edmx"
              xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
              xmlns:d="http://schemas.microsoft.com/ado/2007/08/dataservices"
              xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:import namespace="http://www.w3.org/2001/XMLSchema" />
      <xs:import namespace="http://schemas.microsoft.com/ado/2007/08/dataservices" />

      <xs:attribute name="FC_KeepInContent" type="xs:boolean"/>
      <xs:attribute name="FC_ContentKind" type="xs:string"/>
      <xs:attribute name="FC_NsPrefix"/>
      <xs:attribute name="FC_NsUri" />
      <xs:attribute name="FC_SourcePath" />
      <xs:attribute name="FC_TargetPath" type="xs:string"/>
      <xs:attribute name="FC_Criteria" />
      <xs:attribute name="FC_CriteriaValue" />

      <xs:attribute name="IsDefaultEntityContainer" type="xs:boolean" />
      <xs:attribute name="DataServiceVersion" type="xs:decimal" />
      <xs:attribute name="HasStream" type="xs:boolean" />
      <xs:attribute name="HttpMethod" type="xs:string" />
      <xs:attribute name="etag" type="xs:string" />

      <xs:complexType name="propertiesType">
        <xs:sequence>
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##any" processContents="skip"></xs:any>
        </xs:sequence>
      </xs:complexType>

      <xs:element type="m:propertiesType" name="properties"></xs:element>
      <xs:element name="count" type="xs:string"></xs:element>
    </xs:schema>

    <!--Atom-->
    <xs:schema targetNamespace="http://www.w3.org/2005/Atom"
                elementFormDefault="qualified"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:atom="http://www.w3.org/2005/Atom"
                xmlns:xhtml="http://www.w3.org/1999/xhtml"
                xmlns:xml="http://www.w3.org/XML/1998/namespace"
                xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
                xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
                xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
                jaxb:extensionBindingPrefixes="xjc" jaxb:version="2.1" version="0.62d">

      <xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <!--<xs:import namespace="http://www.w3.org/2001/XMLSchema"/>-->
      <xs:import namespace="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"/>

      <!-- Common attributes -->
      <xs:attributeGroup name="atomCommonAttributes">
        <xs:attribute ref="xml:base" />
        <xs:attribute ref="xml:lang" />
        <xs:attributeGroup ref="atom:undefinedAttribute" />
      </xs:attributeGroup>
      <!-- Text Constructs -->
      <xs:attributeGroup name="atomPlainTextConstruct">
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
        <xs:attribute name="type">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="text" />
              <xs:enumeration value="html" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:attributeGroup>
      <xs:group name="atomXHTMLTextConstruct">
        <xs:sequence>
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="http://www.w3.org/1999/xhtml" />
        </xs:sequence>
      </xs:group>
      <xs:attributeGroup name="atomXHTMLTextConstruct">
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="xhtml" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:attributeGroup>
      <xs:complexType name="atomTextConstruct" mixed="true">
        <xs:group minOccurs="0" ref="atom:atomXHTMLTextConstruct" />
        <xs:attribute name="type">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="text" />
              <xs:enumeration value="html" />
              <xs:enumeration value="xhtml" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
      </xs:complexType>
      <!-- Person Construct -->
      <xs:complexType name="atomPersonConstruct">
        <xs:sequence>
          <xs:element ref="atom:name" minOccurs="0" maxOccurs="1" />
          <xs:element ref="atom:uri" minOccurs="0" maxOccurs="1" />
          <xs:element ref="atom:email" minOccurs="0" maxOccurs="1" />
          <xs:group ref="atom:extensionElement" minOccurs="0"
                  maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
      </xs:complexType>
      <xs:element name="name" type="xs:string" />
      <xs:element name="uri" type="xs:string" />
      <xs:element name="email" type="atom:atomEmailAddress" />
      <!-- Date Construct -->
      <xs:complexType name="atomDateConstruct">
        <xs:simpleContent>
          <xs:extension base="xs:dateTime">
            <xs:attributeGroup ref="atom:atomCommonAttributes" />
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <!-- atom:feed -->
      <xs:element name="feed" type="atom:feedType"></xs:element>
      <xs:complexType name="feedType">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property name="items" />
              </xs:appinfo>
            </xs:annotation>
            <xs:element ref="atom:author" />
            <xs:element ref="atom:category" />
            <xs:element ref="atom:contributor" />
            <xs:element ref="atom:generator" />
            <xs:element ref="atom:icon" />
            <xs:element ref="atom:id" />
            <xs:element ref="atom:link" />
            <xs:element ref="atom:logo" />
            <xs:element ref="atom:rights" />
            <xs:element ref="atom:subtitle" />
            <xs:element ref="atom:title" />
            <xs:element ref="atom:updated" />
          </xs:choice>

          <!--  original atom extension element -->
          <xs:group ref="atom:extensionElement" />
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="atom:entry" />
        </xs:sequence>
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
      </xs:complexType>
      <!-- atom:entry -->
      <xs:element name="entry" type="atom:entryType">
      </xs:element>
      <xs:complexType name="entryType">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property name="items" />
              </xs:appinfo>
            </xs:annotation>
            <xs:element ref="atom:author" />
            <xs:element ref="atom:category" />
            <xs:element ref="atom:content" />
            <xs:element ref="atom:contributor" />
            <xs:element ref="atom:id" />
            <xs:element ref="atom:link" />
            <xs:element ref="atom:published" />
            <xs:element ref="atom:rights" />
            <xs:element ref="atom:source" />
            <xs:element ref="atom:summary" />
            <xs:element ref="atom:title" />
            <xs:element ref="atom:updated" />
          </xs:choice>

          <!-- Normal ATOM extension element -->
          <xs:group ref="atom:extensionElement" />
        </xs:sequence>
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
      </xs:complexType>

      <!-- atom:content -->
      <xs:attributeGroup name="atomInlineTextConstruct">
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
        <xs:attribute name="type">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="text" />
              <xs:enumeration value="html" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:attributeGroup>
      <!--<xs:group name="atomInlineOtherConstruct">
        <xs:sequence>
          <xs:element type="m:propertiesType" name="properties">
          </xs:element>
        </xs:sequence>
      </xs:group>-->
      <xs:attributeGroup name="atomInlineOtherConstruct">
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
        <xs:attribute name="type">
          <xs:simpleType>
            <xs:union memberTypes="atom:atomMediaType">
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:enumeration value="xhtml" />
                </xs:restriction>
              </xs:simpleType>
            </xs:union>
          </xs:simpleType>
        </xs:attribute>
      </xs:attributeGroup>
      <xs:attributeGroup name="atomOutOfLineConstruct">
        <xs:attributeGroup ref="atom:atomCommonAttributes" />
        <xs:attribute name="type" type="atom:atomMediaType" />
        <xs:attribute name="src" use="required" />
      </xs:attributeGroup>
      <xs:element name="content">
        <xs:complexType mixed="true">
          <xs:sequence maxOccurs="unbounded" minOccurs="0">
            <xs:element ref="m:properties" />
          </xs:sequence>
          <xs:attribute name="type">
            <xs:simpleType>
              <xs:union memberTypes="atom:atomMediaType">
                <xs:simpleType>
                  <xs:restriction base="xs:token">
                    <xs:enumeration value="text" />
                    <xs:enumeration value="html" />
                  </xs:restriction>
                </xs:simpleType>
                <xs:simpleType>
                  <xs:union memberTypes="atom:atomMediaType">
                    <xs:simpleType>
                      <xs:restriction base="xs:token">
                        <xs:enumeration value="xhtml" />
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:union>
                </xs:simpleType>
              </xs:union>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="atom:atomCommonAttributes" />
          <xs:attribute name="src" />
        </xs:complexType>
      </xs:element>

      <!-- atom:author -->
      <xs:element name="author" type="atom:atomPersonConstruct" />
      <!-- atom:category -->
      <xs:element name="category">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="atom:undefinedContent">
              <xs:attributeGroup ref="atom:atomCommonAttributes" />
              <xs:attribute name="term" use="required" />
              <xs:attribute name="scheme" />
              <xs:attribute name="label" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <!-- atom:contributor -->
      <xs:element name="contributor" type="atom:atomPersonConstruct" />
      <!-- atom:generator -->
      <xs:element name="generator">
        <xs:complexType mixed="true">
          <xs:attributeGroup ref="atom:atomCommonAttributes" />
          <xs:attribute name="uri" />
          <xs:attribute name="version" />
        </xs:complexType>
      </xs:element>
      <!-- atom:icon -->
      <xs:element name="icon">
        <xs:complexType mixed="true">
          <xs:attributeGroup ref="atom:atomCommonAttributes" />
        </xs:complexType>
      </xs:element>
      <!-- atom:id -->
      <xs:element name="id">
        <xs:complexType mixed="true">
          <xs:attributeGroup ref="atom:atomCommonAttributes" />
        </xs:complexType>
      </xs:element>
      <!-- atom:logo -->
      <xs:element name="logo">
        <xs:complexType mixed="true">
          <xs:attributeGroup ref="atom:atomCommonAttributes" />
        </xs:complexType>
      </xs:element>
      <!-- atom:link -->
      <xs:element name="link">
        <xs:annotation>
          <xs:documentation>
            The "atom:link" element defines a reference from an
            entry or feed to a Web resource. This specification
            assigns no
            meaning to the content (if any) of this
            element.
          </xs:documentation>
        </xs:annotation>

        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="atom:undefinedContent">
              <xs:attributeGroup ref="atom:atomCommonAttributes" />
              <xs:attribute name="href" use="required" />
              <xs:attribute name="rel"></xs:attribute>
              <xs:attribute name="type" type="atom:atomMediaType" />
              <xs:attribute name="hreflang" type="atom:atomLanguageTag" />
              <xs:attribute name="title" />
              <xs:attribute name="length" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <!-- atom:published -->
      <xs:element name="published" type="atom:atomDateConstruct" />
      <!-- atom:rights -->
      <xs:element name="rights" type="atom:atomTextConstruct" />
      <!-- atom:source -->
      <xs:element name="source">
        <xs:annotation>
          <xs:documentation>
            atom:source is used to preserve metadata of a feed
            when
            an entry is copied from a feed to another feed.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="atom:author" />
            <xs:element ref="atom:category" />
            <xs:element ref="atom:contributor" />
            <xs:element ref="atom:generator" />
            <xs:element ref="atom:icon" />
            <xs:element ref="atom:id" />
            <xs:element ref="atom:link" />
            <xs:element ref="atom:logo" />
            <xs:element ref="atom:rights" />
            <xs:element ref="atom:subtitle" />
            <xs:element ref="atom:title" />
            <xs:element ref="atom:updated" />
            <xs:group ref="atom:extensionElement" />
          </xs:choice>
          <xs:attributeGroup ref="atom:atomCommonAttributes" />
        </xs:complexType>
      </xs:element>
      <!-- atom:subtitle -->
      <xs:element name="subtitle" type="atom:atomTextConstruct" />
      <!-- atom:summary -->
      <xs:element name="summary" type="atom:atomTextConstruct" />
      <!-- atom:title -->
      <xs:element name="title" type="atom:atomTextConstruct">
        <xs:annotation>
          <xs:documentation>
            The "atom:title" element is a Text construct that
            conveys a human- readable title for an entry or feed.
            atomTitle =
            element atom:title { atomTextConstruct }.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <!-- atom:updated -->
      <xs:element name="updated" type="atom:atomDateConstruct">
        <xs:annotation>
          <xs:documentation>
            The "atom:updated" element is a Date construct
            indicating the most recent instant in time when an entry
            or feed was
            modified in a way the publisher considers
            significant. Therefore, not
            all modifications
            necessarily result in a changed atom:updated value.
            atomUpdated = element atom:updated { atomDateConstruct
            }. Publishers
            MAY change the value of this element over
            time.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <!-- Low-level simple types -->
      <xs:simpleType name="atomNCName">
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
          <xs:pattern value="[^:]*" />
        </xs:restriction>
      </xs:simpleType>
      <!-- Whatever a media type is, it contains at least one slash -->
      <xs:simpleType name="atomMediaType">
        <xs:restriction base="xs:string">
          <xs:pattern value=".+/.+" />
        </xs:restriction>
      </xs:simpleType>
      <!-- As defined in RFC 3066 -->
      <xs:simpleType name="atomLanguageTag">
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Za-z]{1,8}(-[A-Za-z0-9]{1,8})*" />
        </xs:restriction>
      </xs:simpleType>
      <!--
                Unconstrained; it's not entirely clear how IRI fit into xsd:anyURI so
                let's not try to constrain it here
        -->
      <!-- Whatever an email address is, it contains at least one @ -->
      <xs:simpleType name="atomEmailAddress">
        <xs:restriction base="xs:string">
          <xs:pattern value=".+@.+" />
        </xs:restriction>
      </xs:simpleType>

      <!-- Simple Extension -->
      <xs:group name="extensionElement">
        <xs:sequence>
          <xs:any namespace="##other" processContents="lax" minOccurs="0"
                  maxOccurs="unbounded">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property name='anyOther' />
              </xs:appinfo>
            </xs:annotation>
          </xs:any>
          <xs:any namespace="##local" processContents="lax" minOccurs="0"
                  maxOccurs="unbounded">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property name='anyLocal' />
              </xs:appinfo>
            </xs:annotation>
          </xs:any>
        </xs:sequence>
      </xs:group>
      <xs:attributeGroup name="undefinedAttribute">
        <xs:anyAttribute namespace="##other" processContents="lax" />
      </xs:attributeGroup>
      <xs:complexType name="undefinedContent">
        <xs:sequence>
          <xs:any namespace="##other" processContents="lax" minOccurs="0"
                  maxOccurs="unbounded">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property name='anyOther' />
              </xs:appinfo>
            </xs:annotation>
          </xs:any>
          <xs:any namespace="##local" processContents="lax" minOccurs="0"
                  maxOccurs="unbounded">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property name='anyLocal' />
              </xs:appinfo>
            </xs:annotation>
          </xs:any>
        </xs:sequence>

        <!--
                        <xs:group minOccurs="0" maxOccurs="unbounded"
                        ref="atom:anyForeignElement" />
                -->
      </xs:complexType>
      <xs:group name="anyElement">
        <xs:sequence>
          <xs:any processContents="lax" />
        </xs:sequence>
      </xs:group>
      <xs:group name="anyForeignElement">
        <xs:sequence>
          <xs:any namespace="##other" processContents="lax" />
          <xs:any namespace="##local" processContents="lax" />
        </xs:sequence>
      </xs:group>
      <!-- XHTML -->
      <xs:group name="anyXHTML">
        <xs:sequence>
          <xs:any namespace="http://www.w3.org/1999/xhtml"
                  processContents="lax" />
        </xs:sequence>
      </xs:group>
    </xs:schema>
  </wsdl:types>
</wsdl:definitions>
