//-----------------------------------------------------------------------
// Copyright (c) 2014 Microsoft Corporation. All rights reserved.
// Use of this sample source code is subject to the terms of the Microsoft license 
// agreement under which you licensed this sample source code and is provided AS-IS.
// If you did not accept the terms of the license agreement, you are not authorized 
// to use this sample source code. For the terms of the license, please see the 
// license agreement between you and Microsoft.
//-----------------------------------------------------------------------
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 

namespace Microsoft.Protocols.TestSuites.MS_OFFICIALFILE {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OfficialFileSoap", Namespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/")]
    public partial class OfficialFileSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetHoldsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinalRoutingDestinationFolderUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordRoutingCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordRoutingOperationCompleted;
        
        /// <remarks/>
        public OfficialFileSoap() {
        }
        
        /// <remarks/>
        public event GetHoldsInfoCompletedEventHandler GetHoldsInfoCompleted;
        
        /// <remarks/>
        public event GetFinalRoutingDestinationFolderUrlCompletedEventHandler GetFinalRoutingDestinationFolderUrlCompleted;
        
        /// <remarks/>
        public event SubmitFileCompletedEventHandler SubmitFileCompleted;
        
        /// <remarks/>
        public event GetServerInfoCompletedEventHandler GetServerInfoCompleted;
        
        /// <remarks/>
        public event GetRecordRoutingCollectionCompletedEventHandler GetRecordRoutingCollectionCompleted;
        
        /// <remarks/>
        public event GetRecordRoutingCompletedEventHandler GetRecordRoutingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/recordsrepository/GetHoldsInfo", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HoldInfo[] GetHoldsInfo() {
            object[] results = this.Invoke("GetHoldsInfo", new object[0]);
            return ((HoldInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHoldsInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHoldsInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public HoldInfo[] EndGetHoldsInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HoldInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHoldsInfoAsync() {
            this.GetHoldsInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetHoldsInfoAsync(object userState) {
            if ((this.GetHoldsInfoOperationCompleted == null)) {
                this.GetHoldsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHoldsInfoOperationCompleted);
            }
            this.InvokeAsync("GetHoldsInfo", new object[0], this.GetHoldsInfoOperationCompleted, userState);
        }
        
        private void OnGetHoldsInfoOperationCompleted(object arg) {
            if ((this.GetHoldsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHoldsInfoCompleted(this, new GetHoldsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/recordsrepository/GetFinalRoutingDes" +
            "tinationFolderUrl", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocumentRoutingResult GetFinalRoutingDestinationFolderUrl(RecordsRepositoryProperty[] properties, string contentTypeName, string originalSaveLocation) {
            object[] results = this.Invoke("GetFinalRoutingDestinationFolderUrl", new object[] {
                        properties,
                        contentTypeName,
                        originalSaveLocation});
            return ((DocumentRoutingResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFinalRoutingDestinationFolderUrl(RecordsRepositoryProperty[] properties, string contentTypeName, string originalSaveLocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFinalRoutingDestinationFolderUrl", new object[] {
                        properties,
                        contentTypeName,
                        originalSaveLocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocumentRoutingResult EndGetFinalRoutingDestinationFolderUrl(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocumentRoutingResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinalRoutingDestinationFolderUrlAsync(RecordsRepositoryProperty[] properties, string contentTypeName, string originalSaveLocation) {
            this.GetFinalRoutingDestinationFolderUrlAsync(properties, contentTypeName, originalSaveLocation, null);
        }
        
        /// <remarks/>
        public void GetFinalRoutingDestinationFolderUrlAsync(RecordsRepositoryProperty[] properties, string contentTypeName, string originalSaveLocation, object userState) {
            if ((this.GetFinalRoutingDestinationFolderUrlOperationCompleted == null)) {
                this.GetFinalRoutingDestinationFolderUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinalRoutingDestinationFolderUrlOperationCompleted);
            }
            this.InvokeAsync("GetFinalRoutingDestinationFolderUrl", new object[] {
                        properties,
                        contentTypeName,
                        originalSaveLocation}, this.GetFinalRoutingDestinationFolderUrlOperationCompleted, userState);
        }
        
        private void OnGetFinalRoutingDestinationFolderUrlOperationCompleted(object arg) {
            if ((this.GetFinalRoutingDestinationFolderUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinalRoutingDestinationFolderUrlCompleted(this, new GetFinalRoutingDestinationFolderUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/recordsrepository/SubmitFile", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubmitFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileToSubmit, RecordsRepositoryProperty[] properties, string recordRouting, string sourceUrl, string userName) {
            object[] results = this.Invoke("SubmitFile", new object[] {
                        fileToSubmit,
                        properties,
                        recordRouting,
                        sourceUrl,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubmitFile(byte[] fileToSubmit, RecordsRepositoryProperty[] properties, string recordRouting, string sourceUrl, string userName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubmitFile", new object[] {
                        fileToSubmit,
                        properties,
                        recordRouting,
                        sourceUrl,
                        userName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSubmitFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitFileAsync(byte[] fileToSubmit, RecordsRepositoryProperty[] properties, string recordRouting, string sourceUrl, string userName) {
            this.SubmitFileAsync(fileToSubmit, properties, recordRouting, sourceUrl, userName, null);
        }
        
        /// <remarks/>
        public void SubmitFileAsync(byte[] fileToSubmit, RecordsRepositoryProperty[] properties, string recordRouting, string sourceUrl, string userName, object userState) {
            if ((this.SubmitFileOperationCompleted == null)) {
                this.SubmitFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitFileOperationCompleted);
            }
            this.InvokeAsync("SubmitFile", new object[] {
                        fileToSubmit,
                        properties,
                        recordRouting,
                        sourceUrl,
                        userName}, this.SubmitFileOperationCompleted, userState);
        }
        
        private void OnSubmitFileOperationCompleted(object arg) {
            if ((this.SubmitFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitFileCompleted(this, new SubmitFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/recordsrepository/GetServerInfo", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServerInfo() {
            object[] results = this.Invoke("GetServerInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServerInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServerInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetServerInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerInfoAsync() {
            this.GetServerInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetServerInfoAsync(object userState) {
            if ((this.GetServerInfoOperationCompleted == null)) {
                this.GetServerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerInfoOperationCompleted);
            }
            this.InvokeAsync("GetServerInfo", new object[0], this.GetServerInfoOperationCompleted, userState);
        }
        
        private void OnGetServerInfoOperationCompleted(object arg) {
            if ((this.GetServerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerInfoCompleted(this, new GetServerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/recordsrepository/GetRecordRoutingCo" +
            "llection", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRecordRoutingCollection() {
            object[] results = this.Invoke("GetRecordRoutingCollection", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRecordRoutingCollection(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRecordRoutingCollection", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetRecordRoutingCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordRoutingCollectionAsync() {
            this.GetRecordRoutingCollectionAsync(null);
        }
        
        /// <remarks/>
        public void GetRecordRoutingCollectionAsync(object userState) {
            if ((this.GetRecordRoutingCollectionOperationCompleted == null)) {
                this.GetRecordRoutingCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordRoutingCollectionOperationCompleted);
            }
            this.InvokeAsync("GetRecordRoutingCollection", new object[0], this.GetRecordRoutingCollectionOperationCompleted, userState);
        }
        
        private void OnGetRecordRoutingCollectionOperationCompleted(object arg) {
            if ((this.GetRecordRoutingCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordRoutingCollectionCompleted(this, new GetRecordRoutingCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/recordsrepository/GetRecordRouting", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRecordRouting(string recordRouting) {
            object[] results = this.Invoke("GetRecordRouting", new object[] {
                        recordRouting});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRecordRouting(string recordRouting, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRecordRouting", new object[] {
                        recordRouting}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetRecordRouting(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordRoutingAsync(string recordRouting) {
            this.GetRecordRoutingAsync(recordRouting, null);
        }
        
        /// <remarks/>
        public void GetRecordRoutingAsync(string recordRouting, object userState) {
            if ((this.GetRecordRoutingOperationCompleted == null)) {
                this.GetRecordRoutingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordRoutingOperationCompleted);
            }
            this.InvokeAsync("GetRecordRouting", new object[] {
                        recordRouting}, this.GetRecordRoutingOperationCompleted, userState);
        }
        
        private void OnGetRecordRoutingOperationCompleted(object arg) {
            if ((this.GetRecordRoutingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordRoutingCompleted(this, new GetRecordRoutingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }

    /// <summary>
    /// The server information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.microsoft.com/sharepoint/soap/recordsrepository/")]
    public partial class ServerInfo
    {

        private string serverTypeField;

        private string serverVersionField;

        private string routingWebField;

        /// <summary>
        /// The type information for the protocol server.
        /// </summary>
        public string ServerType
        {
            get
            {
                return this.serverTypeField;
            }
            set
            {
                this.serverTypeField = value;
            }
        }

        /// <summary>
        /// The version information for the protocol server.
        /// </summary>
        public string ServerVersion
        {
            get
            {
                return this.serverVersionField;
            }
            set
            {
                this.serverVersionField = value;
            }
        }

        /// <summary>
        /// Whether the protocol server is configured for routing.
        /// </summary>
        public string RoutingWeb
        {
            get
            {
                return this.routingWebField;
            }
            set
            {
                this.routingWebField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/")]
    public partial class HoldInfo {
        
        private string urlField;
        
        private string titleField;
        
        private string descriptionField;
        
        private string managedByField;
        
        private string repositoryNameField;
        
        private string discoveryQueriesField;
        
        private int idField;
        
        private System.Guid listIdField;
        
        private System.Guid webIdField;
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ManagedBy {
            get {
                return this.managedByField;
            }
            set {
                this.managedByField = value;
            }
        }
        
        /// <remarks/>
        public string RepositoryName {
            get {
                return this.repositoryNameField;
            }
            set {
                this.repositoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string DiscoveryQueries {
            get {
                return this.discoveryQueriesField;
            }
            set {
                this.discoveryQueriesField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ListId {
            get {
                return this.listIdField;
            }
            set {
                this.listIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid WebId {
            get {
                return this.webIdField;
            }
            set {
                this.webIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/")]
    public partial class DocumentRoutingResult {
        
        private string urlField;
        
        private DocumentRoutingResultType resultTypeField;
        
        private DocumentRoutingCollisionSetting collisionSettingField;
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public DocumentRoutingResultType ResultType {
            get {
                return this.resultTypeField;
            }
            set {
                this.resultTypeField = value;
            }
        }
        
        /// <remarks/>
        public DocumentRoutingCollisionSetting CollisionSetting {
            get {
                return this.collisionSettingField;
            }
            set {
                this.collisionSettingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/")]
    public enum DocumentRoutingResultType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        SuccessToDropOffLibrary,
        
        /// <remarks/>
        MissingRequiredProperties,
        
        /// <remarks/>
        NoMatchingRules,
        
        /// <remarks/>
        DocumentRoutingDisabled,
        
        /// <remarks/>
        PermissionDeniedAtDestination,
        
        /// <remarks/>
        ParsingDisabledAtDestination,
        
        /// <remarks/>
        OriginalSaveLocationIsDocumentSet,
        
        /// <remarks/>
        NoEnforcementAtOriginalSaveLocation,
        
        /// <remarks/>
        UnknownFailure,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/")]
    public enum DocumentRoutingCollisionSetting {
        
        /// <remarks/>
        NoCollision,
        
        /// <remarks/>
        UseSharePointVersioning,
        
        /// <remarks/>
        AppendUniqueSuffixes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/recordsrepository/")]
    public partial class RecordsRepositoryProperty {
        
        private string nameField;
        
        private string displayNameField;
        
        private string valueField;
        
        private string typeField;
        
        private string otherField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Other {
            get {
                return this.otherField;
            }
            set {
                this.otherField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetHoldsInfoCompletedEventHandler(object sender, GetHoldsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHoldsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHoldsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HoldInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HoldInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetFinalRoutingDestinationFolderUrlCompletedEventHandler(object sender, GetFinalRoutingDestinationFolderUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinalRoutingDestinationFolderUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinalRoutingDestinationFolderUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentRoutingResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentRoutingResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SubmitFileCompletedEventHandler(object sender, SubmitFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetServerInfoCompletedEventHandler(object sender, GetServerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetRecordRoutingCollectionCompletedEventHandler(object sender, GetRecordRoutingCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordRoutingCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordRoutingCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetRecordRoutingCompletedEventHandler(object sender, GetRecordRoutingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordRoutingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordRoutingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
